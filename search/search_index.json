{"config":{"indexing":"full","lang":["en","jp"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Mirai Python Loader \u57fa\u4e8eMirai Conole Loader \u4e0e Mirai-Api-Http \u6253\u9020\u7684Mirai-Python\u63d2\u4ef6\u52a0\u8f7d\u6846\u67b6 \u7279\u6027 \u8f7b\u91cf\u5316\uff0c\u8d44\u6e90\u5f00\u9500\u5c11 \u652f\u6301\u591aBot\u767b\u5f55\uff0c\u6389\u7ebf\u81ea\u52a8\u91cd\u8fde \u5404\u63d2\u4ef6\u95f4\u6587\u4ef6\uff0c\u65e5\u5fd7\uff0c\u914d\u7f6e\uff0c\u6570\u636e\u5e93\u5206\u79bb\uff0c\u65b9\u4fbf\u7edf\u4e00\u7ba1\u7406 \u63d2\u4ef6\u5f00\u53d1\u65b9\u4fbf \u53ea\u9700\u624b\u6572\u4e24\u884c\u4ee3\u7801\u5373\u53ef\u5b8c\u6210\u6700\u7b80\u5355\u7684\u63d2\u4ef6\uff01 \u4f7f\u7528\u5f00\u53d1\u5305\u5728\u9879\u76ee\u4e2d\u751f\u6210\u63d2\u4ef6\u9879\u76ee\u6a21\u677f F:\\\u9879\u76ee\\MyPlugin>python -m mplapi -n MyPlugin \u91cd\u5199PyPlugin\u7c7b\u65b9\u6cd5 async def get_group_msg(self, bot: Bot, source: msg.Source, message: msg.MsgChain): bot.send_group_msg(msg.PlainMsg('Hello,World'), source.group) \u652f\u6301","title":"\u4e3b\u9875"},{"location":"#mirai-python-loader","text":"\u57fa\u4e8eMirai Conole Loader \u4e0e Mirai-Api-Http \u6253\u9020\u7684Mirai-Python\u63d2\u4ef6\u52a0\u8f7d\u6846\u67b6","title":"Mirai Python Loader"},{"location":"#_1","text":"\u8f7b\u91cf\u5316\uff0c\u8d44\u6e90\u5f00\u9500\u5c11 \u652f\u6301\u591aBot\u767b\u5f55\uff0c\u6389\u7ebf\u81ea\u52a8\u91cd\u8fde \u5404\u63d2\u4ef6\u95f4\u6587\u4ef6\uff0c\u65e5\u5fd7\uff0c\u914d\u7f6e\uff0c\u6570\u636e\u5e93\u5206\u79bb\uff0c\u65b9\u4fbf\u7edf\u4e00\u7ba1\u7406","title":"\u7279\u6027"},{"location":"#_2","text":"\u53ea\u9700\u624b\u6572\u4e24\u884c\u4ee3\u7801\u5373\u53ef\u5b8c\u6210\u6700\u7b80\u5355\u7684\u63d2\u4ef6\uff01 \u4f7f\u7528\u5f00\u53d1\u5305\u5728\u9879\u76ee\u4e2d\u751f\u6210\u63d2\u4ef6\u9879\u76ee\u6a21\u677f F:\\\u9879\u76ee\\MyPlugin>python -m mplapi -n MyPlugin \u91cd\u5199PyPlugin\u7c7b\u65b9\u6cd5 async def get_group_msg(self, bot: Bot, source: msg.Source, message: msg.MsgChain): bot.send_group_msg(msg.PlainMsg('Hello,World'), source.group)","title":"\u63d2\u4ef6\u5f00\u53d1\u65b9\u4fbf"},{"location":"#_3","text":"","title":"\u652f\u6301"},{"location":"developer/base/","text":"Bot\u7c7b Bot\u7c7b\u662f\u4f60\u7684\u63d2\u4ef6\u4e0emirai\uff08qq\uff09\u901a\u4fe1\u7684\u6865\u6881\uff0c\u7531MPL\u5b9e\u4f8b\u5316\u5e76\u4f20\u9012\u5230\u4f60\u7684\u63d2\u4ef6\u4e2d\uff0c\u901a\u8fc7\u5bf9\u8c61\u65b9\u6cd5\u8fdb\u884c\u53d1\u9001\u6d88\u606f\u7b49\u4ea4\u4e92\u64cd\u4f5c PyPlugin\u7c7b plugin\u6a21\u5757\u4e0b\u7684PyPlugin\u7c7b\uff0c\u5c01\u88c5\u4e86MPL\u63d2\u4ef6\u7684\u529f\u80fd\uff0c\u4f60\u9700\u8981\u7ee7\u627fPyPlugin\u7c7b\uff0c\u6765\u5b9a\u4e49\u4f60\u7684\u63d2\u4ef6 \u6ce8\u610f\uff0c\u5fc5\u987b\u5728__init__.py\u6587\u4ef6\u4e2d\u5b9a\u4e49\u4f60\u7684\u63d2\u4ef6\u7c7b \u901a\u8fc7\u91cd\u5199PyPlugin\u7c7b\u7684\u62bd\u8c61\u65b9\u6cd5\uff0c\u5b9e\u73b0\u63d2\u4ef6\u7684\u529f\u80fd \u5728 version \u65b9\u6cd5\u4e2d\u5b9a\u4e49\u4f60\u7684\u63d2\u4ef6\u7248\u672c\uff0c\u4f7f\u7528x.y.z\u89c4\u8303 @property def version(self) -> tuple[int, int, int]: return 0,0,1 on_create \u65b9\u6cd5\u5728MPL\u52a0\u8f7d\u4f60\u7684\u63d2\u4ef6\u65f6\u8c03\u7528 def on_create(self): self.get_logger().info('\u5df2\u52a0\u8f7d\u6211\u7684\u63d2\u4ef6\uff01') # \u8f93\u51fa\u65e5\u5fd7\u5230\u63a7\u5236\u53f0 \u6bcf\u5f53\u4e00\u4e2abot\u767b\u5f55\u65f6\uff0c\u90fd\u4f1a\u8c03\u7528\u4e00\u6b21 on_login \u65b9\u6cd5\uff0c\u4f60\u5fc5\u987b\u901a\u8fc7Bot\u5bf9\u8c61\u4e2d\u7684 register_plugin \u65b9\u6cd5\u5728\u8fd9\u4e2abot\u4e2d\u6ce8\u518c\u4f60\u7684\u63d2\u4ef6 async def on_login(self, bot: Bot): bot.register_plugin(self) # \u6ce8\u518c\u4f60\u7684\u63d2\u4ef6\u5230Bot self.get_logger().info(f'\u5728Bot:{bot.bot_qq} \u4e2d\u6ce8\u518c\u4e86\u6211\u7684\u63d2\u4ef6\uff01') \u4e0d\u7ba1bot\u4f55\u79cd\u65b9\u5f0f\u767b\u51fa\uff08\u5305\u62ec\u88ab\u5c01\u7981\uff0c\u5f3a\u5236\u9000\u51famcl\uff09\uff0c\u90fd\u4f1a\u8c03\u7528 on_logout \u65b9\u6cd5 async def on_logout(self, bot: Bot): self.get_logger().info(f'Bot:{bot.bot_qq} \u767b\u51fa\uff01') MPL\u63a5\u6536\u7684\u6d88\u606f\u53d1\u9001\u8005\u53ef\u5206\u4e3a\u4e09\u7c7b group\uff08\u7fa4\u804a\u6d88\u606f\uff09 friend\uff08\u597d\u53cb\u79c1\u804a\u6d88\u606f\uff09 admin\uff08\u63d2\u4ef6\u7ba1\u7406\u5458\u7684\u6d88\u606f\uff09\u63d2\u4ef6\u7ba1\u7406\u5458\u5c06\u5728 Permission \u4e2d\u8bf4\u660e \u901a\u8fc7\u5b9e\u73b0\u4ee5\u4e0b\u4e09\u4e2a\u65b9\u6cd5\u6765\u5b9e\u73b0\u4f60\u7684\u63d2\u4ef6\u529f\u80fd async def get_group_msg(self, bot: Bot, source: msg.Source, message: msg.MsgChain): self.get_logger().info(f'\u6536\u5230\u4e86\u6765\u81ea\u7fa4{source.group} {source.sender}\u53d1\u9001\u7684\u6d88\u606f') async def get_friend_msg(self, bot: Bot, source: msg.Source, message: msg.MsgChain): self.get_logger().info(f'\u6536\u5230\u4e86\u6765\u81ea\u597d\u53cb{source.sender}\u53d1\u9001\u7684\u6d88\u606f') async def get_admin_msg(self, bot: Bot, source: msg.Source, message: msg.MsgChain): self.get_logger().info(f'\u6536\u5230\u4e86\u6765\u81ea\u7ba1\u7406\u5458{source.sender}\u53d1\u9001\u7684\u6d88\u606f') Msg\u7c7b MPL\u6536\u53d1\u7684\u6240\u6709\u6d88\u606f\uff0c\u90fd\u662fMsg\u7c7b\u7684\u5b50\u7c7b\uff0c\u4ee5\u4e0b\u4ecb\u7ecd\u51e0\u4e2a\u5e38\u89c1\u7684\u5b50\u7c7b PlainMsg(\u6587\u672c\u6d88\u606f) \u8fd9\u662f\u4e00\u4e2a\u6587\u672c\u6d88\u606f\uff0c\u6d88\u606f\u7684\u6587\u672c\u5b58\u653e\u4e8ePlainMsg\u7c7b\u7684text\u5b57\u6bb5\u4e2d \u4f60\u53ef\u4ee5\u901a\u8fc7\u5b9e\u4f8b\u5316\u8be5\u7c7b\uff0c\u6765\u521b\u5efa\u4e00\u4e2a\u6587\u672c\u6d88\u606f bot:Bot # bot\u4e3aBot\u7c7b\u5bf9\u8c61 text_msg = msg.PlainMsg('Hello,World') # \u521b\u5efa\u4e00\u4e2aHello World\u6587\u672c\u6d88\u606f bot.send_group_msg(text_msg, group) # \u53d1\u9001\u8be5\u6d88\u606f\u81f3\u7fa4group ImageMsg(\u56fe\u7247\u6d88\u606f) \u8fd9\u662f\u4e00\u4e2a\u56fe\u7247\u6d88\u606f MPL\u652f\u6301\u901a\u8fc7url\u3001base64\u5b57\u7b26\u4e32\u3001\u8def\u5f84\uff08\u76f8\u5bf9\u8def\u5f84\u6307\u5411mcl\u8fd0\u884c\u76ee\u5f55\uff0c\u7edd\u5bf9\u8def\u5f84\u6307\u5411mcl\u8fd0\u884c\u7684\u670d\u52a1\u5668/\u4e3b\u673a\uff0c\u56e0\u6b64\u4e0d\u63a8\u8350\u4f7f\u7528\uff09\u6765\u521b\u5efa\u56fe\u7247\u6d88\u606f \u8bf7\u6ce8\u610f\uff0c\u63a5\u6536\u7684\u56fe\u7247\u6d88\u606f\u53ea\u6709url\u5c5e\u6027 bot:Bot # bot\u4e3aBot\u7c7b\u5bf9\u8c61 img_msg = msg.ImageMsg('http://image-url', msg.ImageMsg.URL) # \u901a\u8fc7url\u521b\u5efa\u4e00\u4e2a\u56fe\u7247\u6d88\u606f bot.send_group_msg(img_msg, group) # \u53d1\u9001\u8be5\u6d88\u606f\u81f3\u7fa4group MsgChain(\u6d88\u606f\u94fe) \u6d88\u606f\u53ef\u4ee5\u662f\u6587\u672c\uff0c\u4e5f\u53ef\u4ee5\u662f\u56fe\u7247\uff0c\u6216\u5176\u4ed6\u3002\u5982\u679c\u5f53\u4e00\u4e2a\u6d88\u606f\u65e2\u6709\u6587\u672c\u53c8\u6709\u56fe\u7247\u65f6\uff0c\u5c31\u9700\u8981\u4e00\u4e2a\u8f7d\u4f53\u6765\u5305\u88c5\u8fd9\u4e2a\u6d88\u606f\uff0cMsgChain\u5c31\u8d77\u5230\u4e86\u8fd9\u4e2a\u8f7d\u4f53\u7684\u4f5c\u7528\uff0c\u5b83\u662f\u4e00\u4e2a\u6709\u5e8f\u7684\u6d88\u606f\u96c6\u5408\u3002 \u63a5\u6536\u7684\u6d88\u606f\u65e0\u8bba\u5982\u4f55\u90fd\u4f1a\u88abMsgChain\u6240\u5305\u88c5\uff0c\u901a\u8fc7\u5176\u4e2d\u7684get\u65b9\u6cd5\u6765\u83b7\u53d6\u5bf9\u5e94\u7684\u6d88\u606f message: msg.MsgChain # \u63a5\u6536\u7684\u6d88\u606f text_msg_list = message.get_plain_msg() # \u83b7\u53d6\u6d88\u606f\u94fe\u4e2d\u6240\u6709\u7684\u6587\u672c\u6d88\u606f for text_msg in text_msg_list: # \u904d\u5386\u6240\u6709\u6587\u672c\u6d88\u606f text = text_msg.text self.get_logger().info(f'\u63a5\u6536\u5230\u4e86\u6587\u672c\u6d88\u606f:{text}') bot:Bot # bot\u4e3aBot\u7c7b\u5bf9\u8c61 chain = msg.MsgChain() # \u521b\u5efa\u4e00\u4e2a\u6d88\u606f\u94fe text_msg = msg.PlainMsg('Hello,World') # \u521b\u5efa\u4e00\u4e2aHello World\u6587\u672c\u6d88\u606f img_msg = msg.ImageMsg('http://image-url', msg.ImageMsg.URL) # \u901a\u8fc7url\u521b\u5efa\u4e00\u4e2a\u56fe\u7247\u6d88\u606f chain.add_msg(text_msg) # \u5c06\u6587\u672c\u6d88\u606f\u6dfb\u52a0\u5230\u6d88\u606f\u94fe\u4e2d chain.add_msg(img_msg) # \u5c06\u56fe\u7247\u6d88\u606f\u6dfb\u52a0\u5230\u6d88\u606f\u94fe\u4e2d bot.send_group_msg(chain, group) # \u53d1\u9001\u8be5\u6d88\u606f\u94fe\u81f3\u7fa4group","title":"\u57fa\u672c\u5f00\u53d1"},{"location":"developer/base/#bot","text":"Bot\u7c7b\u662f\u4f60\u7684\u63d2\u4ef6\u4e0emirai\uff08qq\uff09\u901a\u4fe1\u7684\u6865\u6881\uff0c\u7531MPL\u5b9e\u4f8b\u5316\u5e76\u4f20\u9012\u5230\u4f60\u7684\u63d2\u4ef6\u4e2d\uff0c\u901a\u8fc7\u5bf9\u8c61\u65b9\u6cd5\u8fdb\u884c\u53d1\u9001\u6d88\u606f\u7b49\u4ea4\u4e92\u64cd\u4f5c","title":"Bot\u7c7b"},{"location":"developer/base/#pyplugin","text":"plugin\u6a21\u5757\u4e0b\u7684PyPlugin\u7c7b\uff0c\u5c01\u88c5\u4e86MPL\u63d2\u4ef6\u7684\u529f\u80fd\uff0c\u4f60\u9700\u8981\u7ee7\u627fPyPlugin\u7c7b\uff0c\u6765\u5b9a\u4e49\u4f60\u7684\u63d2\u4ef6 \u6ce8\u610f\uff0c\u5fc5\u987b\u5728__init__.py\u6587\u4ef6\u4e2d\u5b9a\u4e49\u4f60\u7684\u63d2\u4ef6\u7c7b \u901a\u8fc7\u91cd\u5199PyPlugin\u7c7b\u7684\u62bd\u8c61\u65b9\u6cd5\uff0c\u5b9e\u73b0\u63d2\u4ef6\u7684\u529f\u80fd \u5728 version \u65b9\u6cd5\u4e2d\u5b9a\u4e49\u4f60\u7684\u63d2\u4ef6\u7248\u672c\uff0c\u4f7f\u7528x.y.z\u89c4\u8303 @property def version(self) -> tuple[int, int, int]: return 0,0,1 on_create \u65b9\u6cd5\u5728MPL\u52a0\u8f7d\u4f60\u7684\u63d2\u4ef6\u65f6\u8c03\u7528 def on_create(self): self.get_logger().info('\u5df2\u52a0\u8f7d\u6211\u7684\u63d2\u4ef6\uff01') # \u8f93\u51fa\u65e5\u5fd7\u5230\u63a7\u5236\u53f0 \u6bcf\u5f53\u4e00\u4e2abot\u767b\u5f55\u65f6\uff0c\u90fd\u4f1a\u8c03\u7528\u4e00\u6b21 on_login \u65b9\u6cd5\uff0c\u4f60\u5fc5\u987b\u901a\u8fc7Bot\u5bf9\u8c61\u4e2d\u7684 register_plugin \u65b9\u6cd5\u5728\u8fd9\u4e2abot\u4e2d\u6ce8\u518c\u4f60\u7684\u63d2\u4ef6 async def on_login(self, bot: Bot): bot.register_plugin(self) # \u6ce8\u518c\u4f60\u7684\u63d2\u4ef6\u5230Bot self.get_logger().info(f'\u5728Bot:{bot.bot_qq} \u4e2d\u6ce8\u518c\u4e86\u6211\u7684\u63d2\u4ef6\uff01') \u4e0d\u7ba1bot\u4f55\u79cd\u65b9\u5f0f\u767b\u51fa\uff08\u5305\u62ec\u88ab\u5c01\u7981\uff0c\u5f3a\u5236\u9000\u51famcl\uff09\uff0c\u90fd\u4f1a\u8c03\u7528 on_logout \u65b9\u6cd5 async def on_logout(self, bot: Bot): self.get_logger().info(f'Bot:{bot.bot_qq} \u767b\u51fa\uff01') MPL\u63a5\u6536\u7684\u6d88\u606f\u53d1\u9001\u8005\u53ef\u5206\u4e3a\u4e09\u7c7b group\uff08\u7fa4\u804a\u6d88\u606f\uff09 friend\uff08\u597d\u53cb\u79c1\u804a\u6d88\u606f\uff09 admin\uff08\u63d2\u4ef6\u7ba1\u7406\u5458\u7684\u6d88\u606f\uff09\u63d2\u4ef6\u7ba1\u7406\u5458\u5c06\u5728 Permission \u4e2d\u8bf4\u660e \u901a\u8fc7\u5b9e\u73b0\u4ee5\u4e0b\u4e09\u4e2a\u65b9\u6cd5\u6765\u5b9e\u73b0\u4f60\u7684\u63d2\u4ef6\u529f\u80fd async def get_group_msg(self, bot: Bot, source: msg.Source, message: msg.MsgChain): self.get_logger().info(f'\u6536\u5230\u4e86\u6765\u81ea\u7fa4{source.group} {source.sender}\u53d1\u9001\u7684\u6d88\u606f') async def get_friend_msg(self, bot: Bot, source: msg.Source, message: msg.MsgChain): self.get_logger().info(f'\u6536\u5230\u4e86\u6765\u81ea\u597d\u53cb{source.sender}\u53d1\u9001\u7684\u6d88\u606f') async def get_admin_msg(self, bot: Bot, source: msg.Source, message: msg.MsgChain): self.get_logger().info(f'\u6536\u5230\u4e86\u6765\u81ea\u7ba1\u7406\u5458{source.sender}\u53d1\u9001\u7684\u6d88\u606f')","title":"PyPlugin\u7c7b"},{"location":"developer/base/#msg","text":"MPL\u6536\u53d1\u7684\u6240\u6709\u6d88\u606f\uff0c\u90fd\u662fMsg\u7c7b\u7684\u5b50\u7c7b\uff0c\u4ee5\u4e0b\u4ecb\u7ecd\u51e0\u4e2a\u5e38\u89c1\u7684\u5b50\u7c7b","title":"Msg\u7c7b"},{"location":"developer/base/#plainmsg","text":"\u8fd9\u662f\u4e00\u4e2a\u6587\u672c\u6d88\u606f\uff0c\u6d88\u606f\u7684\u6587\u672c\u5b58\u653e\u4e8ePlainMsg\u7c7b\u7684text\u5b57\u6bb5\u4e2d \u4f60\u53ef\u4ee5\u901a\u8fc7\u5b9e\u4f8b\u5316\u8be5\u7c7b\uff0c\u6765\u521b\u5efa\u4e00\u4e2a\u6587\u672c\u6d88\u606f bot:Bot # bot\u4e3aBot\u7c7b\u5bf9\u8c61 text_msg = msg.PlainMsg('Hello,World') # \u521b\u5efa\u4e00\u4e2aHello World\u6587\u672c\u6d88\u606f bot.send_group_msg(text_msg, group) # \u53d1\u9001\u8be5\u6d88\u606f\u81f3\u7fa4group","title":"PlainMsg(\u6587\u672c\u6d88\u606f)"},{"location":"developer/base/#imagemsg","text":"\u8fd9\u662f\u4e00\u4e2a\u56fe\u7247\u6d88\u606f MPL\u652f\u6301\u901a\u8fc7url\u3001base64\u5b57\u7b26\u4e32\u3001\u8def\u5f84\uff08\u76f8\u5bf9\u8def\u5f84\u6307\u5411mcl\u8fd0\u884c\u76ee\u5f55\uff0c\u7edd\u5bf9\u8def\u5f84\u6307\u5411mcl\u8fd0\u884c\u7684\u670d\u52a1\u5668/\u4e3b\u673a\uff0c\u56e0\u6b64\u4e0d\u63a8\u8350\u4f7f\u7528\uff09\u6765\u521b\u5efa\u56fe\u7247\u6d88\u606f \u8bf7\u6ce8\u610f\uff0c\u63a5\u6536\u7684\u56fe\u7247\u6d88\u606f\u53ea\u6709url\u5c5e\u6027 bot:Bot # bot\u4e3aBot\u7c7b\u5bf9\u8c61 img_msg = msg.ImageMsg('http://image-url', msg.ImageMsg.URL) # \u901a\u8fc7url\u521b\u5efa\u4e00\u4e2a\u56fe\u7247\u6d88\u606f bot.send_group_msg(img_msg, group) # \u53d1\u9001\u8be5\u6d88\u606f\u81f3\u7fa4group","title":"ImageMsg(\u56fe\u7247\u6d88\u606f)"},{"location":"developer/base/#msgchain","text":"\u6d88\u606f\u53ef\u4ee5\u662f\u6587\u672c\uff0c\u4e5f\u53ef\u4ee5\u662f\u56fe\u7247\uff0c\u6216\u5176\u4ed6\u3002\u5982\u679c\u5f53\u4e00\u4e2a\u6d88\u606f\u65e2\u6709\u6587\u672c\u53c8\u6709\u56fe\u7247\u65f6\uff0c\u5c31\u9700\u8981\u4e00\u4e2a\u8f7d\u4f53\u6765\u5305\u88c5\u8fd9\u4e2a\u6d88\u606f\uff0cMsgChain\u5c31\u8d77\u5230\u4e86\u8fd9\u4e2a\u8f7d\u4f53\u7684\u4f5c\u7528\uff0c\u5b83\u662f\u4e00\u4e2a\u6709\u5e8f\u7684\u6d88\u606f\u96c6\u5408\u3002 \u63a5\u6536\u7684\u6d88\u606f\u65e0\u8bba\u5982\u4f55\u90fd\u4f1a\u88abMsgChain\u6240\u5305\u88c5\uff0c\u901a\u8fc7\u5176\u4e2d\u7684get\u65b9\u6cd5\u6765\u83b7\u53d6\u5bf9\u5e94\u7684\u6d88\u606f message: msg.MsgChain # \u63a5\u6536\u7684\u6d88\u606f text_msg_list = message.get_plain_msg() # \u83b7\u53d6\u6d88\u606f\u94fe\u4e2d\u6240\u6709\u7684\u6587\u672c\u6d88\u606f for text_msg in text_msg_list: # \u904d\u5386\u6240\u6709\u6587\u672c\u6d88\u606f text = text_msg.text self.get_logger().info(f'\u63a5\u6536\u5230\u4e86\u6587\u672c\u6d88\u606f:{text}') bot:Bot # bot\u4e3aBot\u7c7b\u5bf9\u8c61 chain = msg.MsgChain() # \u521b\u5efa\u4e00\u4e2a\u6d88\u606f\u94fe text_msg = msg.PlainMsg('Hello,World') # \u521b\u5efa\u4e00\u4e2aHello World\u6587\u672c\u6d88\u606f img_msg = msg.ImageMsg('http://image-url', msg.ImageMsg.URL) # \u901a\u8fc7url\u521b\u5efa\u4e00\u4e2a\u56fe\u7247\u6d88\u606f chain.add_msg(text_msg) # \u5c06\u6587\u672c\u6d88\u606f\u6dfb\u52a0\u5230\u6d88\u606f\u94fe\u4e2d chain.add_msg(img_msg) # \u5c06\u56fe\u7247\u6d88\u606f\u6dfb\u52a0\u5230\u6d88\u606f\u94fe\u4e2d bot.send_group_msg(chain, group) # \u53d1\u9001\u8be5\u6d88\u606f\u94fe\u81f3\u7fa4group","title":"MsgChain(\u6d88\u606f\u94fe)"},{"location":"developer/config/","text":"\u63d2\u4ef6\u5f80\u5f80\u9700\u8981\u4fdd\u5b58\u548c\u83b7\u53d6\u4e00\u4e9b\u81ea\u5b9a\u4e49\u7684\u914d\u7f6e\u4fe1\u606f MPL\u7edf\u4e00\u7ba1\u7406\u4e86\u6240\u6709\u63d2\u4ef6\u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u5e76\u5728PyPlugin\u4e2d\u63d0\u4f9b\u4e86\u64cd\u4f5c\u914d\u7f6e\u6587\u4ef6\u7684\u65b9\u6cd5 \u83b7\u53d6\u914d\u7f6e\u4fe1\u606f \u4f7f\u7528 PyPlugin \u7c7b\u7684 get_config \u65b9\u6cd5 def get_config(self, conf_name:str = 'plugin') -> dict: pass get_config \u65b9\u6cd5\u63a5\u6536\u4e00\u4e2a\u53c2\u6570\uff1a conf_name :\u914d\u7f6e\u6587\u4ef6\u540d\uff0c\u9ed8\u8ba4\u503c\u4e3a \u2018plugin\u2019 \u8fd4\u56de\u4e00\u4e2a\u5b57\u5178\u5bf9\u8c61 class MyPluginClass(PyPlugin): async def on_login(self, bot: Bot): conf = self.get_config() \u4fdd\u5b58\u914d\u7f6e\u4fe1\u606f \u4f7f\u7528 PyPlugin \u7c7b\u7684 set_config \u65b9\u6cd5 def set_config(self, conf:dict, conf_name:str = 'plugin'): pass set_config \u65b9\u6cd5\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff1a conf :\u914d\u7f6e\u4fe1\u606f conf_name :\u914d\u7f6e\u6587\u4ef6\u540d\uff0c\u9ed8\u8ba4\u503c\u4e3a \u2018plugin\u2019 class MyPluginClass(PyPlugin): async def on_login(self, bot: Bot): conf = self.get_config() # \u83b7\u53d6\u914d\u7f6e\u6587\u4ef6 conf[bot.bot_qq] = bot.login_time # \u66f4\u6539\u4e00\u4e9b\u914d\u7f6e self.set_config(conf) # \u4fdd\u5b58\u914d\u7f6e \u66f4\u6539\u5b8c\u540e\u8bf7\u4e00\u5b9a\u8981\u4f7f\u7528 set_config \u65b9\u6cd5\u4fdd\u5b58\u4f60\u66f4\u6539\u540e\u7684\u914d\u7f6e \u5426\u5219\u5f53MPL\u91cd\u542f\u540e\uff0c\u914d\u7f6e\u6587\u4ef6\u5c06\u4e0d\u4f1a\u88ab\u6539\u53d8 \u914d\u7f6e\u6587\u4ef6\u76ee\u5f55\uff1a MPL\u76ee\u5f55/conf/\u63d2\u4ef6\u540d/","title":"\u914d\u7f6e"},{"location":"developer/config/#_1","text":"\u4f7f\u7528 PyPlugin \u7c7b\u7684 get_config \u65b9\u6cd5 def get_config(self, conf_name:str = 'plugin') -> dict: pass get_config \u65b9\u6cd5\u63a5\u6536\u4e00\u4e2a\u53c2\u6570\uff1a conf_name :\u914d\u7f6e\u6587\u4ef6\u540d\uff0c\u9ed8\u8ba4\u503c\u4e3a \u2018plugin\u2019 \u8fd4\u56de\u4e00\u4e2a\u5b57\u5178\u5bf9\u8c61 class MyPluginClass(PyPlugin): async def on_login(self, bot: Bot): conf = self.get_config()","title":"\u83b7\u53d6\u914d\u7f6e\u4fe1\u606f"},{"location":"developer/config/#_2","text":"\u4f7f\u7528 PyPlugin \u7c7b\u7684 set_config \u65b9\u6cd5 def set_config(self, conf:dict, conf_name:str = 'plugin'): pass set_config \u65b9\u6cd5\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff1a conf :\u914d\u7f6e\u4fe1\u606f conf_name :\u914d\u7f6e\u6587\u4ef6\u540d\uff0c\u9ed8\u8ba4\u503c\u4e3a \u2018plugin\u2019 class MyPluginClass(PyPlugin): async def on_login(self, bot: Bot): conf = self.get_config() # \u83b7\u53d6\u914d\u7f6e\u6587\u4ef6 conf[bot.bot_qq] = bot.login_time # \u66f4\u6539\u4e00\u4e9b\u914d\u7f6e self.set_config(conf) # \u4fdd\u5b58\u914d\u7f6e \u66f4\u6539\u5b8c\u540e\u8bf7\u4e00\u5b9a\u8981\u4f7f\u7528 set_config \u65b9\u6cd5\u4fdd\u5b58\u4f60\u66f4\u6539\u540e\u7684\u914d\u7f6e \u5426\u5219\u5f53MPL\u91cd\u542f\u540e\uff0c\u914d\u7f6e\u6587\u4ef6\u5c06\u4e0d\u4f1a\u88ab\u6539\u53d8 \u914d\u7f6e\u6587\u4ef6\u76ee\u5f55\uff1a MPL\u76ee\u5f55/conf/\u63d2\u4ef6\u540d/","title":"\u4fdd\u5b58\u914d\u7f6e\u4fe1\u606f"},{"location":"developer/db/","text":"MPL\u5185\u7f6e\u4e86sqlite\u6570\u636e\u5e93\u4e14\u8fdb\u884c\u7edf\u4e00\u7ba1\u7406\uff0c\u5728 PyPlugin \u4e2d\u63d0\u4f9b\u4e86\u8fde\u63a5\u65b9\u6cd5 \u8fde\u63a5\u6570\u636e\u5e93 \u4f7f\u7528 PyPlugin \u7c7b\u7684 get_database \u65b9\u6cd5 def get_database(self, db_name='database') -> sqlite3.Connection: pass get_database \u65b9\u6cd5\u63a5\u6536\u4e00\u4e2a\u53c2\u6570 db_name :\u6570\u636e\u5e93\u540d\u79f0\uff0c\u9ed8\u8ba4\u503c 'database' \uff08\u4e0d\u9700\u8981.db\u540e\u7f00\uff09 \u8fd4\u56de sqlite3.Connection \u6570\u636e\u5e93\u8fde\u63a5\u5bf9\u8c61 class MyPluginClass(PyPlugin): async def on_login(self, bot: Bot): db_conn = self.get_database() cursor = db_conn.cursor() sql = 'CREATE TABLE IF NOT EXISTS user(qq integer PRIMARY KEY, conf text)' cursor.execute(sql) db_conn.commit() db_conn.close() # \u5207\u8bb0\u6700\u540e\u65ad\u5f00\u6570\u636e\u5e93\u8fde\u63a5 \u6570\u636e\u5e93\u4fdd\u5b58\u76ee\u5f55\uff1a MPL\u76ee\u5f55/data/\u63d2\u4ef6\u540d/","title":"\u8fde\u63a5\u6570\u636e\u5e93"},{"location":"developer/db/#_1","text":"\u4f7f\u7528 PyPlugin \u7c7b\u7684 get_database \u65b9\u6cd5 def get_database(self, db_name='database') -> sqlite3.Connection: pass get_database \u65b9\u6cd5\u63a5\u6536\u4e00\u4e2a\u53c2\u6570 db_name :\u6570\u636e\u5e93\u540d\u79f0\uff0c\u9ed8\u8ba4\u503c 'database' \uff08\u4e0d\u9700\u8981.db\u540e\u7f00\uff09 \u8fd4\u56de sqlite3.Connection \u6570\u636e\u5e93\u8fde\u63a5\u5bf9\u8c61 class MyPluginClass(PyPlugin): async def on_login(self, bot: Bot): db_conn = self.get_database() cursor = db_conn.cursor() sql = 'CREATE TABLE IF NOT EXISTS user(qq integer PRIMARY KEY, conf text)' cursor.execute(sql) db_conn.commit() db_conn.close() # \u5207\u8bb0\u6700\u540e\u65ad\u5f00\u6570\u636e\u5e93\u8fde\u63a5 \u6570\u636e\u5e93\u4fdd\u5b58\u76ee\u5f55\uff1a MPL\u76ee\u5f55/data/\u63d2\u4ef6\u540d/","title":"\u8fde\u63a5\u6570\u636e\u5e93"},{"location":"developer/exception/","text":"\u5173\u4e8e\u5f02\u6b65\u65b9\u6cd5\u629b\u51fa\u7684\u5f02\u5e38 \u5728 PyPlugin \u548c PluginTask \u4e2d\uff0c\u90fd\u6709\u88ab async \u6807\u8bb0\u7684\u5f02\u6b65\u65b9\u6cd5\uff0c\u4ed6\u4eec\u90fd\u662f\u65e0\u8fd4\u56de\u503c\u7684 \u56e0\u6b64MPL\u5728\u8c03\u7528\u8fd9\u4e9b\u5f02\u6b65\u65b9\u6cd5\u65f6\uff0c\u5e76\u6ca1\u6709\u53bb\u83b7\u53d6\u5b83\u4eec\u7684 Future \u5bf9\u8c61\uff0c\u8fd9\u610f\u5473\u7740\u5f02\u6b65\u65b9\u6cd5\u4e2d\u629b\u51fa\u7684\u5f02\u5e38\u4f1a\u88abMPL\u6240\u65e0\u89c6\uff0c\u8fd9\u4e0d\u5229\u4e8e\u63d2\u4ef6\u7684\u8c03\u8bd5\u548c\u540e\u7eed\u7684bug\u4fee\u590d catch_async_exception\u5f02\u6b65\u88c5\u9970\u5668 \u4fdd\u8bc1\u4ee3\u7801\u6ca1\u6709\u5f02\u5e38\uff1f\u975e\u5e38\u56f0\u96be\uff01 try-except \u5927\u6bb5\u4ee3\u7801\uff1f\u4e00\u70b9\u4e5f\u4e0d\u4f18\u96c5\uff01 \u6ca1\u5173\u7cfb\uff0cMPL\u63d0\u4f9b\u4e86 catch_async_exception \u5f02\u6b65\u88c5\u9970\u5668 \u5c06 catch_async_exception \u88c5\u9970\u5230\u5b9e\u73b0\u4e86 PluginExceptionCatcher \u63a5\u53e3\u7684\u7c7b\u5f02\u6b65\u65b9\u6cd5\u4e2d\uff0cMPL\u5c31\u4f1a\u6355\u83b7\u8be5\u65b9\u6cd5\u629b\u51fa\u7684\u5f02\u5e38 PyPlugin \u548c PluginTask \u5747\u5df2\u5b9e\u73b0 PluginExceptionCatcher \u63a5\u53e3 from mplapi.plugin import catch_async_exception # \u5bfc\u5165 class MyPluginClass(PyPlugin): @catch_async_exception # \u88c5\u9970\u5f02\u6b65\u65b9\u6cd5 async def get_group_msg(self, bot: Bot, source: msg.Source, message: msg.MsgChain): raise Exception()","title":"\u5f02\u5e38\u6355\u83b7"},{"location":"developer/exception/#_1","text":"\u5728 PyPlugin \u548c PluginTask \u4e2d\uff0c\u90fd\u6709\u88ab async \u6807\u8bb0\u7684\u5f02\u6b65\u65b9\u6cd5\uff0c\u4ed6\u4eec\u90fd\u662f\u65e0\u8fd4\u56de\u503c\u7684 \u56e0\u6b64MPL\u5728\u8c03\u7528\u8fd9\u4e9b\u5f02\u6b65\u65b9\u6cd5\u65f6\uff0c\u5e76\u6ca1\u6709\u53bb\u83b7\u53d6\u5b83\u4eec\u7684 Future \u5bf9\u8c61\uff0c\u8fd9\u610f\u5473\u7740\u5f02\u6b65\u65b9\u6cd5\u4e2d\u629b\u51fa\u7684\u5f02\u5e38\u4f1a\u88abMPL\u6240\u65e0\u89c6\uff0c\u8fd9\u4e0d\u5229\u4e8e\u63d2\u4ef6\u7684\u8c03\u8bd5\u548c\u540e\u7eed\u7684bug\u4fee\u590d","title":"\u5173\u4e8e\u5f02\u6b65\u65b9\u6cd5\u629b\u51fa\u7684\u5f02\u5e38"},{"location":"developer/exception/#catch_async_exception","text":"\u4fdd\u8bc1\u4ee3\u7801\u6ca1\u6709\u5f02\u5e38\uff1f\u975e\u5e38\u56f0\u96be\uff01 try-except \u5927\u6bb5\u4ee3\u7801\uff1f\u4e00\u70b9\u4e5f\u4e0d\u4f18\u96c5\uff01 \u6ca1\u5173\u7cfb\uff0cMPL\u63d0\u4f9b\u4e86 catch_async_exception \u5f02\u6b65\u88c5\u9970\u5668 \u5c06 catch_async_exception \u88c5\u9970\u5230\u5b9e\u73b0\u4e86 PluginExceptionCatcher \u63a5\u53e3\u7684\u7c7b\u5f02\u6b65\u65b9\u6cd5\u4e2d\uff0cMPL\u5c31\u4f1a\u6355\u83b7\u8be5\u65b9\u6cd5\u629b\u51fa\u7684\u5f02\u5e38 PyPlugin \u548c PluginTask \u5747\u5df2\u5b9e\u73b0 PluginExceptionCatcher \u63a5\u53e3 from mplapi.plugin import catch_async_exception # \u5bfc\u5165 class MyPluginClass(PyPlugin): @catch_async_exception # \u88c5\u9970\u5f02\u6b65\u65b9\u6cd5 async def get_group_msg(self, bot: Bot, source: msg.Source, message: msg.MsgChain): raise Exception()","title":"catch_async_exception\u5f02\u6b65\u88c5\u9970\u5668"},{"location":"developer/file/","text":"MPL\u7edf\u4e00\u7ba1\u7406\u4e86\u6587\u4ef6\u4fdd\u5b58\u7684\u76ee\u5f55\uff0c\u5728 PyPlugin \u4e2d\u63d0\u4f9b\u65b9\u6cd5 \u83b7\u53d6\u6587\u4ef6\u4fdd\u5b58\u76ee\u5f55 \u4f7f\u7528PyPlugin\u7c7b\u7684 get_files_path \u65b9\u6cd5 def get_files_path(self) -> str: pass get_files_path \u65b9\u6cd5\u4e0d\u63a5\u6536\u4efb\u4f55\u53c2\u6570\uff0c\u8fd4\u56de\u6587\u4ef6\u4fdd\u5b58\u8def\u5f84 \uff08\u6700\u540e\u5e26\u5206\u9694\u7b26'/'\uff09 class MyPluginClass(PyPlugin): @catch_async_exception async def get_group_msg(self, bot: Bot, source: msg.Source, message: msg.MsgChain): for plain_msg in message.get_plain_msg(): # \u904d\u5386\u6587\u5b57\u6d88\u606f\u5217\u8868 file_path = self.get_files_path() + '\u7fa4\u53cb\u7684\u8bdd.txt' with open(file_path, 'a', encoding='utf-8') as file: file.write(plain_msg.text+'\\n') \u6587\u4ef6\u4fdd\u5b58\u76ee\u5f55\uff1a MPL\u76ee\u5f55/file/\u63d2\u4ef6\u540d/","title":"\u6587\u4ef6IO"},{"location":"developer/file/#_1","text":"\u4f7f\u7528PyPlugin\u7c7b\u7684 get_files_path \u65b9\u6cd5 def get_files_path(self) -> str: pass get_files_path \u65b9\u6cd5\u4e0d\u63a5\u6536\u4efb\u4f55\u53c2\u6570\uff0c\u8fd4\u56de\u6587\u4ef6\u4fdd\u5b58\u8def\u5f84 \uff08\u6700\u540e\u5e26\u5206\u9694\u7b26'/'\uff09 class MyPluginClass(PyPlugin): @catch_async_exception async def get_group_msg(self, bot: Bot, source: msg.Source, message: msg.MsgChain): for plain_msg in message.get_plain_msg(): # \u904d\u5386\u6587\u5b57\u6d88\u606f\u5217\u8868 file_path = self.get_files_path() + '\u7fa4\u53cb\u7684\u8bdd.txt' with open(file_path, 'a', encoding='utf-8') as file: file.write(plain_msg.text+'\\n') \u6587\u4ef6\u4fdd\u5b58\u76ee\u5f55\uff1a MPL\u76ee\u5f55/file/\u63d2\u4ef6\u540d/","title":"\u83b7\u53d6\u6587\u4ef6\u4fdd\u5b58\u76ee\u5f55"},{"location":"developer/logger/","text":"\u6bcf\u4e2a\u63d2\u4ef6\u542f\u52a8\u65f6\uff0cMPL\u90fd\u4f1a\u4e3a\u5176\u5206\u914d\u4e00\u4e2a\u65e5\u5fd7\u5bf9\u8c61 MPLLoggerHandler \u83b7\u53d6\u65e5\u5fd7\u5bf9\u8c61 \u5728 PyPlugin \u4e2d\u4f7f\u7528 get_logger \u65b9\u6cd5\u5f97\u5230\u65e5\u5fd7\u5bf9\u8c61 MPL\u5df2\u7ecf\u4e3a\u5176\u52a0\u8f7d\u4e86\u4e24\u4e2a Handle : StreamHandle \uff08\u8f93\u51fa\u5230\u63a7\u5236\u53f0\uff09\u9ed8\u8ba4\u7b49\u7ea7 DEBUG FileHandle \uff08\u8f93\u51fa\u5230\u6587\u4ef6\uff09\u9ed8\u8ba4\u7b49\u7ea7 WARNING \u4e3a\u65b9\u4fbf\u8c03\u8bd5\uff0c\u53ef\u4ee5\u4f7f\u7528 MPLLoggerHandler \u4e2d\u7684 set_stream_level \u548c set_file_level \u6539\u53d8\u65e5\u5fd7\u7b49\u7ea7 from mplapi import MPLLoggerHandler # \u5bfc\u5165 class MyPluginClass(PyPlugin): def on_create(self): logger = self.get_logger() logger.set_file_level(MPLLoggerHandler.DEBUG) # \u8bbe\u7f6efile\u7b49\u7ea7 logger.debug('DEBUG INFO') # \u8f93\u51fadebug\u4fe1\u606f logger.info('INFO') # \u8f93\u51fainfo\u4fe1\u606f logger.warning('WARNING INFO') # \u8f93\u51fawarning\u4fe1\u606f logger.error('ERROR INFO') # \u8f93\u51faerror\u4fe1\u606f logger.critical('CRITICAL INFO') # \u8f93\u51facritical\u4fe1\u606f log\u6587\u4ef6\u76ee\u5f55\uff1a MPL\u76ee\u5f55/logs/\u63d2\u4ef6\u540d/","title":"\u65e5\u5fd7\u5bf9\u8c61"},{"location":"developer/logger/#_1","text":"\u5728 PyPlugin \u4e2d\u4f7f\u7528 get_logger \u65b9\u6cd5\u5f97\u5230\u65e5\u5fd7\u5bf9\u8c61 MPL\u5df2\u7ecf\u4e3a\u5176\u52a0\u8f7d\u4e86\u4e24\u4e2a Handle : StreamHandle \uff08\u8f93\u51fa\u5230\u63a7\u5236\u53f0\uff09\u9ed8\u8ba4\u7b49\u7ea7 DEBUG FileHandle \uff08\u8f93\u51fa\u5230\u6587\u4ef6\uff09\u9ed8\u8ba4\u7b49\u7ea7 WARNING \u4e3a\u65b9\u4fbf\u8c03\u8bd5\uff0c\u53ef\u4ee5\u4f7f\u7528 MPLLoggerHandler \u4e2d\u7684 set_stream_level \u548c set_file_level \u6539\u53d8\u65e5\u5fd7\u7b49\u7ea7 from mplapi import MPLLoggerHandler # \u5bfc\u5165 class MyPluginClass(PyPlugin): def on_create(self): logger = self.get_logger() logger.set_file_level(MPLLoggerHandler.DEBUG) # \u8bbe\u7f6efile\u7b49\u7ea7 logger.debug('DEBUG INFO') # \u8f93\u51fadebug\u4fe1\u606f logger.info('INFO') # \u8f93\u51fainfo\u4fe1\u606f logger.warning('WARNING INFO') # \u8f93\u51fawarning\u4fe1\u606f logger.error('ERROR INFO') # \u8f93\u51faerror\u4fe1\u606f logger.critical('CRITICAL INFO') # \u8f93\u51facritical\u4fe1\u606f log\u6587\u4ef6\u76ee\u5f55\uff1a MPL\u76ee\u5f55/logs/\u63d2\u4ef6\u540d/","title":"\u83b7\u53d6\u65e5\u5fd7\u5bf9\u8c61"},{"location":"developer/permission/","text":"MPL\u63d0\u4f9b\u4e86 Permission \u6743\u9650\u7c7b\uff0c\u6bcf\u4e2abot\u5728\u767b\u5f55\u65f6\uff0c\u90fd\u4f1a\u4e3a\u6bcf\u4e2a\u63d2\u4ef6\u5206\u914d\u4e00\u4e2a Permission \u5bf9\u8c61\uff0c\u901a\u8fc7Bot\u5bf9\u8c61\u65b9\u6cd5\u83b7\u53d6 \u83b7\u53d6\u6743\u9650\u5bf9\u8c61 \u901a\u8fc7 get_plugin_permission \u65b9\u6cd5\u83b7\u53d6\u6743\u9650\u5bf9\u8c61 def get_plugin_permission(self, plugin_name: str) -> Permission: pass get_plugin_permission \u63a5\u6536\u4e00\u4e2a\u53c2\u6570\uff1a plugin_name :\u63d2\u4ef6\u540d \u8fd4\u56de\u6743\u9650\u5bf9\u8c61 class MyPluginClass(PyPlugin): async def on_login(self, bot: Bot): perm = bot.get_plugin_permission(self.get_plugin_name()) \u6743\u9650\u6a21\u5f0f Permission \u63d0\u4f9b\u4e09\u4e2a\u6743\u9650\u6a21\u5f0f\uff1a WHITE_LIST_MODE : \u767d\u540d\u5355\u6a21\u5f0f \uff08\u5728\u6743\u9650\u5217\u8868\u5185\u7684\u597d\u53cb/\u7fa4\u624d\u6709\u6743\u9650\u4f7f\u7528\u63d2\u4ef6\uff09 BLACK_LIST_MODE : \u9ed1\u540d\u5355\u6a21\u5f0f \uff08\u5728\u6743\u9650\u5217\u8868\u5916\u7684\u597d\u53cb/\u7fa4\u624d\u6709\u6743\u9650\u4f7f\u7528\u63d2\u4ef6\uff09 ALL_MODE : \u5168\u5f00\u653e\u6a21\u5f0f \uff08\u4efb\u610f\u597d\u53cb/\u7fa4\u90fd\u6709\u6743\u9650\u4f7f\u7528\u63d2\u4ef6\uff09 \u7fa4\u548c\u597d\u53cb\u9ed8\u8ba4\u5168\u5f00\u653e\u6a21\u5f0f\uff0c\u5982\u6709\u6743\u9650\u7ba1\u7406\u9700\u6c42\uff0c\u53ef\u81ea\u884c\u8bbe\u7f6e\u6a21\u5f0f from mplapi.mirai import Permission # \u5bfc\u5165 class MyPluginClass(PyPlugin): async def on_login(self, bot: Bot): perm = bot.get_plugin_permission(self.get_plugin_name()) # \u83b7\u53d6Permission\u5bf9\u8c61 perm.set_friend_mode(Permission.BLACK_LIST_MODE) # \u8bbe\u7f6e\u597d\u53cb\u6a21\u5f0f\u4e3a\u9ed1\u540d\u5355 perm.set_group_mode(Permission.WHITE_LIST_MODE) # \u8bbe\u7f6e\u7fa4\u6a21\u5f0f\u4e3a\u767d\u540d\u5355 perm.add_group(123465) # \u6dfb\u52a0\u7fa4\u81f3\u7fa4\u6743\u9650\u5217\u8868 perm.add_friend(123456) # \u6dfb\u52a0\u597d\u53cb\u81f3\u7fa4\u6743\u9650\u5217\u8868 bot.set_plugin_permission(self.get_plugin_name(),perm) # \u4f7f\u6743\u9650\u8bbe\u7f6e\u751f\u6548 \u63d2\u4ef6\u7ba1\u7406\u5458 \u901a\u8fc7 Permission \u5bf9\u8c61\u7684 add_admin \u7684\u65b9\u6cd5\uff0c\u53ef\u6dfb\u52a0\u63d2\u4ef6\u7ba1\u7406\u5458 \u7ba1\u7406\u5458\u53d1\u9001\u7684\u6d88\u606f\u4f1a\u8c03\u7528 PyPlugin \u7684 get_admin_msg \u65b9\u6cd5 class MyPluginClass(PyPlugin): async def get_admin_msg(self, bot: Bot, source: msg.Source, message: msg.MsgChain): self.get_logger().info(f'\u6536\u5230\u4e86\u6765\u81ea\u7ba1\u7406\u5458{source.sender}\u53d1\u9001\u7684\u6d88\u606f') PIN \u5f53\u63d2\u4ef6\u65e0\u7ba1\u7406\u5458\u65f6\uff08\u4f8b\u5982\u63d2\u4ef6\u7b2c\u4e00\u6b21\u88ab\u52a0\u8f7d\uff09MPL\u4f1a\u5728\u63a7\u5236\u53f0\u663e\u793a\u4e00\u4e2a\u548cBot\u5bf9\u5e94\u7684 \u516b\u4f4dPIN \u7528\u6237\u53ef\u901a\u8fc7\u79c1\u804aBot\u53d1\u9001\u8fd9\u4e2aPIN\u503c\u6765\u8ba4\u8bc1\u6210\u4e3a\u7ba1\u7406\u5458","title":"\u6743\u9650\u7ba1\u7406"},{"location":"developer/permission/#_1","text":"\u901a\u8fc7 get_plugin_permission \u65b9\u6cd5\u83b7\u53d6\u6743\u9650\u5bf9\u8c61 def get_plugin_permission(self, plugin_name: str) -> Permission: pass get_plugin_permission \u63a5\u6536\u4e00\u4e2a\u53c2\u6570\uff1a plugin_name :\u63d2\u4ef6\u540d \u8fd4\u56de\u6743\u9650\u5bf9\u8c61 class MyPluginClass(PyPlugin): async def on_login(self, bot: Bot): perm = bot.get_plugin_permission(self.get_plugin_name())","title":"\u83b7\u53d6\u6743\u9650\u5bf9\u8c61"},{"location":"developer/permission/#_2","text":"Permission \u63d0\u4f9b\u4e09\u4e2a\u6743\u9650\u6a21\u5f0f\uff1a WHITE_LIST_MODE : \u767d\u540d\u5355\u6a21\u5f0f \uff08\u5728\u6743\u9650\u5217\u8868\u5185\u7684\u597d\u53cb/\u7fa4\u624d\u6709\u6743\u9650\u4f7f\u7528\u63d2\u4ef6\uff09 BLACK_LIST_MODE : \u9ed1\u540d\u5355\u6a21\u5f0f \uff08\u5728\u6743\u9650\u5217\u8868\u5916\u7684\u597d\u53cb/\u7fa4\u624d\u6709\u6743\u9650\u4f7f\u7528\u63d2\u4ef6\uff09 ALL_MODE : \u5168\u5f00\u653e\u6a21\u5f0f \uff08\u4efb\u610f\u597d\u53cb/\u7fa4\u90fd\u6709\u6743\u9650\u4f7f\u7528\u63d2\u4ef6\uff09 \u7fa4\u548c\u597d\u53cb\u9ed8\u8ba4\u5168\u5f00\u653e\u6a21\u5f0f\uff0c\u5982\u6709\u6743\u9650\u7ba1\u7406\u9700\u6c42\uff0c\u53ef\u81ea\u884c\u8bbe\u7f6e\u6a21\u5f0f from mplapi.mirai import Permission # \u5bfc\u5165 class MyPluginClass(PyPlugin): async def on_login(self, bot: Bot): perm = bot.get_plugin_permission(self.get_plugin_name()) # \u83b7\u53d6Permission\u5bf9\u8c61 perm.set_friend_mode(Permission.BLACK_LIST_MODE) # \u8bbe\u7f6e\u597d\u53cb\u6a21\u5f0f\u4e3a\u9ed1\u540d\u5355 perm.set_group_mode(Permission.WHITE_LIST_MODE) # \u8bbe\u7f6e\u7fa4\u6a21\u5f0f\u4e3a\u767d\u540d\u5355 perm.add_group(123465) # \u6dfb\u52a0\u7fa4\u81f3\u7fa4\u6743\u9650\u5217\u8868 perm.add_friend(123456) # \u6dfb\u52a0\u597d\u53cb\u81f3\u7fa4\u6743\u9650\u5217\u8868 bot.set_plugin_permission(self.get_plugin_name(),perm) # \u4f7f\u6743\u9650\u8bbe\u7f6e\u751f\u6548","title":"\u6743\u9650\u6a21\u5f0f"},{"location":"developer/permission/#_3","text":"\u901a\u8fc7 Permission \u5bf9\u8c61\u7684 add_admin \u7684\u65b9\u6cd5\uff0c\u53ef\u6dfb\u52a0\u63d2\u4ef6\u7ba1\u7406\u5458 \u7ba1\u7406\u5458\u53d1\u9001\u7684\u6d88\u606f\u4f1a\u8c03\u7528 PyPlugin \u7684 get_admin_msg \u65b9\u6cd5 class MyPluginClass(PyPlugin): async def get_admin_msg(self, bot: Bot, source: msg.Source, message: msg.MsgChain): self.get_logger().info(f'\u6536\u5230\u4e86\u6765\u81ea\u7ba1\u7406\u5458{source.sender}\u53d1\u9001\u7684\u6d88\u606f')","title":"\u63d2\u4ef6\u7ba1\u7406\u5458"},{"location":"developer/permission/#pin","text":"\u5f53\u63d2\u4ef6\u65e0\u7ba1\u7406\u5458\u65f6\uff08\u4f8b\u5982\u63d2\u4ef6\u7b2c\u4e00\u6b21\u88ab\u52a0\u8f7d\uff09MPL\u4f1a\u5728\u63a7\u5236\u53f0\u663e\u793a\u4e00\u4e2a\u548cBot\u5bf9\u5e94\u7684 \u516b\u4f4dPIN \u7528\u6237\u53ef\u901a\u8fc7\u79c1\u804aBot\u53d1\u9001\u8fd9\u4e2aPIN\u503c\u6765\u8ba4\u8bc1\u6210\u4e3a\u7ba1\u7406\u5458","title":"PIN"},{"location":"developer/preface/","text":"\u5f00\u53d1\u73af\u5883 Python\u22653.7 \u4f18\u79c0\u7684Python IDE \uff08\u672c\u6587\u6863\u4f7f\u7528PyCharm\u6f14\u793a\uff09 \u6784\u5efa\u63d2\u4ef6\u9879\u76ee \u4f7f\u7528PyCharm\u65b0\u5efa\u9879\u76ee\uff0c\u5728\u9879\u76ee\u4e0b\u6253\u5f00\u7ec8\u7aef \u8f93\u5165 pip install mplapi \u4e0b\u8f7dMPL\u7684\u63d2\u4ef6\u5f00\u53d1\u5305 \u8f93\u5165 python -m mplapi -n \u4f60\u7684\u63d2\u4ef6\u540d\u79f0 \u751f\u6210\u63d2\u4ef6\u9879\u76ee\u6a21\u677f \u6253\u5f00 \u4f60\u7684\u63d2\u4ef6\u540d\u79f0 \u76ee\u5f55\u4e0b\u7684 __init__.py \u6587\u4ef6\u5f00\u59cb\u7f16\u5199\u63d2\u4ef6 MPL\u63d2\u4ef6\u9879\u76ee\u7ed3\u6784 \u9879\u76ee\u76ee\u5f55 \u251c\u2500 plugins \u2502 \u251c\u2500 \u4f60\u7684\u63d2\u4ef6\u540d\u79f0 \u2502 \u2502 \u2514\u2500 __init__.py \u2502 \u2514\u2500 __init__.py","title":"\u51c6\u5907"},{"location":"developer/preface/#_1","text":"Python\u22653.7 \u4f18\u79c0\u7684Python IDE \uff08\u672c\u6587\u6863\u4f7f\u7528PyCharm\u6f14\u793a\uff09","title":"\u5f00\u53d1\u73af\u5883"},{"location":"developer/preface/#_2","text":"\u4f7f\u7528PyCharm\u65b0\u5efa\u9879\u76ee\uff0c\u5728\u9879\u76ee\u4e0b\u6253\u5f00\u7ec8\u7aef \u8f93\u5165 pip install mplapi \u4e0b\u8f7dMPL\u7684\u63d2\u4ef6\u5f00\u53d1\u5305 \u8f93\u5165 python -m mplapi -n \u4f60\u7684\u63d2\u4ef6\u540d\u79f0 \u751f\u6210\u63d2\u4ef6\u9879\u76ee\u6a21\u677f \u6253\u5f00 \u4f60\u7684\u63d2\u4ef6\u540d\u79f0 \u76ee\u5f55\u4e0b\u7684 __init__.py \u6587\u4ef6\u5f00\u59cb\u7f16\u5199\u63d2\u4ef6","title":"\u6784\u5efa\u63d2\u4ef6\u9879\u76ee"},{"location":"developer/preface/#mpl","text":"\u9879\u76ee\u76ee\u5f55 \u251c\u2500 plugins \u2502 \u251c\u2500 \u4f60\u7684\u63d2\u4ef6\u540d\u79f0 \u2502 \u2502 \u2514\u2500 __init__.py \u2502 \u2514\u2500 __init__.py","title":"MPL\u63d2\u4ef6\u9879\u76ee\u7ed3\u6784"},{"location":"developer/task/","text":"\u4f7f\u7528\u573a\u666f \u5f53\u4f60\u7684\u63d2\u4ef6\u529f\u80fd\u662f \u89e6\u53d1\u5f0f \u6216\u9700\u8981 \u7ebf\u6027\u4ea4\u4e92 \u65f6\uff0c\u5982\uff1a \u89e6\u53d1\u5f0f\u793a\u4f8b \u8def\u4ebaA\uff1a\u641c\u56fe Bot\uff1a\u8bf7\u572830s\u5185\u53d1\u9001\u4f60\u8981\u641c\u7d22\u7684\u56fe\u7247 \u8def\u4ebaA\uff1a[\u6da9\u56fe] Bot\uff1a[\u6da9\u56fe] \u8be5\u56fe\u51fa\u81ea\u2026\u2026\u2026\u2026 \u7ebf\u6027\u4ea4\u4e92\u793a\u4f8b \u8def\u4ebaB\uff1a\u767e\u5ea6\u767e\u79d1 \u521d\u97f3 Bot\uff1a\u521d\u97f3'\u7684\u641c\u7d22\u7ed3\u679c\u975e\u552f\u4e00\uff0c\u8bf7\u9009\u62e9\uff1a1.\u521d\u97f3\u672a\u6765 2.\u6e38\u620f\u300a\u516c\u4e3b\u8fde\u7ed3\u300b\u4e2d\u7684\u89d2\u8272 \u8def\u4ebaB\uff1a2 Bot\uff1a\u4ee5\u4e0b\u662f'\u521d\u97f3'\u7684\u767e\u79d1\u2026\u2026\u2026\u2026 \u5982\u679c\u5728 get_group_msg \u65b9\u6cd5\u4e2d\u5b9a\u4e49\u6240\u6709\u903b\u8f91\uff0c\u5c06\u4f1a\u6d89\u53ca\u5404\u79cd\u5224\u65ad\u3001\u5d4c\u5957\u3001\u53d8\u91cf\u4fdd\u5b58\u7b49\u3002\u4f1a\u4f7f\u4ee3\u7801\u4e0d\u6613\u8bfb\u61c2\uff0c\u903b\u8f91\u6df7\u4e71 \u56e0\u6b64\uff0cMPL\u63d0\u4f9b\u4e86 PluginTask \u6765\u89e3\u51b3\u4ee5\u4e0a\u95ee\u9898 \u8ba4\u8bc6PluginTask PluginTask\u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u4f60\u9700\u8981\u5b9e\u73b0\u5176\u62bd\u8c61\u65b9\u6cd5 \u81ea\u5b9a\u4e49PluginTask from mplapi.plugin import PluginTask # \u5bfc\u5165 class MyTask(PluginTask): def __init__(self, plugin: PyPlugin): super().__init__(plugin) # PluginTask\u6ca1\u6709\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\uff0c\u4f60\u5fc5\u987b\u8c03\u7528\u5176\u8d85\u7c7b\u6784\u9020\u65b9\u6cd5 # \u4efb\u52a1\u7684\u6267\u884c\u4f53 async def execute_task(self, bot: Bot, source: msg.Source, message: msg.MsgChain): self.plugin_instance.get_logger().info('\u4efb\u52a1\u6267\u884c\uff01') # \u4efb\u52a1\u8d85\u65f6\u65f6\u8c03\u7528 async def on_timeout(self, bot: Bot): self.plugin_instance.get_logger().info('\u4efb\u52a1\u8d85\u65f6\uff01') # \u5224\u65ad\u662f\u5426\u662f\u8be5\u4efb\u52a1\u7684\u6267\u884c\u5bf9\u8c61 def is_task_target(self, group, target) -> bool: pass \u5b9e\u4f8b\u5316 class MyPluginClass(PyPlugin): async def get_group_msg(self, bot: Bot, source: msg.Source, message: msg.MsgChain): task = MyTask(self) # \u4f20\u5165PyPlugin\u5bf9\u8c61\u8fdb\u884c\u5b9e\u4f8b\u5316 MPL\u4e5f\u5185\u7f6e\u4e86\u4e24\u4e2aPluginTask\u7684\u5b50\u7c7b GroupTask \uff08\u7fa4\u4efb\u52a1\uff09 FriendTask \uff08\u597d\u53cb\u4efb\u52a1\uff09 \u5b83\u4eec\u90fd\u5df2\u7ecf\u5b9e\u73b0\u4e86 is_task_target \u65b9\u6cd5 \u81ea\u5b9a\u4e49GroupTask\u3001FriendTask from mplapi.plugin import FriendTask from mplapi.plugin import GroupTask # \u5bfc\u5165 class MyGroupTask(GroupTask): async def execute_task(self, bot: Bot, source: msg.Source, message: msg.MsgChain): self.plugin_instance.get_logger().info('\u7fa4\u4efb\u52a1\u6267\u884c\uff01') async def on_timeout(self, bot: Bot): self.plugin_instance.get_logger().info('\u7fa4\u4efb\u52a1\u8d85\u65f6\uff01') class MyFriendTask(FriendTask): async def execute_task(self, bot: Bot, source: msg.Source, message: msg.MsgChain): self.plugin_instance.get_logger().info('\u597d\u53cb\u4efb\u52a1\u6267\u884c\uff01') async def on_timeout(self, bot: Bot): self.plugin_instance.get_logger().info('\u597d\u53cb\u4efb\u52a1\u8d85\u65f6\uff01') \u5b9e\u4f8b\u5316 class MyPluginClass(PyPlugin): async def get_group_msg(self, bot: Bot, source: msg.Source, message: msg.MsgChain): group: int # \u6267\u884c\u4efb\u52a1\u7684\u7fa4\u53f7 target: int # \u6267\u884c\u4efb\u52a1\u7684\u76ee\u6807qq\u53f7 group_task = MyGroupTask(group, self, target) friend_task = MyFriendTask(target, self) \u5176\u4e2dGroupTask\u5b9e\u4f8b\u5316\u65f6\uff0ctarget\u53c2\u6570\u4e0d\u662f\u5fc5\u987b\uff0c\u4e0d\u4f20\u5165\u65f6\u610f\u5473\u7740\u8be5\u7fa4\u5185\u7684\u4efb\u610f\u6210\u5458\u90fd\u53ef\u4ee5\u89e6\u53d1\u6b64\u4efb\u52a1 \u63d0\u4ea4PluginTask \u663e\u7136\uff0c\u4ec5\u4ec5\u5b9e\u4f8b\u5316\u4e00\u4e2aPluginTask\u5bf9\u8c61\u662f\u6ca1\u6709\u4efb\u4f55\u7528\u5904\u7684\uff0c\u4f60\u9700\u8981\u5c06\u5176\u63d0\u4ea4\u81f3Bot\uff0c\u7531Bot\u5bf9\u8c61\u5224\u65ad\u662f\u5426\u6267\u884c \u63d0\u4ea4\u81f3Bot class MyPluginClass(PyPlugin): async def get_group_msg(self, bot: Bot, source: msg.Source, message: msg.MsgChain): task = MyTask(self) task.set_timeout(30) # \u8bbe\u7f6e\u8d85\u65f6\u65f6\u95f430s bot.add_plugin_task(task) \u4e00\u4e2aPluginTask\u5bf9\u8c61\uff0c\u5728\u6267\u884c\u540e\u6216\u8d85\u65f6\u540e\u4f1a\u88abMPL\u6240\u56de\u6536 \u56e0\u6b64\u5728\u63d0\u4ea4\u524d\u5efa\u8bae\u901a\u8fc7 set_timeout \u65b9\u6cd5\u8bbe\u7f6e\u8d85\u65f6\u65f6\u95f4\uff0c\u4ee5\u514d\u957f\u65f6\u95f4\u672a\u88ab\u6267\u884c\u5bfc\u81f4\u4efb\u52a1\u5806\u79ef\uff0c\u6d88\u8017\u5185\u5b58\u8d44\u6e90","title":"\u521b\u5efa\u63d2\u4ef6\u4efb\u52a1"},{"location":"developer/task/#_1","text":"\u5f53\u4f60\u7684\u63d2\u4ef6\u529f\u80fd\u662f \u89e6\u53d1\u5f0f \u6216\u9700\u8981 \u7ebf\u6027\u4ea4\u4e92 \u65f6\uff0c\u5982\uff1a","title":"\u4f7f\u7528\u573a\u666f"},{"location":"developer/task/#_2","text":"\u8def\u4ebaA\uff1a\u641c\u56fe Bot\uff1a\u8bf7\u572830s\u5185\u53d1\u9001\u4f60\u8981\u641c\u7d22\u7684\u56fe\u7247 \u8def\u4ebaA\uff1a[\u6da9\u56fe] Bot\uff1a[\u6da9\u56fe] \u8be5\u56fe\u51fa\u81ea\u2026\u2026\u2026\u2026","title":"\u89e6\u53d1\u5f0f\u793a\u4f8b"},{"location":"developer/task/#_3","text":"\u8def\u4ebaB\uff1a\u767e\u5ea6\u767e\u79d1 \u521d\u97f3 Bot\uff1a\u521d\u97f3'\u7684\u641c\u7d22\u7ed3\u679c\u975e\u552f\u4e00\uff0c\u8bf7\u9009\u62e9\uff1a1.\u521d\u97f3\u672a\u6765 2.\u6e38\u620f\u300a\u516c\u4e3b\u8fde\u7ed3\u300b\u4e2d\u7684\u89d2\u8272 \u8def\u4ebaB\uff1a2 Bot\uff1a\u4ee5\u4e0b\u662f'\u521d\u97f3'\u7684\u767e\u79d1\u2026\u2026\u2026\u2026 \u5982\u679c\u5728 get_group_msg \u65b9\u6cd5\u4e2d\u5b9a\u4e49\u6240\u6709\u903b\u8f91\uff0c\u5c06\u4f1a\u6d89\u53ca\u5404\u79cd\u5224\u65ad\u3001\u5d4c\u5957\u3001\u53d8\u91cf\u4fdd\u5b58\u7b49\u3002\u4f1a\u4f7f\u4ee3\u7801\u4e0d\u6613\u8bfb\u61c2\uff0c\u903b\u8f91\u6df7\u4e71 \u56e0\u6b64\uff0cMPL\u63d0\u4f9b\u4e86 PluginTask \u6765\u89e3\u51b3\u4ee5\u4e0a\u95ee\u9898","title":"\u7ebf\u6027\u4ea4\u4e92\u793a\u4f8b"},{"location":"developer/task/#plugintask","text":"PluginTask\u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u4f60\u9700\u8981\u5b9e\u73b0\u5176\u62bd\u8c61\u65b9\u6cd5 \u81ea\u5b9a\u4e49PluginTask from mplapi.plugin import PluginTask # \u5bfc\u5165 class MyTask(PluginTask): def __init__(self, plugin: PyPlugin): super().__init__(plugin) # PluginTask\u6ca1\u6709\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\uff0c\u4f60\u5fc5\u987b\u8c03\u7528\u5176\u8d85\u7c7b\u6784\u9020\u65b9\u6cd5 # \u4efb\u52a1\u7684\u6267\u884c\u4f53 async def execute_task(self, bot: Bot, source: msg.Source, message: msg.MsgChain): self.plugin_instance.get_logger().info('\u4efb\u52a1\u6267\u884c\uff01') # \u4efb\u52a1\u8d85\u65f6\u65f6\u8c03\u7528 async def on_timeout(self, bot: Bot): self.plugin_instance.get_logger().info('\u4efb\u52a1\u8d85\u65f6\uff01') # \u5224\u65ad\u662f\u5426\u662f\u8be5\u4efb\u52a1\u7684\u6267\u884c\u5bf9\u8c61 def is_task_target(self, group, target) -> bool: pass \u5b9e\u4f8b\u5316 class MyPluginClass(PyPlugin): async def get_group_msg(self, bot: Bot, source: msg.Source, message: msg.MsgChain): task = MyTask(self) # \u4f20\u5165PyPlugin\u5bf9\u8c61\u8fdb\u884c\u5b9e\u4f8b\u5316 MPL\u4e5f\u5185\u7f6e\u4e86\u4e24\u4e2aPluginTask\u7684\u5b50\u7c7b GroupTask \uff08\u7fa4\u4efb\u52a1\uff09 FriendTask \uff08\u597d\u53cb\u4efb\u52a1\uff09 \u5b83\u4eec\u90fd\u5df2\u7ecf\u5b9e\u73b0\u4e86 is_task_target \u65b9\u6cd5 \u81ea\u5b9a\u4e49GroupTask\u3001FriendTask from mplapi.plugin import FriendTask from mplapi.plugin import GroupTask # \u5bfc\u5165 class MyGroupTask(GroupTask): async def execute_task(self, bot: Bot, source: msg.Source, message: msg.MsgChain): self.plugin_instance.get_logger().info('\u7fa4\u4efb\u52a1\u6267\u884c\uff01') async def on_timeout(self, bot: Bot): self.plugin_instance.get_logger().info('\u7fa4\u4efb\u52a1\u8d85\u65f6\uff01') class MyFriendTask(FriendTask): async def execute_task(self, bot: Bot, source: msg.Source, message: msg.MsgChain): self.plugin_instance.get_logger().info('\u597d\u53cb\u4efb\u52a1\u6267\u884c\uff01') async def on_timeout(self, bot: Bot): self.plugin_instance.get_logger().info('\u597d\u53cb\u4efb\u52a1\u8d85\u65f6\uff01') \u5b9e\u4f8b\u5316 class MyPluginClass(PyPlugin): async def get_group_msg(self, bot: Bot, source: msg.Source, message: msg.MsgChain): group: int # \u6267\u884c\u4efb\u52a1\u7684\u7fa4\u53f7 target: int # \u6267\u884c\u4efb\u52a1\u7684\u76ee\u6807qq\u53f7 group_task = MyGroupTask(group, self, target) friend_task = MyFriendTask(target, self) \u5176\u4e2dGroupTask\u5b9e\u4f8b\u5316\u65f6\uff0ctarget\u53c2\u6570\u4e0d\u662f\u5fc5\u987b\uff0c\u4e0d\u4f20\u5165\u65f6\u610f\u5473\u7740\u8be5\u7fa4\u5185\u7684\u4efb\u610f\u6210\u5458\u90fd\u53ef\u4ee5\u89e6\u53d1\u6b64\u4efb\u52a1","title":"\u8ba4\u8bc6PluginTask"},{"location":"developer/task/#plugintask_1","text":"\u663e\u7136\uff0c\u4ec5\u4ec5\u5b9e\u4f8b\u5316\u4e00\u4e2aPluginTask\u5bf9\u8c61\u662f\u6ca1\u6709\u4efb\u4f55\u7528\u5904\u7684\uff0c\u4f60\u9700\u8981\u5c06\u5176\u63d0\u4ea4\u81f3Bot\uff0c\u7531Bot\u5bf9\u8c61\u5224\u65ad\u662f\u5426\u6267\u884c \u63d0\u4ea4\u81f3Bot class MyPluginClass(PyPlugin): async def get_group_msg(self, bot: Bot, source: msg.Source, message: msg.MsgChain): task = MyTask(self) task.set_timeout(30) # \u8bbe\u7f6e\u8d85\u65f6\u65f6\u95f430s bot.add_plugin_task(task) \u4e00\u4e2aPluginTask\u5bf9\u8c61\uff0c\u5728\u6267\u884c\u540e\u6216\u8d85\u65f6\u540e\u4f1a\u88abMPL\u6240\u56de\u6536 \u56e0\u6b64\u5728\u63d0\u4ea4\u524d\u5efa\u8bae\u901a\u8fc7 set_timeout \u65b9\u6cd5\u8bbe\u7f6e\u8d85\u65f6\u65f6\u95f4\uff0c\u4ee5\u514d\u957f\u65f6\u95f4\u672a\u88ab\u6267\u884c\u5bfc\u81f4\u4efb\u52a1\u5806\u79ef\uff0c\u6d88\u8017\u5185\u5b58\u8d44\u6e90","title":"\u63d0\u4ea4PluginTask"},{"location":"developer/moudle/__init__/","text":"MPLLoggerHandler MPL\u7684\u65e5\u5fd7\u7c7b Source code in mplapi\\__init__.py 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 class MPLLoggerHandler : \"\"\" MPL\u7684\u65e5\u5fd7\u7c7b \"\"\" DEBUG = logging . DEBUG INFO = logging . INFO WARNING = logging . WARNING ERROR = logging . ERROR CRITICAL = logging . CRITICAL def set_stream_level ( self , level ): \"\"\" \u8bbe\u7f6e\u8f93\u51fa\u5230\u63a7\u5236\u53f0\u7684\u65e5\u5fd7\u7b49\u7ea7 :param level: \u7c7b\u4e2d\u76845\u4e2a\u679a\u4e3e :return: \"\"\" pass def set_file_level ( self , level ): \"\"\" \u8bbe\u7f6e\u8f93\u51fa\u5230\u6587\u4ef6\u7684\u65e5\u5fd7\u7b49\u7ea7 :param level: \u7c7b\u4e2d\u76845\u4e2a\u679a\u4e3e :return: \"\"\" pass def debug ( self , msg : str ): \"\"\" \u8f93\u51fadebug\u4fe1\u606f :param msg: \u4fe1\u606f :return: \"\"\" pass def info ( self , msg : str ): \"\"\" \u8f93\u51fainfo\u4fe1\u606f :param msg: \u4fe1\u606f :return: \"\"\" pass def warning ( self , msg : str ): \"\"\" \u8f93\u51fawarning\u4fe1\u606f :param msg: \u4fe1\u606f :return: \"\"\" pass def error ( self , msg : str ): \"\"\" \u8f93\u51faerror\u4fe1\u606f :param msg: \u4fe1\u606f :return: \"\"\" pass def critical ( self , msg : str ): \"\"\" \u8f93\u51facritical\u4fe1\u606f :param msg: \u4fe1\u606f :return: \"\"\" pass critical ( msg ) \u8f93\u51facritical\u4fe1\u606f :param msg: \u4fe1\u606f :return: Source code in mplapi\\__init__.py 62 63 64 65 66 67 68 def critical ( self , msg : str ): \"\"\" \u8f93\u51facritical\u4fe1\u606f :param msg: \u4fe1\u606f :return: \"\"\" pass debug ( msg ) \u8f93\u51fadebug\u4fe1\u606f :param msg: \u4fe1\u606f :return: Source code in mplapi\\__init__.py 30 31 32 33 34 35 36 def debug ( self , msg : str ): \"\"\" \u8f93\u51fadebug\u4fe1\u606f :param msg: \u4fe1\u606f :return: \"\"\" pass error ( msg ) \u8f93\u51faerror\u4fe1\u606f :param msg: \u4fe1\u606f :return: Source code in mplapi\\__init__.py 54 55 56 57 58 59 60 def error ( self , msg : str ): \"\"\" \u8f93\u51faerror\u4fe1\u606f :param msg: \u4fe1\u606f :return: \"\"\" pass info ( msg ) \u8f93\u51fainfo\u4fe1\u606f :param msg: \u4fe1\u606f :return: Source code in mplapi\\__init__.py 38 39 40 41 42 43 44 def info ( self , msg : str ): \"\"\" \u8f93\u51fainfo\u4fe1\u606f :param msg: \u4fe1\u606f :return: \"\"\" pass set_file_level ( level ) \u8bbe\u7f6e\u8f93\u51fa\u5230\u6587\u4ef6\u7684\u65e5\u5fd7\u7b49\u7ea7 :param level: \u7c7b\u4e2d\u76845\u4e2a\u679a\u4e3e :return: Source code in mplapi\\__init__.py 22 23 24 25 26 27 28 def set_file_level ( self , level ): \"\"\" \u8bbe\u7f6e\u8f93\u51fa\u5230\u6587\u4ef6\u7684\u65e5\u5fd7\u7b49\u7ea7 :param level: \u7c7b\u4e2d\u76845\u4e2a\u679a\u4e3e :return: \"\"\" pass set_stream_level ( level ) \u8bbe\u7f6e\u8f93\u51fa\u5230\u63a7\u5236\u53f0\u7684\u65e5\u5fd7\u7b49\u7ea7 :param level: \u7c7b\u4e2d\u76845\u4e2a\u679a\u4e3e :return: Source code in mplapi\\__init__.py 14 15 16 17 18 19 20 def set_stream_level ( self , level ): \"\"\" \u8bbe\u7f6e\u8f93\u51fa\u5230\u63a7\u5236\u53f0\u7684\u65e5\u5fd7\u7b49\u7ea7 :param level: \u7c7b\u4e2d\u76845\u4e2a\u679a\u4e3e :return: \"\"\" pass warning ( msg ) \u8f93\u51fawarning\u4fe1\u606f :param msg: \u4fe1\u606f :return: Source code in mplapi\\__init__.py 46 47 48 49 50 51 52 def warning ( self , msg : str ): \"\"\" \u8f93\u51fawarning\u4fe1\u606f :param msg: \u4fe1\u606f :return: \"\"\" pass","title":"__init__"},{"location":"developer/moudle/__init__/#mplapi.MPLLoggerHandler","text":"MPL\u7684\u65e5\u5fd7\u7c7b Source code in mplapi\\__init__.py 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 class MPLLoggerHandler : \"\"\" MPL\u7684\u65e5\u5fd7\u7c7b \"\"\" DEBUG = logging . DEBUG INFO = logging . INFO WARNING = logging . WARNING ERROR = logging . ERROR CRITICAL = logging . CRITICAL def set_stream_level ( self , level ): \"\"\" \u8bbe\u7f6e\u8f93\u51fa\u5230\u63a7\u5236\u53f0\u7684\u65e5\u5fd7\u7b49\u7ea7 :param level: \u7c7b\u4e2d\u76845\u4e2a\u679a\u4e3e :return: \"\"\" pass def set_file_level ( self , level ): \"\"\" \u8bbe\u7f6e\u8f93\u51fa\u5230\u6587\u4ef6\u7684\u65e5\u5fd7\u7b49\u7ea7 :param level: \u7c7b\u4e2d\u76845\u4e2a\u679a\u4e3e :return: \"\"\" pass def debug ( self , msg : str ): \"\"\" \u8f93\u51fadebug\u4fe1\u606f :param msg: \u4fe1\u606f :return: \"\"\" pass def info ( self , msg : str ): \"\"\" \u8f93\u51fainfo\u4fe1\u606f :param msg: \u4fe1\u606f :return: \"\"\" pass def warning ( self , msg : str ): \"\"\" \u8f93\u51fawarning\u4fe1\u606f :param msg: \u4fe1\u606f :return: \"\"\" pass def error ( self , msg : str ): \"\"\" \u8f93\u51faerror\u4fe1\u606f :param msg: \u4fe1\u606f :return: \"\"\" pass def critical ( self , msg : str ): \"\"\" \u8f93\u51facritical\u4fe1\u606f :param msg: \u4fe1\u606f :return: \"\"\" pass","title":"MPLLoggerHandler"},{"location":"developer/moudle/__init__/#mplapi.MPLLoggerHandler.critical","text":"\u8f93\u51facritical\u4fe1\u606f :param msg: \u4fe1\u606f :return: Source code in mplapi\\__init__.py 62 63 64 65 66 67 68 def critical ( self , msg : str ): \"\"\" \u8f93\u51facritical\u4fe1\u606f :param msg: \u4fe1\u606f :return: \"\"\" pass","title":"critical()"},{"location":"developer/moudle/__init__/#mplapi.MPLLoggerHandler.debug","text":"\u8f93\u51fadebug\u4fe1\u606f :param msg: \u4fe1\u606f :return: Source code in mplapi\\__init__.py 30 31 32 33 34 35 36 def debug ( self , msg : str ): \"\"\" \u8f93\u51fadebug\u4fe1\u606f :param msg: \u4fe1\u606f :return: \"\"\" pass","title":"debug()"},{"location":"developer/moudle/__init__/#mplapi.MPLLoggerHandler.error","text":"\u8f93\u51faerror\u4fe1\u606f :param msg: \u4fe1\u606f :return: Source code in mplapi\\__init__.py 54 55 56 57 58 59 60 def error ( self , msg : str ): \"\"\" \u8f93\u51faerror\u4fe1\u606f :param msg: \u4fe1\u606f :return: \"\"\" pass","title":"error()"},{"location":"developer/moudle/__init__/#mplapi.MPLLoggerHandler.info","text":"\u8f93\u51fainfo\u4fe1\u606f :param msg: \u4fe1\u606f :return: Source code in mplapi\\__init__.py 38 39 40 41 42 43 44 def info ( self , msg : str ): \"\"\" \u8f93\u51fainfo\u4fe1\u606f :param msg: \u4fe1\u606f :return: \"\"\" pass","title":"info()"},{"location":"developer/moudle/__init__/#mplapi.MPLLoggerHandler.set_file_level","text":"\u8bbe\u7f6e\u8f93\u51fa\u5230\u6587\u4ef6\u7684\u65e5\u5fd7\u7b49\u7ea7 :param level: \u7c7b\u4e2d\u76845\u4e2a\u679a\u4e3e :return: Source code in mplapi\\__init__.py 22 23 24 25 26 27 28 def set_file_level ( self , level ): \"\"\" \u8bbe\u7f6e\u8f93\u51fa\u5230\u6587\u4ef6\u7684\u65e5\u5fd7\u7b49\u7ea7 :param level: \u7c7b\u4e2d\u76845\u4e2a\u679a\u4e3e :return: \"\"\" pass","title":"set_file_level()"},{"location":"developer/moudle/__init__/#mplapi.MPLLoggerHandler.set_stream_level","text":"\u8bbe\u7f6e\u8f93\u51fa\u5230\u63a7\u5236\u53f0\u7684\u65e5\u5fd7\u7b49\u7ea7 :param level: \u7c7b\u4e2d\u76845\u4e2a\u679a\u4e3e :return: Source code in mplapi\\__init__.py 14 15 16 17 18 19 20 def set_stream_level ( self , level ): \"\"\" \u8bbe\u7f6e\u8f93\u51fa\u5230\u63a7\u5236\u53f0\u7684\u65e5\u5fd7\u7b49\u7ea7 :param level: \u7c7b\u4e2d\u76845\u4e2a\u679a\u4e3e :return: \"\"\" pass","title":"set_stream_level()"},{"location":"developer/moudle/__init__/#mplapi.MPLLoggerHandler.warning","text":"\u8f93\u51fawarning\u4fe1\u606f :param msg: \u4fe1\u606f :return: Source code in mplapi\\__init__.py 46 47 48 49 50 51 52 def warning ( self , msg : str ): \"\"\" \u8f93\u51fawarning\u4fe1\u606f :param msg: \u4fe1\u606f :return: \"\"\" pass","title":"warning()"},{"location":"developer/moudle/config/","text":"Config \u8d44\u6599\u4fe1\u606f\u96c6\u5408 Source code in mplapi\\config.py 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 class Config ( metaclass = ABCMeta ): \"\"\" \u8d44\u6599\u4fe1\u606f\u96c6\u5408 \"\"\" @abstractmethod def serialize ( self ): \"\"\" \u5e8f\u5217\u5316\u65b9\u6cd5 :return: \"\"\" return {} def __str__ ( self ): return str ( self . serialize ()) serialize () abstractmethod \u5e8f\u5217\u5316\u65b9\u6cd5 :return: Source code in mplapi\\config.py 10 11 12 13 14 15 16 @abstractmethod def serialize ( self ): \"\"\" \u5e8f\u5217\u5316\u65b9\u6cd5 :return: \"\"\" return {} FriendConfig Bases: Config \u597d\u53cb\u8d44\u6599\u4fe1\u606f\u96c6\u5408 Source code in mplapi\\config.py 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 class FriendConfig ( Config ): \"\"\" \u597d\u53cb\u8d44\u6599\u4fe1\u606f\u96c6\u5408 \"\"\" def __init__ ( self ): self . nickname = None self . email = None self . age = None self . level = None self . sign = None self . sex = None def serialize ( self ): return { 'nickname' : self . nickname , 'email' : self . email , 'age' : self . age , 'level' : self . level , 'sign' : self . sign , 'sex' : self . sex } GroupConfig Bases: Config \u7fa4\u8d44\u6599\u4fe1\u606f\u96c6\u5408 Source code in mplapi\\config.py 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 class GroupConfig ( Config ): \"\"\" \u7fa4\u8d44\u6599\u4fe1\u606f\u96c6\u5408 \"\"\" def __init__ ( self ): self . name = None self . announcement = None self . confess_talk = None self . allow_member_invite = None self . auto_approve = None self . anonymous_chat = None def serialize ( self ): return { 'name' : self . name , 'announcement' : self . announcement , 'confessTalk' : self . confess_talk , 'allowMemberInvite' : self . allow_member_invite , 'autoApprove' : self . auto_approve , 'anonymousChat' : self . anonymous_chat } GroupMemberConfig Bases: Config \u7fa4\u6210\u5458\u8d44\u6599\u4fe1\u606f\u96c6\u5408 Source code in mplapi\\config.py 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 class GroupMemberConfig ( Config ): \"\"\" \u7fa4\u6210\u5458\u8d44\u6599\u4fe1\u606f\u96c6\u5408 \"\"\" def __init__ ( self ): self . id = None self . member_name = None self . special_title = None self . permission = None self . join_timestamp = None self . last_speak_timestamp = None self . mute_time_remaining = None def serialize ( self ): return { 'name' : self . member_name , 'specialTitle' : self . special_title }","title":"config"},{"location":"developer/moudle/config/#mplapi.config.Config","text":"\u8d44\u6599\u4fe1\u606f\u96c6\u5408 Source code in mplapi\\config.py 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 class Config ( metaclass = ABCMeta ): \"\"\" \u8d44\u6599\u4fe1\u606f\u96c6\u5408 \"\"\" @abstractmethod def serialize ( self ): \"\"\" \u5e8f\u5217\u5316\u65b9\u6cd5 :return: \"\"\" return {} def __str__ ( self ): return str ( self . serialize ())","title":"Config"},{"location":"developer/moudle/config/#mplapi.config.Config.serialize","text":"\u5e8f\u5217\u5316\u65b9\u6cd5 :return: Source code in mplapi\\config.py 10 11 12 13 14 15 16 @abstractmethod def serialize ( self ): \"\"\" \u5e8f\u5217\u5316\u65b9\u6cd5 :return: \"\"\" return {}","title":"serialize()"},{"location":"developer/moudle/config/#mplapi.config.FriendConfig","text":"Bases: Config \u597d\u53cb\u8d44\u6599\u4fe1\u606f\u96c6\u5408 Source code in mplapi\\config.py 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 class FriendConfig ( Config ): \"\"\" \u597d\u53cb\u8d44\u6599\u4fe1\u606f\u96c6\u5408 \"\"\" def __init__ ( self ): self . nickname = None self . email = None self . age = None self . level = None self . sign = None self . sex = None def serialize ( self ): return { 'nickname' : self . nickname , 'email' : self . email , 'age' : self . age , 'level' : self . level , 'sign' : self . sign , 'sex' : self . sex }","title":"FriendConfig"},{"location":"developer/moudle/config/#mplapi.config.GroupConfig","text":"Bases: Config \u7fa4\u8d44\u6599\u4fe1\u606f\u96c6\u5408 Source code in mplapi\\config.py 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 class GroupConfig ( Config ): \"\"\" \u7fa4\u8d44\u6599\u4fe1\u606f\u96c6\u5408 \"\"\" def __init__ ( self ): self . name = None self . announcement = None self . confess_talk = None self . allow_member_invite = None self . auto_approve = None self . anonymous_chat = None def serialize ( self ): return { 'name' : self . name , 'announcement' : self . announcement , 'confessTalk' : self . confess_talk , 'allowMemberInvite' : self . allow_member_invite , 'autoApprove' : self . auto_approve , 'anonymousChat' : self . anonymous_chat }","title":"GroupConfig"},{"location":"developer/moudle/config/#mplapi.config.GroupMemberConfig","text":"Bases: Config \u7fa4\u6210\u5458\u8d44\u6599\u4fe1\u606f\u96c6\u5408 Source code in mplapi\\config.py 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 class GroupMemberConfig ( Config ): \"\"\" \u7fa4\u6210\u5458\u8d44\u6599\u4fe1\u606f\u96c6\u5408 \"\"\" def __init__ ( self ): self . id = None self . member_name = None self . special_title = None self . permission = None self . join_timestamp = None self . last_speak_timestamp = None self . mute_time_remaining = None def serialize ( self ): return { 'name' : self . member_name , 'specialTitle' : self . special_title }","title":"GroupMemberConfig"},{"location":"developer/moudle/mirai/","text":"Bot \u4e00\u4e2a\u673a\u5668\u4eba\u7c7b\uff0c\u901a\u8fc7\u6b64\u6b64\u7c7b\u5185\u7ef4\u62a4\u7684\u65b9\u6cd5\u4e0emirai\u8fdb\u884c\u4ea4\u4e92 Source code in mplapi\\mirai.pyclass Bot : \"\"\" \u4e00\u4e2a\u673a\u5668\u4eba\u7c7b\uff0c\u901a\u8fc7\u6b64\u6b64\u7c7b\u5185\u7ef4\u62a4\u7684\u65b9\u6cd5\u4e0emirai\u8fdb\u884c\u4ea4\u4e92 \"\"\" @property def bot_qq ( self ) -> int : \"\"\" :return: bot qq\u53f7 \"\"\" pass @property def login_time ( self ) -> int : \"\"\" :return: bot\u767b\u5f55\u65f6\u95f4\u6233 \"\"\" pass def send_group_msg ( self , message : msg . Msg , group ): \"\"\" \u53d1\u9001\u7fa4\u6d88\u606f :param message: \u6d88\u606f\u4f53,\u4efb\u610f\u7ee7\u627f\u4e86Msg\u7c7b\u7684\u5bf9\u8c61 :param group: \u7fa4\u53f7 :return: \"\"\" pass def send_friend_msg ( self , message : msg . Msg , target ): \"\"\" \u53d1\u9001\u597d\u53cb\u6d88\u606f :param message: \u6d88\u606f\u4f53,\u4efb\u610f\u7ee7\u627f\u4e86Msg\u7c7b\u7684\u5bf9\u8c61 :param target: qq\u53f7 :return: \"\"\" pass def recall_msg ( self , source : msg . SourceMsg ): \"\"\" \u64a4\u56de\u6d88\u606f :param source: SourceMsg\u5bf9\u8c61 :return: \"\"\" pass def mute ( self , group , target , time ): \"\"\" \u7981\u8a00 :param group: \u7fa4\u53f7 :param target: \u7981\u8a00\u5bf9\u8c61qq\u53f7 :param time: \u7981\u8a00\u65f6\u957f \u79d2 :return: \"\"\" pass def mute_all ( self , group ): \"\"\" \u5168\u4f53\u7981\u8a00 :param group: \u7fa4\u53f7 :return: \"\"\" pass def un_mute ( self , group , target ): \"\"\" \u89e3\u9664\u7981\u8a00 :param group: \u7fa4\u53f7 :param target: \u88ab\u7981\u8a00\u7684qq\u53f7 :return: \"\"\" pass def un_mute_all ( self , group ): \"\"\" \u89e3\u9664\u5168\u4f53\u7981\u8a00 :param group: \u7fa4\u53f7 :return: \"\"\" pass def kick ( self , group , target ): \"\"\" \u8e22\u51fa\u7fa4\u804a :param group: \u7fa4\u53f7 :param target: \u8e22\u51fa\u5bf9\u8c61qq\u53f7 :return: \"\"\" pass def quit ( self , group ): \"\"\" \u9000\u51fa\u7fa4\u804a :param group: \u7fa4\u53f7 :return: \"\"\" pass def get_friend_list ( self ) -> list : \"\"\" \u83b7\u53d6\u597d\u53cb\u5217\u8868 :return: \u597d\u53cbqq\u53f7\u5217\u8868 \"\"\" pass def get_friend_info ( self , target ) -> config . FriendConfig : \"\"\" TODO \u83b7\u53d6\u597d\u53cb\u8d44\u6599 :param target: \u597d\u53cbqq\u53f7 :return: \u597d\u53cb\u8d44\u6599\u5bf9\u8c61 \"\"\" pass def get_group_list ( self ) -> list : \"\"\" \u83b7\u53d6\u7fa4\u5217\u8868 :return: \u5df2\u52a0\u5165\u7684\u7fa4\u5217\u8868 \"\"\" pass def get_group_info ( self , group ) -> config . GroupConfig : \"\"\" \u83b7\u53d6\u7fa4\u8d44\u6599 :param group: \u7fa4\u53f7 :return: \u7fa4\u8d44\u6599\u5bf9\u8c61 \"\"\" pass def get_group_member_list ( self , group ) -> list [ config . GroupMemberConfig ]: \"\"\" \u83b7\u53d6\u7fa4\u5458\u8d44\u6599\u5217\u8868 :param group: \u7fa4\u53f7 :return: \u7fa4\u5458\u8d44\u6599\u5bf9\u8c61\u5217\u8868 \"\"\" pass def get_group_member_info ( self , group , target ) -> config . GroupMemberConfig : \"\"\" TODO :param group: :param target: :return: \"\"\" pass def set_group_info ( self , group , info : config . GroupConfig ): \"\"\" \u8bbe\u7f6e\u7fa4\u8d44\u6599 :param group: \u7fa4\u53f7 :param info: GroupConfig\u5bf9\u8c61 :return: \"\"\" pass def set_group_member_info ( self , group , target , info : config . GroupMemberConfig ): \"\"\" \u8bbe\u7f6e\u7fa4\u6210\u5458\u8d44\u6599 :param group: \u7fa4\u53f7 :param target: \u7fa4\u6210\u5458qq\u53f7 :param info: GroupMemberConfig\u5bf9\u8c61 :return: \"\"\" pass def register_plugin ( self , py_plugin ): \"\"\" \u6ce8\u518c\u63d2\u4ef6\u5230bot :param py_plugin: PyPlugin\u5bf9\u8c61 :return: \"\"\" pass def set_plugin_permission ( self , plugin_name : str , permission : Permission ): \"\"\" \u4e3a\u63d2\u4ef6\u8bbe\u7f6e\u6743\u9650 :param plugin_name: \u63d2\u4ef6\u540d :param permission: Permission\u5bf9\u8c61 :return: \"\"\" pass def get_plugin_permission ( self , plugin_name : str ) -> Permission : \"\"\" \u83b7\u53d6\u63d2\u4ef6\u7684\u6743\u9650\u5bf9\u8c61 :param plugin_name: \u63d2\u4ef6\u540d :return: Permission\u5bf9\u8c61 \"\"\" pass def get_register_plugin_list ( self ) -> list : \"\"\" \u83b7\u53d6bot\u5185\u5df2\u6ce8\u518c\u7684\u63d2\u4ef6\u5bf9\u8c61\u5217\u8868 :return: Pyplugin\u5bf9\u8c61\u5217\u8868 \"\"\" pass def add_plugin_task ( self , task ): \"\"\" \u6dfb\u52a0\u4e00\u4e2a\u63d2\u4ef6\u4efb\u52a1 :param task: PluginTask\u5bf9\u8c61 :return: \"\"\" pass def get_plugin_task ( self , plugin_name ) -> list : \"\"\" \u83b7\u53d6\u63d2\u4ef6\u672a\u88ab\u6267\u884c\u4e14\u672a\u8d85\u65f6\u7684\u4efb\u52a1\u5217\u8868 :param plugin_name: \u63d2\u4ef6\u540d :return: PluginTask\u5bf9\u8c61\u5217\u8868 \"\"\" pass def remove_plugin_task ( self , task ): \"\"\" \u79fb\u9664\u4e00\u4e2a\u63d2\u4ef6\u4efb\u52a1 :param task: PluginTask\u5bf9\u8c61 :return: \"\"\" pass add_plugin_task ( task ) \u6dfb\u52a0\u4e00\u4e2a\u63d2\u4ef6\u4efb\u52a1 :param task: PluginTask\u5bf9\u8c61 :return: Source code in mplapi\\mirai.py 377 378 379 380 381 382 383 def add_plugin_task ( self , task ): \"\"\" \u6dfb\u52a0\u4e00\u4e2a\u63d2\u4ef6\u4efb\u52a1 :param task: PluginTask\u5bf9\u8c61 :return: \"\"\" pass bot_qq () property :return: bot qq\u53f7 Source code in mplapi\\mirai.py 186 187 188 189 190 191 @property def bot_qq ( self ) -> int : \"\"\" :return: bot qq\u53f7 \"\"\" pass get_friend_info ( target ) TODO \u83b7\u53d6\u597d\u53cb\u8d44\u6599 :param target: \u597d\u53cbqq\u53f7 :return: \u597d\u53cb\u8d44\u6599\u5bf9\u8c61 Source code in mplapi\\mirai.py 285 286 287 288 289 290 291 292 def get_friend_info ( self , target ) -> config . FriendConfig : \"\"\" TODO \u83b7\u53d6\u597d\u53cb\u8d44\u6599 :param target: \u597d\u53cbqq\u53f7 :return: \u597d\u53cb\u8d44\u6599\u5bf9\u8c61 \"\"\" pass get_friend_list () \u83b7\u53d6\u597d\u53cb\u5217\u8868 :return: \u597d\u53cbqq\u53f7\u5217\u8868 Source code in mplapi\\mirai.py 278 279 280 281 282 283 def get_friend_list ( self ) -> list : \"\"\" \u83b7\u53d6\u597d\u53cb\u5217\u8868 :return: \u597d\u53cbqq\u53f7\u5217\u8868 \"\"\" pass get_group_info ( group ) \u83b7\u53d6\u7fa4\u8d44\u6599 :param group: \u7fa4\u53f7 :return: \u7fa4\u8d44\u6599\u5bf9\u8c61 Source code in mplapi\\mirai.py 301 302 303 304 305 306 307 def get_group_info ( self , group ) -> config . GroupConfig : \"\"\" \u83b7\u53d6\u7fa4\u8d44\u6599 :param group: \u7fa4\u53f7 :return: \u7fa4\u8d44\u6599\u5bf9\u8c61 \"\"\" pass get_group_list () \u83b7\u53d6\u7fa4\u5217\u8868 :return: \u5df2\u52a0\u5165\u7684\u7fa4\u5217\u8868 Source code in mplapi\\mirai.py 294 295 296 297 298 299 def get_group_list ( self ) -> list : \"\"\" \u83b7\u53d6\u7fa4\u5217\u8868 :return: \u5df2\u52a0\u5165\u7684\u7fa4\u5217\u8868 \"\"\" pass get_group_member_info ( group , target ) TODO :param group: :param target: :return: Source code in mplapi\\mirai.py 317 318 319 320 321 322 323 324 def get_group_member_info ( self , group , target ) -> config . GroupMemberConfig : \"\"\" TODO :param group: :param target: :return: \"\"\" pass get_group_member_list ( group ) \u83b7\u53d6\u7fa4\u5458\u8d44\u6599\u5217\u8868 :param group: \u7fa4\u53f7 :return: \u7fa4\u5458\u8d44\u6599\u5bf9\u8c61\u5217\u8868 Source code in mplapi\\mirai.py 309 310 311 312 313 314 315 def get_group_member_list ( self , group ) -> list [ config . GroupMemberConfig ]: \"\"\" \u83b7\u53d6\u7fa4\u5458\u8d44\u6599\u5217\u8868 :param group: \u7fa4\u53f7 :return: \u7fa4\u5458\u8d44\u6599\u5bf9\u8c61\u5217\u8868 \"\"\" pass get_plugin_permission ( plugin_name ) \u83b7\u53d6\u63d2\u4ef6\u7684\u6743\u9650\u5bf9\u8c61 :param plugin_name: \u63d2\u4ef6\u540d :return: Permission\u5bf9\u8c61 Source code in mplapi\\mirai.py 362 363 364 365 366 367 368 def get_plugin_permission ( self , plugin_name : str ) -> Permission : \"\"\" \u83b7\u53d6\u63d2\u4ef6\u7684\u6743\u9650\u5bf9\u8c61 :param plugin_name: \u63d2\u4ef6\u540d :return: Permission\u5bf9\u8c61 \"\"\" pass get_plugin_task ( plugin_name ) \u83b7\u53d6\u63d2\u4ef6\u672a\u88ab\u6267\u884c\u4e14\u672a\u8d85\u65f6\u7684\u4efb\u52a1\u5217\u8868 :param plugin_name: \u63d2\u4ef6\u540d :return: PluginTask\u5bf9\u8c61\u5217\u8868 Source code in mplapi\\mirai.py 385 386 387 388 389 390 391 def get_plugin_task ( self , plugin_name ) -> list : \"\"\" \u83b7\u53d6\u63d2\u4ef6\u672a\u88ab\u6267\u884c\u4e14\u672a\u8d85\u65f6\u7684\u4efb\u52a1\u5217\u8868 :param plugin_name: \u63d2\u4ef6\u540d :return: PluginTask\u5bf9\u8c61\u5217\u8868 \"\"\" pass get_register_plugin_list () \u83b7\u53d6bot\u5185\u5df2\u6ce8\u518c\u7684\u63d2\u4ef6\u5bf9\u8c61\u5217\u8868 :return: Pyplugin\u5bf9\u8c61\u5217\u8868 Source code in mplapi\\mirai.py 370 371 372 373 374 375 def get_register_plugin_list ( self ) -> list : \"\"\" \u83b7\u53d6bot\u5185\u5df2\u6ce8\u518c\u7684\u63d2\u4ef6\u5bf9\u8c61\u5217\u8868 :return: Pyplugin\u5bf9\u8c61\u5217\u8868 \"\"\" pass kick ( group , target ) \u8e22\u51fa\u7fa4\u804a :param group: \u7fa4\u53f7 :param target: \u8e22\u51fa\u5bf9\u8c61qq\u53f7 :return: Source code in mplapi\\mirai.py 261 262 263 264 265 266 267 268 def kick ( self , group , target ): \"\"\" \u8e22\u51fa\u7fa4\u804a :param group: \u7fa4\u53f7 :param target: \u8e22\u51fa\u5bf9\u8c61qq\u53f7 :return: \"\"\" pass login_time () property :return: bot\u767b\u5f55\u65f6\u95f4\u6233 Source code in mplapi\\mirai.py 193 194 195 196 197 198 @property def login_time ( self ) -> int : \"\"\" :return: bot\u767b\u5f55\u65f6\u95f4\u6233 \"\"\" pass mute ( group , target , time ) \u7981\u8a00 :param group: \u7fa4\u53f7 :param target: \u7981\u8a00\u5bf9\u8c61qq\u53f7 :param time: \u7981\u8a00\u65f6\u957f \u79d2 :return: Source code in mplapi\\mirai.py 226 227 228 229 230 231 232 233 234 def mute ( self , group , target , time ): \"\"\" \u7981\u8a00 :param group: \u7fa4\u53f7 :param target: \u7981\u8a00\u5bf9\u8c61qq\u53f7 :param time: \u7981\u8a00\u65f6\u957f \u79d2 :return: \"\"\" pass mute_all ( group ) \u5168\u4f53\u7981\u8a00 :param group: \u7fa4\u53f7 :return: Source code in mplapi\\mirai.py 236 237 238 239 240 241 242 def mute_all ( self , group ): \"\"\" \u5168\u4f53\u7981\u8a00 :param group: \u7fa4\u53f7 :return: \"\"\" pass quit ( group ) \u9000\u51fa\u7fa4\u804a :param group: \u7fa4\u53f7 :return: Source code in mplapi\\mirai.py 270 271 272 273 274 275 276 def quit ( self , group ): \"\"\" \u9000\u51fa\u7fa4\u804a :param group: \u7fa4\u53f7 :return: \"\"\" pass recall_msg ( source ) \u64a4\u56de\u6d88\u606f :param source: SourceMsg\u5bf9\u8c61 :return: Source code in mplapi\\mirai.py 218 219 220 221 222 223 224 def recall_msg ( self , source : msg . SourceMsg ): \"\"\" \u64a4\u56de\u6d88\u606f :param source: SourceMsg\u5bf9\u8c61 :return: \"\"\" pass register_plugin ( py_plugin ) \u6ce8\u518c\u63d2\u4ef6\u5230bot :param py_plugin: PyPlugin\u5bf9\u8c61 :return: Source code in mplapi\\mirai.py 345 346 347 348 349 350 351 def register_plugin ( self , py_plugin ): \"\"\" \u6ce8\u518c\u63d2\u4ef6\u5230bot :param py_plugin: PyPlugin\u5bf9\u8c61 :return: \"\"\" pass remove_plugin_task ( task ) \u79fb\u9664\u4e00\u4e2a\u63d2\u4ef6\u4efb\u52a1 :param task: PluginTask\u5bf9\u8c61 :return: Source code in mplapi\\mirai.py 393 394 395 396 397 398 399 def remove_plugin_task ( self , task ): \"\"\" \u79fb\u9664\u4e00\u4e2a\u63d2\u4ef6\u4efb\u52a1 :param task: PluginTask\u5bf9\u8c61 :return: \"\"\" pass send_friend_msg ( message , target ) \u53d1\u9001\u597d\u53cb\u6d88\u606f :param message: \u6d88\u606f\u4f53,\u4efb\u610f\u7ee7\u627f\u4e86Msg\u7c7b\u7684\u5bf9\u8c61 :param target: qq\u53f7 :return: Source code in mplapi\\mirai.py 209 210 211 212 213 214 215 216 def send_friend_msg ( self , message : msg . Msg , target ): \"\"\" \u53d1\u9001\u597d\u53cb\u6d88\u606f :param message: \u6d88\u606f\u4f53,\u4efb\u610f\u7ee7\u627f\u4e86Msg\u7c7b\u7684\u5bf9\u8c61 :param target: qq\u53f7 :return: \"\"\" pass send_group_msg ( message , group ) \u53d1\u9001\u7fa4\u6d88\u606f :param message: \u6d88\u606f\u4f53,\u4efb\u610f\u7ee7\u627f\u4e86Msg\u7c7b\u7684\u5bf9\u8c61 :param group: \u7fa4\u53f7 :return: Source code in mplapi\\mirai.py 200 201 202 203 204 205 206 207 def send_group_msg ( self , message : msg . Msg , group ): \"\"\" \u53d1\u9001\u7fa4\u6d88\u606f :param message: \u6d88\u606f\u4f53,\u4efb\u610f\u7ee7\u627f\u4e86Msg\u7c7b\u7684\u5bf9\u8c61 :param group: \u7fa4\u53f7 :return: \"\"\" pass set_group_info ( group , info ) \u8bbe\u7f6e\u7fa4\u8d44\u6599 :param group: \u7fa4\u53f7 :param info: GroupConfig\u5bf9\u8c61 :return: Source code in mplapi\\mirai.py 326 327 328 329 330 331 332 333 def set_group_info ( self , group , info : config . GroupConfig ): \"\"\" \u8bbe\u7f6e\u7fa4\u8d44\u6599 :param group: \u7fa4\u53f7 :param info: GroupConfig\u5bf9\u8c61 :return: \"\"\" pass set_group_member_info ( group , target , info ) \u8bbe\u7f6e\u7fa4\u6210\u5458\u8d44\u6599 :param group: \u7fa4\u53f7 :param target: \u7fa4\u6210\u5458qq\u53f7 :param info: GroupMemberConfig\u5bf9\u8c61 :return: Source code in mplapi\\mirai.py 335 336 337 338 339 340 341 342 343 def set_group_member_info ( self , group , target , info : config . GroupMemberConfig ): \"\"\" \u8bbe\u7f6e\u7fa4\u6210\u5458\u8d44\u6599 :param group: \u7fa4\u53f7 :param target: \u7fa4\u6210\u5458qq\u53f7 :param info: GroupMemberConfig\u5bf9\u8c61 :return: \"\"\" pass set_plugin_permission ( plugin_name , permission ) \u4e3a\u63d2\u4ef6\u8bbe\u7f6e\u6743\u9650 :param plugin_name: \u63d2\u4ef6\u540d :param permission: Permission\u5bf9\u8c61 :return: Source code in mplapi\\mirai.py 353 354 355 356 357 358 359 360 def set_plugin_permission ( self , plugin_name : str , permission : Permission ): \"\"\" \u4e3a\u63d2\u4ef6\u8bbe\u7f6e\u6743\u9650 :param plugin_name: \u63d2\u4ef6\u540d :param permission: Permission\u5bf9\u8c61 :return: \"\"\" pass un_mute ( group , target ) \u89e3\u9664\u7981\u8a00 :param group: \u7fa4\u53f7 :param target: \u88ab\u7981\u8a00\u7684qq\u53f7 :return: Source code in mplapi\\mirai.py 244 245 246 247 248 249 250 251 def un_mute ( self , group , target ): \"\"\" \u89e3\u9664\u7981\u8a00 :param group: \u7fa4\u53f7 :param target: \u88ab\u7981\u8a00\u7684qq\u53f7 :return: \"\"\" pass un_mute_all ( group ) \u89e3\u9664\u5168\u4f53\u7981\u8a00 :param group: \u7fa4\u53f7 :return: Source code in mplapi\\mirai.py 253 254 255 256 257 258 259 def un_mute_all ( self , group ): \"\"\" \u89e3\u9664\u5168\u4f53\u7981\u8a00 :param group: \u7fa4\u53f7 :return: \"\"\" pass Permission \u63d2\u4ef6\u7684\u6743\u9650\u7c7b, \u4e00\u4e2a\u63d2\u4ef6\u548c\u4e00\u4e2abot\u5bf9\u5e94\u8be5\u7c7b\u4e00\u4e2a\u5bf9\u8c61, \u9ed8\u8ba4\u90fd\u4e3a\u5168\u5f00\u653e\u6a21\u5f0f, BLACK_LIST_MODE \u9ed1\u540d\u5355\u6a21\u5f0f, WHITE_LIST_MODE \u767d\u540d\u5355\u6a21\u5f0f, ALL_MODE \u5168\u5f00\u653e\u6a21\u5f0f, Source code in mplapi\\mirai.py 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 class Permission : \"\"\" \u63d2\u4ef6\u7684\u6743\u9650\u7c7b, \u4e00\u4e2a\u63d2\u4ef6\u548c\u4e00\u4e2abot\u5bf9\u5e94\u8be5\u7c7b\u4e00\u4e2a\u5bf9\u8c61, \u9ed8\u8ba4\u90fd\u4e3a\u5168\u5f00\u653e\u6a21\u5f0f, BLACK_LIST_MODE \u9ed1\u540d\u5355\u6a21\u5f0f, WHITE_LIST_MODE \u767d\u540d\u5355\u6a21\u5f0f, ALL_MODE \u5168\u5f00\u653e\u6a21\u5f0f, \"\"\" BLACK_LIST_MODE = 0 WHITE_LIST_MODE = 1 ALL_MODE = 2 @property def group_list ( self ) -> set : \"\"\" :return: \u7fa4\u6743\u9650\u5217\u8868 \"\"\" pass @property def friend_list ( self ) -> set : \"\"\" :return: \u597d\u53cb\u6743\u9650\u5217\u8868 \"\"\" pass @property def admin_list ( self ) -> set : \"\"\" :return: \u7ba1\u7406\u5458\u6743\u9650\u5217\u8868 \"\"\" pass def set_group_mode ( self , mode : int ): \"\"\" \u8bbe\u7f6e\u7fa4\u6743\u9650\u6a21\u5f0f :param mode: Permission\u7c7b\u5185\u7f6e\u7684\u4e09\u4e2a\u6a21\u5f0f\u679a\u4e3e :return: \"\"\" pass def get_group_mode ( self ) -> int : \"\"\" \u83b7\u53d6\u7fa4\u6743\u9650\u6a21\u5f0f :return: Permission\u7c7b\u5185\u7f6e\u7684\u4e09\u4e2a\u6a21\u5f0f\u679a\u4e3e \"\"\" pass def set_friend_mode ( self , mode : int ): \"\"\" \u8bbe\u7f6e\u597d\u53cb\u6743\u9650\u6a21\u5f0f :param mode: Permission\u7c7b\u5185\u7f6e\u7684\u4e09\u4e2a\u6a21\u5f0f\u679a\u4e3e :return: \"\"\" pass def get_friend_mode ( self ) -> int : \"\"\" \u83b7\u53d6\u597d\u53cb\u6743\u9650\u6a21\u5f0f :return: Permission\u7c7b\u5185\u7f6e\u7684\u4e09\u4e2a\u6a21\u5f0f\u679a\u4e3e \"\"\" pass @property def PIN ( self ): \"\"\" \u83b7\u53d6\u8be5\u6743\u9650\u5bf9\u8c61\u7684PIN(\u4e00\u4e2abot\u548c\u4e00\u4e2a\u63d2\u4ef6\u5bf9\u5e94\u4e00\u4e2aPIN\uff0c\u8be5PIN\u4e0d\u4f1a\u6539\u53d8) PIN\u53ef\u4ee5\u7528\u4e8e\u63d2\u4ef6\u521a\u542f\u7528\u65f6\u8ba4\u8bc1\u7ba1\u7406\u5458 :return: \"\"\" pass def reset_PIN ( self , num = PIN_NUM ): \"\"\" \u91cd\u7f6e\u8be5\u6743\u9650\u5bf9\u8c61\u7684PIN :param num: PIN\u7684\u4f4d\u6570\uff08\u9ed8\u8ba48\u4f4d\uff09 :return: \"\"\" pass def reset_group ( self ): \"\"\" \u6e05\u7a7a\u7fa4\u6743\u9650\u5217\u8868 :return: \"\"\" pass def reset_friend ( self ): \"\"\" \u6e05\u7a7a\u7fa4\u597d\u53cb\u6743\u9650\u5217\u8868 :return: \"\"\" pass def reset_admin ( self ): \"\"\" \u6e05\u7a7a\u7ba1\u7406\u5458\u6743\u9650\u5217\u8868 :return: \"\"\" pass def add_group ( self , group ): \"\"\" \u6dfb\u52a0\u7fa4\u81f3\u7fa4\u6743\u9650\u5217\u8868 :param group: \u7fa4\u53f7 :return: \"\"\" pass def remove_group ( self , group ): \"\"\" \u4ece\u7fa4\u6743\u9650\u5217\u8868\u79fb\u9664\u7fa4 :param group: \u7fa4\u53f7 :return: \"\"\" pass def add_admin ( self , qq ): \"\"\" \u6dfb\u52a0\u7ba1\u7406\u5458\u81f3\u7ba1\u7406\u5458\u6743\u9650\u5217\u8868 :param qq: qq\u53f7 :return: \"\"\" pass def remove_admin ( self , qq ): \"\"\" \u4ece\u7ba1\u7406\u5458\u6743\u9650\u5217\u8868\u79fb\u9664\u7ba1\u7406\u5458 :param qq: qq\u53f7 :return: \"\"\" pass def has_admin_permission ( self , qq ) -> bool : \"\"\" \u5224\u65ad\u8be5qq\u53f7\u662f\u5426\u4e3a\u7ba1\u7406\u5458 :param qq: qq\u53f7 :return: bool \"\"\" pass def add_friend ( self , qq ): \"\"\" \u6dfb\u52a0\u597d\u53cb\u81f3\u597d\u53cb\u6743\u9650\u5217\u8868 :param qq: qq\u53f7 :return: \"\"\" pass def remove_friend ( self , qq ): \"\"\" \u4ece\u597d\u53cb\u6743\u9650\u5217\u8868\u79fb\u9664\u597d\u53cb :param qq: qq\u53f7 :return: \"\"\" pass def has_group_permission ( self , group ) -> bool : \"\"\" \u5224\u65ad\u8be5\u7fa4\u662f\u5426\u6709\u6743\u9650(\u5224\u65ad\u89c4\u5219\u53d6\u51b3\u4e8emode) :param group: \u7fa4\u53f7 :return: bool \"\"\" pass def has_friend_permission ( self , qq ) -> bool : \"\"\" \u5224\u65ad\u8be5\u597d\u53cb\u662f\u5426\u6709\u6743\u9650(\u5224\u65ad\u89c4\u5219\u53d6\u51b3\u4e8emode) :param qq: qq\u53f7 :return: bool \"\"\" pass PIN () property \u83b7\u53d6\u8be5\u6743\u9650\u5bf9\u8c61\u7684PIN(\u4e00\u4e2abot\u548c\u4e00\u4e2a\u63d2\u4ef6\u5bf9\u5e94\u4e00\u4e2aPIN\uff0c\u8be5PIN\u4e0d\u4f1a\u6539\u53d8) PIN\u53ef\u4ee5\u7528\u4e8e\u63d2\u4ef6\u521a\u542f\u7528\u65f6\u8ba4\u8bc1\u7ba1\u7406\u5458 :return: Source code in mplapi\\mirai.py 71 72 73 74 75 76 77 @property def PIN ( self ): \"\"\" \u83b7\u53d6\u8be5\u6743\u9650\u5bf9\u8c61\u7684PIN(\u4e00\u4e2abot\u548c\u4e00\u4e2a\u63d2\u4ef6\u5bf9\u5e94\u4e00\u4e2aPIN\uff0c\u8be5PIN\u4e0d\u4f1a\u6539\u53d8) PIN\u53ef\u4ee5\u7528\u4e8e\u63d2\u4ef6\u521a\u542f\u7528\u65f6\u8ba4\u8bc1\u7ba1\u7406\u5458 :return: \"\"\" pass add_admin ( qq ) \u6dfb\u52a0\u7ba1\u7406\u5458\u81f3\u7ba1\u7406\u5458\u6743\u9650\u5217\u8868 :param qq: qq\u53f7 :return: Source code in mplapi\\mirai.py 124 125 126 127 128 129 130 def add_admin ( self , qq ): \"\"\" \u6dfb\u52a0\u7ba1\u7406\u5458\u81f3\u7ba1\u7406\u5458\u6743\u9650\u5217\u8868 :param qq: qq\u53f7 :return: \"\"\" pass add_friend ( qq ) \u6dfb\u52a0\u597d\u53cb\u81f3\u597d\u53cb\u6743\u9650\u5217\u8868 :param qq: qq\u53f7 :return: Source code in mplapi\\mirai.py 148 149 150 151 152 153 154 def add_friend ( self , qq ): \"\"\" \u6dfb\u52a0\u597d\u53cb\u81f3\u597d\u53cb\u6743\u9650\u5217\u8868 :param qq: qq\u53f7 :return: \"\"\" pass add_group ( group ) \u6dfb\u52a0\u7fa4\u81f3\u7fa4\u6743\u9650\u5217\u8868 :param group: \u7fa4\u53f7 :return: Source code in mplapi\\mirai.py 108 109 110 111 112 113 114 def add_group ( self , group ): \"\"\" \u6dfb\u52a0\u7fa4\u81f3\u7fa4\u6743\u9650\u5217\u8868 :param group: \u7fa4\u53f7 :return: \"\"\" pass admin_list () property :return: \u7ba1\u7406\u5458\u6743\u9650\u5217\u8868 Source code in mplapi\\mirai.py 34 35 36 37 38 39 @property def admin_list ( self ) -> set : \"\"\" :return: \u7ba1\u7406\u5458\u6743\u9650\u5217\u8868 \"\"\" pass friend_list () property :return: \u597d\u53cb\u6743\u9650\u5217\u8868 Source code in mplapi\\mirai.py 27 28 29 30 31 32 @property def friend_list ( self ) -> set : \"\"\" :return: \u597d\u53cb\u6743\u9650\u5217\u8868 \"\"\" pass get_friend_mode () \u83b7\u53d6\u597d\u53cb\u6743\u9650\u6a21\u5f0f :return: Permission\u7c7b\u5185\u7f6e\u7684\u4e09\u4e2a\u6a21\u5f0f\u679a\u4e3e Source code in mplapi\\mirai.py 64 65 66 67 68 69 def get_friend_mode ( self ) -> int : \"\"\" \u83b7\u53d6\u597d\u53cb\u6743\u9650\u6a21\u5f0f :return: Permission\u7c7b\u5185\u7f6e\u7684\u4e09\u4e2a\u6a21\u5f0f\u679a\u4e3e \"\"\" pass get_group_mode () \u83b7\u53d6\u7fa4\u6743\u9650\u6a21\u5f0f :return: Permission\u7c7b\u5185\u7f6e\u7684\u4e09\u4e2a\u6a21\u5f0f\u679a\u4e3e Source code in mplapi\\mirai.py 49 50 51 52 53 54 def get_group_mode ( self ) -> int : \"\"\" \u83b7\u53d6\u7fa4\u6743\u9650\u6a21\u5f0f :return: Permission\u7c7b\u5185\u7f6e\u7684\u4e09\u4e2a\u6a21\u5f0f\u679a\u4e3e \"\"\" pass group_list () property :return: \u7fa4\u6743\u9650\u5217\u8868 Source code in mplapi\\mirai.py 20 21 22 23 24 25 @property def group_list ( self ) -> set : \"\"\" :return: \u7fa4\u6743\u9650\u5217\u8868 \"\"\" pass has_admin_permission ( qq ) \u5224\u65ad\u8be5qq\u53f7\u662f\u5426\u4e3a\u7ba1\u7406\u5458 :param qq: qq\u53f7 :return: bool Source code in mplapi\\mirai.py 140 141 142 143 144 145 146 def has_admin_permission ( self , qq ) -> bool : \"\"\" \u5224\u65ad\u8be5qq\u53f7\u662f\u5426\u4e3a\u7ba1\u7406\u5458 :param qq: qq\u53f7 :return: bool \"\"\" pass has_friend_permission ( qq ) \u5224\u65ad\u8be5\u597d\u53cb\u662f\u5426\u6709\u6743\u9650(\u5224\u65ad\u89c4\u5219\u53d6\u51b3\u4e8emode) :param qq: qq\u53f7 :return: bool Source code in mplapi\\mirai.py 172 173 174 175 176 177 178 def has_friend_permission ( self , qq ) -> bool : \"\"\" \u5224\u65ad\u8be5\u597d\u53cb\u662f\u5426\u6709\u6743\u9650(\u5224\u65ad\u89c4\u5219\u53d6\u51b3\u4e8emode) :param qq: qq\u53f7 :return: bool \"\"\" pass has_group_permission ( group ) \u5224\u65ad\u8be5\u7fa4\u662f\u5426\u6709\u6743\u9650(\u5224\u65ad\u89c4\u5219\u53d6\u51b3\u4e8emode) :param group: \u7fa4\u53f7 :return: bool Source code in mplapi\\mirai.py 164 165 166 167 168 169 170 def has_group_permission ( self , group ) -> bool : \"\"\" \u5224\u65ad\u8be5\u7fa4\u662f\u5426\u6709\u6743\u9650(\u5224\u65ad\u89c4\u5219\u53d6\u51b3\u4e8emode) :param group: \u7fa4\u53f7 :return: bool \"\"\" pass remove_admin ( qq ) \u4ece\u7ba1\u7406\u5458\u6743\u9650\u5217\u8868\u79fb\u9664\u7ba1\u7406\u5458 :param qq: qq\u53f7 :return: Source code in mplapi\\mirai.py 132 133 134 135 136 137 138 def remove_admin ( self , qq ): \"\"\" \u4ece\u7ba1\u7406\u5458\u6743\u9650\u5217\u8868\u79fb\u9664\u7ba1\u7406\u5458 :param qq: qq\u53f7 :return: \"\"\" pass remove_friend ( qq ) \u4ece\u597d\u53cb\u6743\u9650\u5217\u8868\u79fb\u9664\u597d\u53cb :param qq: qq\u53f7 :return: Source code in mplapi\\mirai.py 156 157 158 159 160 161 162 def remove_friend ( self , qq ): \"\"\" \u4ece\u597d\u53cb\u6743\u9650\u5217\u8868\u79fb\u9664\u597d\u53cb :param qq: qq\u53f7 :return: \"\"\" pass remove_group ( group ) \u4ece\u7fa4\u6743\u9650\u5217\u8868\u79fb\u9664\u7fa4 :param group: \u7fa4\u53f7 :return: Source code in mplapi\\mirai.py 116 117 118 119 120 121 122 def remove_group ( self , group ): \"\"\" \u4ece\u7fa4\u6743\u9650\u5217\u8868\u79fb\u9664\u7fa4 :param group: \u7fa4\u53f7 :return: \"\"\" pass reset_PIN ( num = PIN_NUM ) \u91cd\u7f6e\u8be5\u6743\u9650\u5bf9\u8c61\u7684PIN :param num: PIN\u7684\u4f4d\u6570\uff08\u9ed8\u8ba48\u4f4d\uff09 :return: Source code in mplapi\\mirai.py 79 80 81 82 83 84 85 def reset_PIN ( self , num = PIN_NUM ): \"\"\" \u91cd\u7f6e\u8be5\u6743\u9650\u5bf9\u8c61\u7684PIN :param num: PIN\u7684\u4f4d\u6570\uff08\u9ed8\u8ba48\u4f4d\uff09 :return: \"\"\" pass reset_admin () \u6e05\u7a7a\u7ba1\u7406\u5458\u6743\u9650\u5217\u8868 :return: Source code in mplapi\\mirai.py 101 102 103 104 105 106 def reset_admin ( self ): \"\"\" \u6e05\u7a7a\u7ba1\u7406\u5458\u6743\u9650\u5217\u8868 :return: \"\"\" pass reset_friend () \u6e05\u7a7a\u7fa4\u597d\u53cb\u6743\u9650\u5217\u8868 :return: Source code in mplapi\\mirai.py 94 95 96 97 98 99 def reset_friend ( self ): \"\"\" \u6e05\u7a7a\u7fa4\u597d\u53cb\u6743\u9650\u5217\u8868 :return: \"\"\" pass reset_group () \u6e05\u7a7a\u7fa4\u6743\u9650\u5217\u8868 :return: Source code in mplapi\\mirai.py 87 88 89 90 91 92 def reset_group ( self ): \"\"\" \u6e05\u7a7a\u7fa4\u6743\u9650\u5217\u8868 :return: \"\"\" pass set_friend_mode ( mode ) \u8bbe\u7f6e\u597d\u53cb\u6743\u9650\u6a21\u5f0f :param mode: Permission\u7c7b\u5185\u7f6e\u7684\u4e09\u4e2a\u6a21\u5f0f\u679a\u4e3e :return: Source code in mplapi\\mirai.py 56 57 58 59 60 61 62 def set_friend_mode ( self , mode : int ): \"\"\" \u8bbe\u7f6e\u597d\u53cb\u6743\u9650\u6a21\u5f0f :param mode: Permission\u7c7b\u5185\u7f6e\u7684\u4e09\u4e2a\u6a21\u5f0f\u679a\u4e3e :return: \"\"\" pass set_group_mode ( mode ) \u8bbe\u7f6e\u7fa4\u6743\u9650\u6a21\u5f0f :param mode: Permission\u7c7b\u5185\u7f6e\u7684\u4e09\u4e2a\u6a21\u5f0f\u679a\u4e3e :return: Source code in mplapi\\mirai.py 41 42 43 44 45 46 47 def set_group_mode ( self , mode : int ): \"\"\" \u8bbe\u7f6e\u7fa4\u6743\u9650\u6a21\u5f0f :param mode: Permission\u7c7b\u5185\u7f6e\u7684\u4e09\u4e2a\u6a21\u5f0f\u679a\u4e3e :return: \"\"\" pass","title":"mirai"},{"location":"developer/moudle/mirai/#mplapi.mirai.Bot","text":"\u4e00\u4e2a\u673a\u5668\u4eba\u7c7b\uff0c\u901a\u8fc7\u6b64\u6b64\u7c7b\u5185\u7ef4\u62a4\u7684\u65b9\u6cd5\u4e0emirai\u8fdb\u884c\u4ea4\u4e92 Source code in mplapi\\mirai.pyclass Bot : \"\"\" \u4e00\u4e2a\u673a\u5668\u4eba\u7c7b\uff0c\u901a\u8fc7\u6b64\u6b64\u7c7b\u5185\u7ef4\u62a4\u7684\u65b9\u6cd5\u4e0emirai\u8fdb\u884c\u4ea4\u4e92 \"\"\" @property def bot_qq ( self ) -> int : \"\"\" :return: bot qq\u53f7 \"\"\" pass @property def login_time ( self ) -> int : \"\"\" :return: bot\u767b\u5f55\u65f6\u95f4\u6233 \"\"\" pass def send_group_msg ( self , message : msg . Msg , group ): \"\"\" \u53d1\u9001\u7fa4\u6d88\u606f :param message: \u6d88\u606f\u4f53,\u4efb\u610f\u7ee7\u627f\u4e86Msg\u7c7b\u7684\u5bf9\u8c61 :param group: \u7fa4\u53f7 :return: \"\"\" pass def send_friend_msg ( self , message : msg . Msg , target ): \"\"\" \u53d1\u9001\u597d\u53cb\u6d88\u606f :param message: \u6d88\u606f\u4f53,\u4efb\u610f\u7ee7\u627f\u4e86Msg\u7c7b\u7684\u5bf9\u8c61 :param target: qq\u53f7 :return: \"\"\" pass def recall_msg ( self , source : msg . SourceMsg ): \"\"\" \u64a4\u56de\u6d88\u606f :param source: SourceMsg\u5bf9\u8c61 :return: \"\"\" pass def mute ( self , group , target , time ): \"\"\" \u7981\u8a00 :param group: \u7fa4\u53f7 :param target: \u7981\u8a00\u5bf9\u8c61qq\u53f7 :param time: \u7981\u8a00\u65f6\u957f \u79d2 :return: \"\"\" pass def mute_all ( self , group ): \"\"\" \u5168\u4f53\u7981\u8a00 :param group: \u7fa4\u53f7 :return: \"\"\" pass def un_mute ( self , group , target ): \"\"\" \u89e3\u9664\u7981\u8a00 :param group: \u7fa4\u53f7 :param target: \u88ab\u7981\u8a00\u7684qq\u53f7 :return: \"\"\" pass def un_mute_all ( self , group ): \"\"\" \u89e3\u9664\u5168\u4f53\u7981\u8a00 :param group: \u7fa4\u53f7 :return: \"\"\" pass def kick ( self , group , target ): \"\"\" \u8e22\u51fa\u7fa4\u804a :param group: \u7fa4\u53f7 :param target: \u8e22\u51fa\u5bf9\u8c61qq\u53f7 :return: \"\"\" pass def quit ( self , group ): \"\"\" \u9000\u51fa\u7fa4\u804a :param group: \u7fa4\u53f7 :return: \"\"\" pass def get_friend_list ( self ) -> list : \"\"\" \u83b7\u53d6\u597d\u53cb\u5217\u8868 :return: \u597d\u53cbqq\u53f7\u5217\u8868 \"\"\" pass def get_friend_info ( self , target ) -> config . FriendConfig : \"\"\" TODO \u83b7\u53d6\u597d\u53cb\u8d44\u6599 :param target: \u597d\u53cbqq\u53f7 :return: \u597d\u53cb\u8d44\u6599\u5bf9\u8c61 \"\"\" pass def get_group_list ( self ) -> list : \"\"\" \u83b7\u53d6\u7fa4\u5217\u8868 :return: \u5df2\u52a0\u5165\u7684\u7fa4\u5217\u8868 \"\"\" pass def get_group_info ( self , group ) -> config . GroupConfig : \"\"\" \u83b7\u53d6\u7fa4\u8d44\u6599 :param group: \u7fa4\u53f7 :return: \u7fa4\u8d44\u6599\u5bf9\u8c61 \"\"\" pass def get_group_member_list ( self , group ) -> list [ config . GroupMemberConfig ]: \"\"\" \u83b7\u53d6\u7fa4\u5458\u8d44\u6599\u5217\u8868 :param group: \u7fa4\u53f7 :return: \u7fa4\u5458\u8d44\u6599\u5bf9\u8c61\u5217\u8868 \"\"\" pass def get_group_member_info ( self , group , target ) -> config . GroupMemberConfig : \"\"\" TODO :param group: :param target: :return: \"\"\" pass def set_group_info ( self , group , info : config . GroupConfig ): \"\"\" \u8bbe\u7f6e\u7fa4\u8d44\u6599 :param group: \u7fa4\u53f7 :param info: GroupConfig\u5bf9\u8c61 :return: \"\"\" pass def set_group_member_info ( self , group , target , info : config . GroupMemberConfig ): \"\"\" \u8bbe\u7f6e\u7fa4\u6210\u5458\u8d44\u6599 :param group: \u7fa4\u53f7 :param target: \u7fa4\u6210\u5458qq\u53f7 :param info: GroupMemberConfig\u5bf9\u8c61 :return: \"\"\" pass def register_plugin ( self , py_plugin ): \"\"\" \u6ce8\u518c\u63d2\u4ef6\u5230bot :param py_plugin: PyPlugin\u5bf9\u8c61 :return: \"\"\" pass def set_plugin_permission ( self , plugin_name : str , permission : Permission ): \"\"\" \u4e3a\u63d2\u4ef6\u8bbe\u7f6e\u6743\u9650 :param plugin_name: \u63d2\u4ef6\u540d :param permission: Permission\u5bf9\u8c61 :return: \"\"\" pass def get_plugin_permission ( self , plugin_name : str ) -> Permission : \"\"\" \u83b7\u53d6\u63d2\u4ef6\u7684\u6743\u9650\u5bf9\u8c61 :param plugin_name: \u63d2\u4ef6\u540d :return: Permission\u5bf9\u8c61 \"\"\" pass def get_register_plugin_list ( self ) -> list : \"\"\" \u83b7\u53d6bot\u5185\u5df2\u6ce8\u518c\u7684\u63d2\u4ef6\u5bf9\u8c61\u5217\u8868 :return: Pyplugin\u5bf9\u8c61\u5217\u8868 \"\"\" pass def add_plugin_task ( self , task ): \"\"\" \u6dfb\u52a0\u4e00\u4e2a\u63d2\u4ef6\u4efb\u52a1 :param task: PluginTask\u5bf9\u8c61 :return: \"\"\" pass def get_plugin_task ( self , plugin_name ) -> list : \"\"\" \u83b7\u53d6\u63d2\u4ef6\u672a\u88ab\u6267\u884c\u4e14\u672a\u8d85\u65f6\u7684\u4efb\u52a1\u5217\u8868 :param plugin_name: \u63d2\u4ef6\u540d :return: PluginTask\u5bf9\u8c61\u5217\u8868 \"\"\" pass def remove_plugin_task ( self , task ): \"\"\" \u79fb\u9664\u4e00\u4e2a\u63d2\u4ef6\u4efb\u52a1 :param task: PluginTask\u5bf9\u8c61 :return: \"\"\" pass","title":"Bot"},{"location":"developer/moudle/mirai/#mplapi.mirai.Bot.add_plugin_task","text":"\u6dfb\u52a0\u4e00\u4e2a\u63d2\u4ef6\u4efb\u52a1 :param task: PluginTask\u5bf9\u8c61 :return: Source code in mplapi\\mirai.py 377 378 379 380 381 382 383 def add_plugin_task ( self , task ): \"\"\" \u6dfb\u52a0\u4e00\u4e2a\u63d2\u4ef6\u4efb\u52a1 :param task: PluginTask\u5bf9\u8c61 :return: \"\"\" pass","title":"add_plugin_task()"},{"location":"developer/moudle/mirai/#mplapi.mirai.Bot.bot_qq","text":":return: bot qq\u53f7 Source code in mplapi\\mirai.py 186 187 188 189 190 191 @property def bot_qq ( self ) -> int : \"\"\" :return: bot qq\u53f7 \"\"\" pass","title":"bot_qq()"},{"location":"developer/moudle/mirai/#mplapi.mirai.Bot.get_friend_info","text":"TODO \u83b7\u53d6\u597d\u53cb\u8d44\u6599 :param target: \u597d\u53cbqq\u53f7 :return: \u597d\u53cb\u8d44\u6599\u5bf9\u8c61 Source code in mplapi\\mirai.py 285 286 287 288 289 290 291 292 def get_friend_info ( self , target ) -> config . FriendConfig : \"\"\" TODO \u83b7\u53d6\u597d\u53cb\u8d44\u6599 :param target: \u597d\u53cbqq\u53f7 :return: \u597d\u53cb\u8d44\u6599\u5bf9\u8c61 \"\"\" pass","title":"get_friend_info()"},{"location":"developer/moudle/mirai/#mplapi.mirai.Bot.get_friend_list","text":"\u83b7\u53d6\u597d\u53cb\u5217\u8868 :return: \u597d\u53cbqq\u53f7\u5217\u8868 Source code in mplapi\\mirai.py 278 279 280 281 282 283 def get_friend_list ( self ) -> list : \"\"\" \u83b7\u53d6\u597d\u53cb\u5217\u8868 :return: \u597d\u53cbqq\u53f7\u5217\u8868 \"\"\" pass","title":"get_friend_list()"},{"location":"developer/moudle/mirai/#mplapi.mirai.Bot.get_group_info","text":"\u83b7\u53d6\u7fa4\u8d44\u6599 :param group: \u7fa4\u53f7 :return: \u7fa4\u8d44\u6599\u5bf9\u8c61 Source code in mplapi\\mirai.py 301 302 303 304 305 306 307 def get_group_info ( self , group ) -> config . GroupConfig : \"\"\" \u83b7\u53d6\u7fa4\u8d44\u6599 :param group: \u7fa4\u53f7 :return: \u7fa4\u8d44\u6599\u5bf9\u8c61 \"\"\" pass","title":"get_group_info()"},{"location":"developer/moudle/mirai/#mplapi.mirai.Bot.get_group_list","text":"\u83b7\u53d6\u7fa4\u5217\u8868 :return: \u5df2\u52a0\u5165\u7684\u7fa4\u5217\u8868 Source code in mplapi\\mirai.py 294 295 296 297 298 299 def get_group_list ( self ) -> list : \"\"\" \u83b7\u53d6\u7fa4\u5217\u8868 :return: \u5df2\u52a0\u5165\u7684\u7fa4\u5217\u8868 \"\"\" pass","title":"get_group_list()"},{"location":"developer/moudle/mirai/#mplapi.mirai.Bot.get_group_member_info","text":"TODO :param group: :param target: :return: Source code in mplapi\\mirai.py 317 318 319 320 321 322 323 324 def get_group_member_info ( self , group , target ) -> config . GroupMemberConfig : \"\"\" TODO :param group: :param target: :return: \"\"\" pass","title":"get_group_member_info()"},{"location":"developer/moudle/mirai/#mplapi.mirai.Bot.get_group_member_list","text":"\u83b7\u53d6\u7fa4\u5458\u8d44\u6599\u5217\u8868 :param group: \u7fa4\u53f7 :return: \u7fa4\u5458\u8d44\u6599\u5bf9\u8c61\u5217\u8868 Source code in mplapi\\mirai.py 309 310 311 312 313 314 315 def get_group_member_list ( self , group ) -> list [ config . GroupMemberConfig ]: \"\"\" \u83b7\u53d6\u7fa4\u5458\u8d44\u6599\u5217\u8868 :param group: \u7fa4\u53f7 :return: \u7fa4\u5458\u8d44\u6599\u5bf9\u8c61\u5217\u8868 \"\"\" pass","title":"get_group_member_list()"},{"location":"developer/moudle/mirai/#mplapi.mirai.Bot.get_plugin_permission","text":"\u83b7\u53d6\u63d2\u4ef6\u7684\u6743\u9650\u5bf9\u8c61 :param plugin_name: \u63d2\u4ef6\u540d :return: Permission\u5bf9\u8c61 Source code in mplapi\\mirai.py 362 363 364 365 366 367 368 def get_plugin_permission ( self , plugin_name : str ) -> Permission : \"\"\" \u83b7\u53d6\u63d2\u4ef6\u7684\u6743\u9650\u5bf9\u8c61 :param plugin_name: \u63d2\u4ef6\u540d :return: Permission\u5bf9\u8c61 \"\"\" pass","title":"get_plugin_permission()"},{"location":"developer/moudle/mirai/#mplapi.mirai.Bot.get_plugin_task","text":"\u83b7\u53d6\u63d2\u4ef6\u672a\u88ab\u6267\u884c\u4e14\u672a\u8d85\u65f6\u7684\u4efb\u52a1\u5217\u8868 :param plugin_name: \u63d2\u4ef6\u540d :return: PluginTask\u5bf9\u8c61\u5217\u8868 Source code in mplapi\\mirai.py 385 386 387 388 389 390 391 def get_plugin_task ( self , plugin_name ) -> list : \"\"\" \u83b7\u53d6\u63d2\u4ef6\u672a\u88ab\u6267\u884c\u4e14\u672a\u8d85\u65f6\u7684\u4efb\u52a1\u5217\u8868 :param plugin_name: \u63d2\u4ef6\u540d :return: PluginTask\u5bf9\u8c61\u5217\u8868 \"\"\" pass","title":"get_plugin_task()"},{"location":"developer/moudle/mirai/#mplapi.mirai.Bot.get_register_plugin_list","text":"\u83b7\u53d6bot\u5185\u5df2\u6ce8\u518c\u7684\u63d2\u4ef6\u5bf9\u8c61\u5217\u8868 :return: Pyplugin\u5bf9\u8c61\u5217\u8868 Source code in mplapi\\mirai.py 370 371 372 373 374 375 def get_register_plugin_list ( self ) -> list : \"\"\" \u83b7\u53d6bot\u5185\u5df2\u6ce8\u518c\u7684\u63d2\u4ef6\u5bf9\u8c61\u5217\u8868 :return: Pyplugin\u5bf9\u8c61\u5217\u8868 \"\"\" pass","title":"get_register_plugin_list()"},{"location":"developer/moudle/mirai/#mplapi.mirai.Bot.kick","text":"\u8e22\u51fa\u7fa4\u804a :param group: \u7fa4\u53f7 :param target: \u8e22\u51fa\u5bf9\u8c61qq\u53f7 :return: Source code in mplapi\\mirai.py 261 262 263 264 265 266 267 268 def kick ( self , group , target ): \"\"\" \u8e22\u51fa\u7fa4\u804a :param group: \u7fa4\u53f7 :param target: \u8e22\u51fa\u5bf9\u8c61qq\u53f7 :return: \"\"\" pass","title":"kick()"},{"location":"developer/moudle/mirai/#mplapi.mirai.Bot.login_time","text":":return: bot\u767b\u5f55\u65f6\u95f4\u6233 Source code in mplapi\\mirai.py 193 194 195 196 197 198 @property def login_time ( self ) -> int : \"\"\" :return: bot\u767b\u5f55\u65f6\u95f4\u6233 \"\"\" pass","title":"login_time()"},{"location":"developer/moudle/mirai/#mplapi.mirai.Bot.mute","text":"\u7981\u8a00 :param group: \u7fa4\u53f7 :param target: \u7981\u8a00\u5bf9\u8c61qq\u53f7 :param time: \u7981\u8a00\u65f6\u957f \u79d2 :return: Source code in mplapi\\mirai.py 226 227 228 229 230 231 232 233 234 def mute ( self , group , target , time ): \"\"\" \u7981\u8a00 :param group: \u7fa4\u53f7 :param target: \u7981\u8a00\u5bf9\u8c61qq\u53f7 :param time: \u7981\u8a00\u65f6\u957f \u79d2 :return: \"\"\" pass","title":"mute()"},{"location":"developer/moudle/mirai/#mplapi.mirai.Bot.mute_all","text":"\u5168\u4f53\u7981\u8a00 :param group: \u7fa4\u53f7 :return: Source code in mplapi\\mirai.py 236 237 238 239 240 241 242 def mute_all ( self , group ): \"\"\" \u5168\u4f53\u7981\u8a00 :param group: \u7fa4\u53f7 :return: \"\"\" pass","title":"mute_all()"},{"location":"developer/moudle/mirai/#mplapi.mirai.Bot.quit","text":"\u9000\u51fa\u7fa4\u804a :param group: \u7fa4\u53f7 :return: Source code in mplapi\\mirai.py 270 271 272 273 274 275 276 def quit ( self , group ): \"\"\" \u9000\u51fa\u7fa4\u804a :param group: \u7fa4\u53f7 :return: \"\"\" pass","title":"quit()"},{"location":"developer/moudle/mirai/#mplapi.mirai.Bot.recall_msg","text":"\u64a4\u56de\u6d88\u606f :param source: SourceMsg\u5bf9\u8c61 :return: Source code in mplapi\\mirai.py 218 219 220 221 222 223 224 def recall_msg ( self , source : msg . SourceMsg ): \"\"\" \u64a4\u56de\u6d88\u606f :param source: SourceMsg\u5bf9\u8c61 :return: \"\"\" pass","title":"recall_msg()"},{"location":"developer/moudle/mirai/#mplapi.mirai.Bot.register_plugin","text":"\u6ce8\u518c\u63d2\u4ef6\u5230bot :param py_plugin: PyPlugin\u5bf9\u8c61 :return: Source code in mplapi\\mirai.py 345 346 347 348 349 350 351 def register_plugin ( self , py_plugin ): \"\"\" \u6ce8\u518c\u63d2\u4ef6\u5230bot :param py_plugin: PyPlugin\u5bf9\u8c61 :return: \"\"\" pass","title":"register_plugin()"},{"location":"developer/moudle/mirai/#mplapi.mirai.Bot.remove_plugin_task","text":"\u79fb\u9664\u4e00\u4e2a\u63d2\u4ef6\u4efb\u52a1 :param task: PluginTask\u5bf9\u8c61 :return: Source code in mplapi\\mirai.py 393 394 395 396 397 398 399 def remove_plugin_task ( self , task ): \"\"\" \u79fb\u9664\u4e00\u4e2a\u63d2\u4ef6\u4efb\u52a1 :param task: PluginTask\u5bf9\u8c61 :return: \"\"\" pass","title":"remove_plugin_task()"},{"location":"developer/moudle/mirai/#mplapi.mirai.Bot.send_friend_msg","text":"\u53d1\u9001\u597d\u53cb\u6d88\u606f :param message: \u6d88\u606f\u4f53,\u4efb\u610f\u7ee7\u627f\u4e86Msg\u7c7b\u7684\u5bf9\u8c61 :param target: qq\u53f7 :return: Source code in mplapi\\mirai.py 209 210 211 212 213 214 215 216 def send_friend_msg ( self , message : msg . Msg , target ): \"\"\" \u53d1\u9001\u597d\u53cb\u6d88\u606f :param message: \u6d88\u606f\u4f53,\u4efb\u610f\u7ee7\u627f\u4e86Msg\u7c7b\u7684\u5bf9\u8c61 :param target: qq\u53f7 :return: \"\"\" pass","title":"send_friend_msg()"},{"location":"developer/moudle/mirai/#mplapi.mirai.Bot.send_group_msg","text":"\u53d1\u9001\u7fa4\u6d88\u606f :param message: \u6d88\u606f\u4f53,\u4efb\u610f\u7ee7\u627f\u4e86Msg\u7c7b\u7684\u5bf9\u8c61 :param group: \u7fa4\u53f7 :return: Source code in mplapi\\mirai.py 200 201 202 203 204 205 206 207 def send_group_msg ( self , message : msg . Msg , group ): \"\"\" \u53d1\u9001\u7fa4\u6d88\u606f :param message: \u6d88\u606f\u4f53,\u4efb\u610f\u7ee7\u627f\u4e86Msg\u7c7b\u7684\u5bf9\u8c61 :param group: \u7fa4\u53f7 :return: \"\"\" pass","title":"send_group_msg()"},{"location":"developer/moudle/mirai/#mplapi.mirai.Bot.set_group_info","text":"\u8bbe\u7f6e\u7fa4\u8d44\u6599 :param group: \u7fa4\u53f7 :param info: GroupConfig\u5bf9\u8c61 :return: Source code in mplapi\\mirai.py 326 327 328 329 330 331 332 333 def set_group_info ( self , group , info : config . GroupConfig ): \"\"\" \u8bbe\u7f6e\u7fa4\u8d44\u6599 :param group: \u7fa4\u53f7 :param info: GroupConfig\u5bf9\u8c61 :return: \"\"\" pass","title":"set_group_info()"},{"location":"developer/moudle/mirai/#mplapi.mirai.Bot.set_group_member_info","text":"\u8bbe\u7f6e\u7fa4\u6210\u5458\u8d44\u6599 :param group: \u7fa4\u53f7 :param target: \u7fa4\u6210\u5458qq\u53f7 :param info: GroupMemberConfig\u5bf9\u8c61 :return: Source code in mplapi\\mirai.py 335 336 337 338 339 340 341 342 343 def set_group_member_info ( self , group , target , info : config . GroupMemberConfig ): \"\"\" \u8bbe\u7f6e\u7fa4\u6210\u5458\u8d44\u6599 :param group: \u7fa4\u53f7 :param target: \u7fa4\u6210\u5458qq\u53f7 :param info: GroupMemberConfig\u5bf9\u8c61 :return: \"\"\" pass","title":"set_group_member_info()"},{"location":"developer/moudle/mirai/#mplapi.mirai.Bot.set_plugin_permission","text":"\u4e3a\u63d2\u4ef6\u8bbe\u7f6e\u6743\u9650 :param plugin_name: \u63d2\u4ef6\u540d :param permission: Permission\u5bf9\u8c61 :return: Source code in mplapi\\mirai.py 353 354 355 356 357 358 359 360 def set_plugin_permission ( self , plugin_name : str , permission : Permission ): \"\"\" \u4e3a\u63d2\u4ef6\u8bbe\u7f6e\u6743\u9650 :param plugin_name: \u63d2\u4ef6\u540d :param permission: Permission\u5bf9\u8c61 :return: \"\"\" pass","title":"set_plugin_permission()"},{"location":"developer/moudle/mirai/#mplapi.mirai.Bot.un_mute","text":"\u89e3\u9664\u7981\u8a00 :param group: \u7fa4\u53f7 :param target: \u88ab\u7981\u8a00\u7684qq\u53f7 :return: Source code in mplapi\\mirai.py 244 245 246 247 248 249 250 251 def un_mute ( self , group , target ): \"\"\" \u89e3\u9664\u7981\u8a00 :param group: \u7fa4\u53f7 :param target: \u88ab\u7981\u8a00\u7684qq\u53f7 :return: \"\"\" pass","title":"un_mute()"},{"location":"developer/moudle/mirai/#mplapi.mirai.Bot.un_mute_all","text":"\u89e3\u9664\u5168\u4f53\u7981\u8a00 :param group: \u7fa4\u53f7 :return: Source code in mplapi\\mirai.py 253 254 255 256 257 258 259 def un_mute_all ( self , group ): \"\"\" \u89e3\u9664\u5168\u4f53\u7981\u8a00 :param group: \u7fa4\u53f7 :return: \"\"\" pass","title":"un_mute_all()"},{"location":"developer/moudle/mirai/#mplapi.mirai.Permission","text":"\u63d2\u4ef6\u7684\u6743\u9650\u7c7b, \u4e00\u4e2a\u63d2\u4ef6\u548c\u4e00\u4e2abot\u5bf9\u5e94\u8be5\u7c7b\u4e00\u4e2a\u5bf9\u8c61, \u9ed8\u8ba4\u90fd\u4e3a\u5168\u5f00\u653e\u6a21\u5f0f, BLACK_LIST_MODE \u9ed1\u540d\u5355\u6a21\u5f0f, WHITE_LIST_MODE \u767d\u540d\u5355\u6a21\u5f0f, ALL_MODE \u5168\u5f00\u653e\u6a21\u5f0f, Source code in mplapi\\mirai.pyclass Permission : \"\"\" \u63d2\u4ef6\u7684\u6743\u9650\u7c7b, \u4e00\u4e2a\u63d2\u4ef6\u548c\u4e00\u4e2abot\u5bf9\u5e94\u8be5\u7c7b\u4e00\u4e2a\u5bf9\u8c61, \u9ed8\u8ba4\u90fd\u4e3a\u5168\u5f00\u653e\u6a21\u5f0f, BLACK_LIST_MODE \u9ed1\u540d\u5355\u6a21\u5f0f, WHITE_LIST_MODE \u767d\u540d\u5355\u6a21\u5f0f, ALL_MODE \u5168\u5f00\u653e\u6a21\u5f0f, \"\"\" BLACK_LIST_MODE = 0 WHITE_LIST_MODE = 1 ALL_MODE = 2 @property def group_list ( self ) -> set : \"\"\" :return: \u7fa4\u6743\u9650\u5217\u8868 \"\"\" pass @property def friend_list ( self ) -> set : \"\"\" :return: \u597d\u53cb\u6743\u9650\u5217\u8868 \"\"\" pass @property def admin_list ( self ) -> set : \"\"\" :return: \u7ba1\u7406\u5458\u6743\u9650\u5217\u8868 \"\"\" pass def set_group_mode ( self , mode : int ): \"\"\" \u8bbe\u7f6e\u7fa4\u6743\u9650\u6a21\u5f0f :param mode: Permission\u7c7b\u5185\u7f6e\u7684\u4e09\u4e2a\u6a21\u5f0f\u679a\u4e3e :return: \"\"\" pass def get_group_mode ( self ) -> int : \"\"\" \u83b7\u53d6\u7fa4\u6743\u9650\u6a21\u5f0f :return: Permission\u7c7b\u5185\u7f6e\u7684\u4e09\u4e2a\u6a21\u5f0f\u679a\u4e3e \"\"\" pass def set_friend_mode ( self , mode : int ): \"\"\" \u8bbe\u7f6e\u597d\u53cb\u6743\u9650\u6a21\u5f0f :param mode: Permission\u7c7b\u5185\u7f6e\u7684\u4e09\u4e2a\u6a21\u5f0f\u679a\u4e3e :return: \"\"\" pass def get_friend_mode ( self ) -> int : \"\"\" \u83b7\u53d6\u597d\u53cb\u6743\u9650\u6a21\u5f0f :return: Permission\u7c7b\u5185\u7f6e\u7684\u4e09\u4e2a\u6a21\u5f0f\u679a\u4e3e \"\"\" pass @property def PIN ( self ): \"\"\" \u83b7\u53d6\u8be5\u6743\u9650\u5bf9\u8c61\u7684PIN(\u4e00\u4e2abot\u548c\u4e00\u4e2a\u63d2\u4ef6\u5bf9\u5e94\u4e00\u4e2aPIN\uff0c\u8be5PIN\u4e0d\u4f1a\u6539\u53d8) PIN\u53ef\u4ee5\u7528\u4e8e\u63d2\u4ef6\u521a\u542f\u7528\u65f6\u8ba4\u8bc1\u7ba1\u7406\u5458 :return: \"\"\" pass def reset_PIN ( self , num = PIN_NUM ): \"\"\" \u91cd\u7f6e\u8be5\u6743\u9650\u5bf9\u8c61\u7684PIN :param num: PIN\u7684\u4f4d\u6570\uff08\u9ed8\u8ba48\u4f4d\uff09 :return: \"\"\" pass def reset_group ( self ): \"\"\" \u6e05\u7a7a\u7fa4\u6743\u9650\u5217\u8868 :return: \"\"\" pass def reset_friend ( self ): \"\"\" \u6e05\u7a7a\u7fa4\u597d\u53cb\u6743\u9650\u5217\u8868 :return: \"\"\" pass def reset_admin ( self ): \"\"\" \u6e05\u7a7a\u7ba1\u7406\u5458\u6743\u9650\u5217\u8868 :return: \"\"\" pass def add_group ( self , group ): \"\"\" \u6dfb\u52a0\u7fa4\u81f3\u7fa4\u6743\u9650\u5217\u8868 :param group: \u7fa4\u53f7 :return: \"\"\" pass def remove_group ( self , group ): \"\"\" \u4ece\u7fa4\u6743\u9650\u5217\u8868\u79fb\u9664\u7fa4 :param group: \u7fa4\u53f7 :return: \"\"\" pass def add_admin ( self , qq ): \"\"\" \u6dfb\u52a0\u7ba1\u7406\u5458\u81f3\u7ba1\u7406\u5458\u6743\u9650\u5217\u8868 :param qq: qq\u53f7 :return: \"\"\" pass def remove_admin ( self , qq ): \"\"\" \u4ece\u7ba1\u7406\u5458\u6743\u9650\u5217\u8868\u79fb\u9664\u7ba1\u7406\u5458 :param qq: qq\u53f7 :return: \"\"\" pass def has_admin_permission ( self , qq ) -> bool : \"\"\" \u5224\u65ad\u8be5qq\u53f7\u662f\u5426\u4e3a\u7ba1\u7406\u5458 :param qq: qq\u53f7 :return: bool \"\"\" pass def add_friend ( self , qq ): \"\"\" \u6dfb\u52a0\u597d\u53cb\u81f3\u597d\u53cb\u6743\u9650\u5217\u8868 :param qq: qq\u53f7 :return: \"\"\" pass def remove_friend ( self , qq ): \"\"\" \u4ece\u597d\u53cb\u6743\u9650\u5217\u8868\u79fb\u9664\u597d\u53cb :param qq: qq\u53f7 :return: \"\"\" pass def has_group_permission ( self , group ) -> bool : \"\"\" \u5224\u65ad\u8be5\u7fa4\u662f\u5426\u6709\u6743\u9650(\u5224\u65ad\u89c4\u5219\u53d6\u51b3\u4e8emode) :param group: \u7fa4\u53f7 :return: bool \"\"\" pass def has_friend_permission ( self , qq ) -> bool : \"\"\" \u5224\u65ad\u8be5\u597d\u53cb\u662f\u5426\u6709\u6743\u9650(\u5224\u65ad\u89c4\u5219\u53d6\u51b3\u4e8emode) :param qq: qq\u53f7 :return: bool \"\"\" pass","title":"Permission"},{"location":"developer/moudle/mirai/#mplapi.mirai.Permission.PIN","text":"\u83b7\u53d6\u8be5\u6743\u9650\u5bf9\u8c61\u7684PIN(\u4e00\u4e2abot\u548c\u4e00\u4e2a\u63d2\u4ef6\u5bf9\u5e94\u4e00\u4e2aPIN\uff0c\u8be5PIN\u4e0d\u4f1a\u6539\u53d8) PIN\u53ef\u4ee5\u7528\u4e8e\u63d2\u4ef6\u521a\u542f\u7528\u65f6\u8ba4\u8bc1\u7ba1\u7406\u5458 :return: Source code in mplapi\\mirai.py 71 72 73 74 75 76 77 @property def PIN ( self ): \"\"\" \u83b7\u53d6\u8be5\u6743\u9650\u5bf9\u8c61\u7684PIN(\u4e00\u4e2abot\u548c\u4e00\u4e2a\u63d2\u4ef6\u5bf9\u5e94\u4e00\u4e2aPIN\uff0c\u8be5PIN\u4e0d\u4f1a\u6539\u53d8) PIN\u53ef\u4ee5\u7528\u4e8e\u63d2\u4ef6\u521a\u542f\u7528\u65f6\u8ba4\u8bc1\u7ba1\u7406\u5458 :return: \"\"\" pass","title":"PIN()"},{"location":"developer/moudle/mirai/#mplapi.mirai.Permission.add_admin","text":"\u6dfb\u52a0\u7ba1\u7406\u5458\u81f3\u7ba1\u7406\u5458\u6743\u9650\u5217\u8868 :param qq: qq\u53f7 :return: Source code in mplapi\\mirai.py 124 125 126 127 128 129 130 def add_admin ( self , qq ): \"\"\" \u6dfb\u52a0\u7ba1\u7406\u5458\u81f3\u7ba1\u7406\u5458\u6743\u9650\u5217\u8868 :param qq: qq\u53f7 :return: \"\"\" pass","title":"add_admin()"},{"location":"developer/moudle/mirai/#mplapi.mirai.Permission.add_friend","text":"\u6dfb\u52a0\u597d\u53cb\u81f3\u597d\u53cb\u6743\u9650\u5217\u8868 :param qq: qq\u53f7 :return: Source code in mplapi\\mirai.py 148 149 150 151 152 153 154 def add_friend ( self , qq ): \"\"\" \u6dfb\u52a0\u597d\u53cb\u81f3\u597d\u53cb\u6743\u9650\u5217\u8868 :param qq: qq\u53f7 :return: \"\"\" pass","title":"add_friend()"},{"location":"developer/moudle/mirai/#mplapi.mirai.Permission.add_group","text":"\u6dfb\u52a0\u7fa4\u81f3\u7fa4\u6743\u9650\u5217\u8868 :param group: \u7fa4\u53f7 :return: Source code in mplapi\\mirai.py 108 109 110 111 112 113 114 def add_group ( self , group ): \"\"\" \u6dfb\u52a0\u7fa4\u81f3\u7fa4\u6743\u9650\u5217\u8868 :param group: \u7fa4\u53f7 :return: \"\"\" pass","title":"add_group()"},{"location":"developer/moudle/mirai/#mplapi.mirai.Permission.admin_list","text":":return: \u7ba1\u7406\u5458\u6743\u9650\u5217\u8868 Source code in mplapi\\mirai.py 34 35 36 37 38 39 @property def admin_list ( self ) -> set : \"\"\" :return: \u7ba1\u7406\u5458\u6743\u9650\u5217\u8868 \"\"\" pass","title":"admin_list()"},{"location":"developer/moudle/mirai/#mplapi.mirai.Permission.friend_list","text":":return: \u597d\u53cb\u6743\u9650\u5217\u8868 Source code in mplapi\\mirai.py 27 28 29 30 31 32 @property def friend_list ( self ) -> set : \"\"\" :return: \u597d\u53cb\u6743\u9650\u5217\u8868 \"\"\" pass","title":"friend_list()"},{"location":"developer/moudle/mirai/#mplapi.mirai.Permission.get_friend_mode","text":"\u83b7\u53d6\u597d\u53cb\u6743\u9650\u6a21\u5f0f :return: Permission\u7c7b\u5185\u7f6e\u7684\u4e09\u4e2a\u6a21\u5f0f\u679a\u4e3e Source code in mplapi\\mirai.py 64 65 66 67 68 69 def get_friend_mode ( self ) -> int : \"\"\" \u83b7\u53d6\u597d\u53cb\u6743\u9650\u6a21\u5f0f :return: Permission\u7c7b\u5185\u7f6e\u7684\u4e09\u4e2a\u6a21\u5f0f\u679a\u4e3e \"\"\" pass","title":"get_friend_mode()"},{"location":"developer/moudle/mirai/#mplapi.mirai.Permission.get_group_mode","text":"\u83b7\u53d6\u7fa4\u6743\u9650\u6a21\u5f0f :return: Permission\u7c7b\u5185\u7f6e\u7684\u4e09\u4e2a\u6a21\u5f0f\u679a\u4e3e Source code in mplapi\\mirai.py 49 50 51 52 53 54 def get_group_mode ( self ) -> int : \"\"\" \u83b7\u53d6\u7fa4\u6743\u9650\u6a21\u5f0f :return: Permission\u7c7b\u5185\u7f6e\u7684\u4e09\u4e2a\u6a21\u5f0f\u679a\u4e3e \"\"\" pass","title":"get_group_mode()"},{"location":"developer/moudle/mirai/#mplapi.mirai.Permission.group_list","text":":return: \u7fa4\u6743\u9650\u5217\u8868 Source code in mplapi\\mirai.py 20 21 22 23 24 25 @property def group_list ( self ) -> set : \"\"\" :return: \u7fa4\u6743\u9650\u5217\u8868 \"\"\" pass","title":"group_list()"},{"location":"developer/moudle/mirai/#mplapi.mirai.Permission.has_admin_permission","text":"\u5224\u65ad\u8be5qq\u53f7\u662f\u5426\u4e3a\u7ba1\u7406\u5458 :param qq: qq\u53f7 :return: bool Source code in mplapi\\mirai.py 140 141 142 143 144 145 146 def has_admin_permission ( self , qq ) -> bool : \"\"\" \u5224\u65ad\u8be5qq\u53f7\u662f\u5426\u4e3a\u7ba1\u7406\u5458 :param qq: qq\u53f7 :return: bool \"\"\" pass","title":"has_admin_permission()"},{"location":"developer/moudle/mirai/#mplapi.mirai.Permission.has_friend_permission","text":"\u5224\u65ad\u8be5\u597d\u53cb\u662f\u5426\u6709\u6743\u9650(\u5224\u65ad\u89c4\u5219\u53d6\u51b3\u4e8emode) :param qq: qq\u53f7 :return: bool Source code in mplapi\\mirai.py 172 173 174 175 176 177 178 def has_friend_permission ( self , qq ) -> bool : \"\"\" \u5224\u65ad\u8be5\u597d\u53cb\u662f\u5426\u6709\u6743\u9650(\u5224\u65ad\u89c4\u5219\u53d6\u51b3\u4e8emode) :param qq: qq\u53f7 :return: bool \"\"\" pass","title":"has_friend_permission()"},{"location":"developer/moudle/mirai/#mplapi.mirai.Permission.has_group_permission","text":"\u5224\u65ad\u8be5\u7fa4\u662f\u5426\u6709\u6743\u9650(\u5224\u65ad\u89c4\u5219\u53d6\u51b3\u4e8emode) :param group: \u7fa4\u53f7 :return: bool Source code in mplapi\\mirai.py 164 165 166 167 168 169 170 def has_group_permission ( self , group ) -> bool : \"\"\" \u5224\u65ad\u8be5\u7fa4\u662f\u5426\u6709\u6743\u9650(\u5224\u65ad\u89c4\u5219\u53d6\u51b3\u4e8emode) :param group: \u7fa4\u53f7 :return: bool \"\"\" pass","title":"has_group_permission()"},{"location":"developer/moudle/mirai/#mplapi.mirai.Permission.remove_admin","text":"\u4ece\u7ba1\u7406\u5458\u6743\u9650\u5217\u8868\u79fb\u9664\u7ba1\u7406\u5458 :param qq: qq\u53f7 :return: Source code in mplapi\\mirai.py 132 133 134 135 136 137 138 def remove_admin ( self , qq ): \"\"\" \u4ece\u7ba1\u7406\u5458\u6743\u9650\u5217\u8868\u79fb\u9664\u7ba1\u7406\u5458 :param qq: qq\u53f7 :return: \"\"\" pass","title":"remove_admin()"},{"location":"developer/moudle/mirai/#mplapi.mirai.Permission.remove_friend","text":"\u4ece\u597d\u53cb\u6743\u9650\u5217\u8868\u79fb\u9664\u597d\u53cb :param qq: qq\u53f7 :return: Source code in mplapi\\mirai.py 156 157 158 159 160 161 162 def remove_friend ( self , qq ): \"\"\" \u4ece\u597d\u53cb\u6743\u9650\u5217\u8868\u79fb\u9664\u597d\u53cb :param qq: qq\u53f7 :return: \"\"\" pass","title":"remove_friend()"},{"location":"developer/moudle/mirai/#mplapi.mirai.Permission.remove_group","text":"\u4ece\u7fa4\u6743\u9650\u5217\u8868\u79fb\u9664\u7fa4 :param group: \u7fa4\u53f7 :return: Source code in mplapi\\mirai.py 116 117 118 119 120 121 122 def remove_group ( self , group ): \"\"\" \u4ece\u7fa4\u6743\u9650\u5217\u8868\u79fb\u9664\u7fa4 :param group: \u7fa4\u53f7 :return: \"\"\" pass","title":"remove_group()"},{"location":"developer/moudle/mirai/#mplapi.mirai.Permission.reset_PIN","text":"\u91cd\u7f6e\u8be5\u6743\u9650\u5bf9\u8c61\u7684PIN :param num: PIN\u7684\u4f4d\u6570\uff08\u9ed8\u8ba48\u4f4d\uff09 :return: Source code in mplapi\\mirai.py 79 80 81 82 83 84 85 def reset_PIN ( self , num = PIN_NUM ): \"\"\" \u91cd\u7f6e\u8be5\u6743\u9650\u5bf9\u8c61\u7684PIN :param num: PIN\u7684\u4f4d\u6570\uff08\u9ed8\u8ba48\u4f4d\uff09 :return: \"\"\" pass","title":"reset_PIN()"},{"location":"developer/moudle/mirai/#mplapi.mirai.Permission.reset_admin","text":"\u6e05\u7a7a\u7ba1\u7406\u5458\u6743\u9650\u5217\u8868 :return: Source code in mplapi\\mirai.py 101 102 103 104 105 106 def reset_admin ( self ): \"\"\" \u6e05\u7a7a\u7ba1\u7406\u5458\u6743\u9650\u5217\u8868 :return: \"\"\" pass","title":"reset_admin()"},{"location":"developer/moudle/mirai/#mplapi.mirai.Permission.reset_friend","text":"\u6e05\u7a7a\u7fa4\u597d\u53cb\u6743\u9650\u5217\u8868 :return: Source code in mplapi\\mirai.py 94 95 96 97 98 99 def reset_friend ( self ): \"\"\" \u6e05\u7a7a\u7fa4\u597d\u53cb\u6743\u9650\u5217\u8868 :return: \"\"\" pass","title":"reset_friend()"},{"location":"developer/moudle/mirai/#mplapi.mirai.Permission.reset_group","text":"\u6e05\u7a7a\u7fa4\u6743\u9650\u5217\u8868 :return: Source code in mplapi\\mirai.py 87 88 89 90 91 92 def reset_group ( self ): \"\"\" \u6e05\u7a7a\u7fa4\u6743\u9650\u5217\u8868 :return: \"\"\" pass","title":"reset_group()"},{"location":"developer/moudle/mirai/#mplapi.mirai.Permission.set_friend_mode","text":"\u8bbe\u7f6e\u597d\u53cb\u6743\u9650\u6a21\u5f0f :param mode: Permission\u7c7b\u5185\u7f6e\u7684\u4e09\u4e2a\u6a21\u5f0f\u679a\u4e3e :return: Source code in mplapi\\mirai.py 56 57 58 59 60 61 62 def set_friend_mode ( self , mode : int ): \"\"\" \u8bbe\u7f6e\u597d\u53cb\u6743\u9650\u6a21\u5f0f :param mode: Permission\u7c7b\u5185\u7f6e\u7684\u4e09\u4e2a\u6a21\u5f0f\u679a\u4e3e :return: \"\"\" pass","title":"set_friend_mode()"},{"location":"developer/moudle/mirai/#mplapi.mirai.Permission.set_group_mode","text":"\u8bbe\u7f6e\u7fa4\u6743\u9650\u6a21\u5f0f :param mode: Permission\u7c7b\u5185\u7f6e\u7684\u4e09\u4e2a\u6a21\u5f0f\u679a\u4e3e :return: Source code in mplapi\\mirai.py 41 42 43 44 45 46 47 def set_group_mode ( self , mode : int ): \"\"\" \u8bbe\u7f6e\u7fa4\u6743\u9650\u6a21\u5f0f :param mode: Permission\u7c7b\u5185\u7f6e\u7684\u4e09\u4e2a\u6a21\u5f0f\u679a\u4e3e :return: \"\"\" pass","title":"set_group_mode()"},{"location":"developer/moudle/msg/","text":"AppMsg Bases: Msg AppMsg\u7c7b \u5c0f\u7a0b\u5e8f\u6d88\u606f\u6216\u5361\u7247\u5f0f\u6d88\u606f Source code in mplapi\\msg.py 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 class AppMsg ( Msg ): \"\"\" AppMsg\u7c7b \u5c0f\u7a0b\u5e8f\u6d88\u606f\u6216\u5361\u7247\u5f0f\u6d88\u606f \"\"\" def __init__ ( self , content ): \"\"\" :param content:App\u6d88\u606f\u7684content \"\"\" self . content = content def serialize ( self ): return { 'type' : 'App' , 'content' : self . content } __init__ ( content ) :param content:App\u6d88\u606f\u7684content Source code in mplapi\\msg.py 348 349 350 351 352 353 def __init__ ( self , content ): \"\"\" :param content:App\u6d88\u606f\u7684content \"\"\" self . content = content AtAllMsg Bases: Msg AtAllMsg\u7c7b \u827e\u7279\u5168\u4f53\u6210\u5458\u6d88\u606f Source code in mplapi\\msg.py 179 180 181 182 183 184 185 186 class AtAllMsg ( Msg ): \"\"\" AtAllMsg\u7c7b \u827e\u7279\u5168\u4f53\u6210\u5458\u6d88\u606f \"\"\" def serialize ( self ): return { 'type' : 'AtAll' } AtMsg Bases: Msg AtMsg\u7c7b @\u67d0\u4eba Source code in mplapi\\msg.py 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 class AtMsg ( Msg ): \"\"\" AtMsg\u7c7b @\u67d0\u4eba \"\"\" display = '' def __init__ ( self , target ): \"\"\" :param target: \u827e\u7279\u7684\u5bf9\u8c61qq\u53f7 \"\"\" self . target = target def serialize ( self ): return { 'type' : 'At' , 'target' : self . target , 'display' : self . display } __init__ ( target ) :param target: \u827e\u7279\u7684\u5bf9\u8c61qq\u53f7 Source code in mplapi\\msg.py 168 169 170 171 172 173 def __init__ ( self , target ): \"\"\" :param target: \u827e\u7279\u7684\u5bf9\u8c61qq\u53f7 \"\"\" self . target = target FaceMsg Bases: Msg FaceMsg\u7c7b \u8868\u60c5\u6d88\u606f(\u6307QQ\u7684\u5185\u7f6e\u8868\u60c5) Source code in mplapi\\msg.py 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 class FaceMsg ( Msg ): \"\"\" FaceMsg\u7c7b \u8868\u60c5\u6d88\u606f(\u6307QQ\u7684\u5185\u7f6e\u8868\u60c5) \"\"\" def __init__ ( self , id , name ): \"\"\" :param id: \u8868\u60c5id :param name: \u8868\u60c5\u540d\u5b57 \"\"\" self . id = id self . name = name def serialize ( self ): return { 'type' : 'Face' , 'faceId' : self . id , 'name' : self . name } __init__ ( id , name ) :param id: \u8868\u60c5id :param name: \u8868\u60c5\u540d\u5b57 Source code in mplapi\\msg.py 306 307 308 309 310 311 312 313 def __init__ ( self , id , name ): \"\"\" :param id: \u8868\u60c5id :param name: \u8868\u60c5\u540d\u5b57 \"\"\" self . id = id self . name = name FlashImageMsg Bases: ImageMsg FlashImageMsg\u7c7b \u95ea\u7167\u6d88\u606f\uff0c\u7ee7\u627f\u4e8eImageMsg Source code in mplapi\\msg.py 93 94 95 96 97 98 99 100 101 102 103 104 105 class FlashImageMsg ( ImageMsg ): \"\"\" FlashImageMsg\u7c7b \u95ea\u7167\u6d88\u606f\uff0c\u7ee7\u627f\u4e8eImageMsg \"\"\" def __init__ ( self , info , type ): super () . __init__ ( info , type ) def serialize ( self ): temp = { 'type' : 'FlashImage' } temp . update ( self . __info ) return temp ForwardMsg Bases: Msg ForwardMsg\u7c7b \u8f6c\u53d1\u6d88\u606f Source code in mplapi\\msg.py 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 class ForwardMsg ( Msg ): \"\"\" ForwardMsg\u7c7b \u8f6c\u53d1\u6d88\u606f \"\"\" __node_list = [] class MsgNode ( Msg ): def __init__ ( self , sender , time , sender_name , msg_chain , id = 0 ): \"\"\" :param sender: \u53d1\u9001\u8005qq :param time: \u65f6\u95f4\u6233 :param sender_name: \u53d1\u9001\u8005\u6635\u79f0 :param msg_chain: \u6d88\u606f\u94fe :param id: \u5f15\u7528\u7684\u6d88\u606fid\uff0c\u53ef\u4e0d\u586b \"\"\" self . __node_list = [] self . sender = sender self . time = time self . sender_name = sender_name self . msg_chain = msg_chain self . id = id def serialize ( self ): msg_chain_ser = [] for i in self . msg_chain : msg_chain_ser . append ( i . serialize ()) return { 'senderId' : self . sender , 'time' : self . time , 'senderName' : self . sender_name , 'messageChain' : msg_chain_ser , 'messageId' : self . id } def __len__ ( self ): return self . __node_list . __len__ () def add_node ( self , msg_node : MsgNode ): \"\"\" \u7ed9\u8f6c\u53d1\u6d88\u606f\u6dfb\u52a0\u4e00\u4e2a\u6d88\u606f\u8282\u70b9 :param msg_node: \u6d88\u606f\u8282\u70b9MsgNode\u5bf9\u8c61 :return: \"\"\" self . __node_list . append ( msg_node ) def pop_node ( self , index : int ): \"\"\" \u6839\u636e\u7d22\u5f15\u4ece\u8f6c\u53d1\u6d88\u606f\u79fb\u9664\u4e00\u4e2a\u6d88\u606f\u8282\u70b9 :param index: \u7d22\u5f15 :return: \"\"\" self . __node_list . pop ( index ) def remove_node ( self , msg_node : MsgNode ): \"\"\" \u4ece\u8f6c\u53d1\u6d88\u606f\u79fb\u9664\u4e00\u4e2a\u6d88\u606f\u8282\u70b9 :param msg_node: \u6d88\u606f\u8282\u70b9MsgNode\u5bf9\u8c61 :return: \"\"\" self . __node_list . remove ( msg_node ) def __iter__ ( self ): return self . __node_list . __iter__ () def __getitem__ ( self , item ): return self . __node_list . __getitem__ ( item ) def serialize ( self ): node_list_ser = [] for i in self . __node_list : node_list_ser . append ( i . serialize ()) return { 'type' : 'Forward' , 'nodeList' : node_list_ser } MsgNode Bases: Msg Source code in mplapi\\msg.py 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 class MsgNode ( Msg ): def __init__ ( self , sender , time , sender_name , msg_chain , id = 0 ): \"\"\" :param sender: \u53d1\u9001\u8005qq :param time: \u65f6\u95f4\u6233 :param sender_name: \u53d1\u9001\u8005\u6635\u79f0 :param msg_chain: \u6d88\u606f\u94fe :param id: \u5f15\u7528\u7684\u6d88\u606fid\uff0c\u53ef\u4e0d\u586b \"\"\" self . __node_list = [] self . sender = sender self . time = time self . sender_name = sender_name self . msg_chain = msg_chain self . id = id def serialize ( self ): msg_chain_ser = [] for i in self . msg_chain : msg_chain_ser . append ( i . serialize ()) return { 'senderId' : self . sender , 'time' : self . time , 'senderName' : self . sender_name , 'messageChain' : msg_chain_ser , 'messageId' : self . id } __init__ ( sender , time , sender_name , msg_chain , id = 0 ) :param sender: \u53d1\u9001\u8005qq :param time: \u65f6\u95f4\u6233 :param sender_name: \u53d1\u9001\u8005\u6635\u79f0 :param msg_chain: \u6d88\u606f\u94fe :param id: \u5f15\u7528\u7684\u6d88\u606fid\uff0c\u53ef\u4e0d\u586b Source code in mplapi\\msg.py 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 def __init__ ( self , sender , time , sender_name , msg_chain , id = 0 ): \"\"\" :param sender: \u53d1\u9001\u8005qq :param time: \u65f6\u95f4\u6233 :param sender_name: \u53d1\u9001\u8005\u6635\u79f0 :param msg_chain: \u6d88\u606f\u94fe :param id: \u5f15\u7528\u7684\u6d88\u606fid\uff0c\u53ef\u4e0d\u586b \"\"\" self . __node_list = [] self . sender = sender self . time = time self . sender_name = sender_name self . msg_chain = msg_chain self . id = id add_node ( msg_node ) \u7ed9\u8f6c\u53d1\u6d88\u606f\u6dfb\u52a0\u4e00\u4e2a\u6d88\u606f\u8282\u70b9 :param msg_node: \u6d88\u606f\u8282\u70b9MsgNode\u5bf9\u8c61 :return: Source code in mplapi\\msg.py 263 264 265 266 267 268 269 def add_node ( self , msg_node : MsgNode ): \"\"\" \u7ed9\u8f6c\u53d1\u6d88\u606f\u6dfb\u52a0\u4e00\u4e2a\u6d88\u606f\u8282\u70b9 :param msg_node: \u6d88\u606f\u8282\u70b9MsgNode\u5bf9\u8c61 :return: \"\"\" self . __node_list . append ( msg_node ) pop_node ( index ) \u6839\u636e\u7d22\u5f15\u4ece\u8f6c\u53d1\u6d88\u606f\u79fb\u9664\u4e00\u4e2a\u6d88\u606f\u8282\u70b9 :param index: \u7d22\u5f15 :return: Source code in mplapi\\msg.py 271 272 273 274 275 276 277 def pop_node ( self , index : int ): \"\"\" \u6839\u636e\u7d22\u5f15\u4ece\u8f6c\u53d1\u6d88\u606f\u79fb\u9664\u4e00\u4e2a\u6d88\u606f\u8282\u70b9 :param index: \u7d22\u5f15 :return: \"\"\" self . __node_list . pop ( index ) remove_node ( msg_node ) \u4ece\u8f6c\u53d1\u6d88\u606f\u79fb\u9664\u4e00\u4e2a\u6d88\u606f\u8282\u70b9 :param msg_node: \u6d88\u606f\u8282\u70b9MsgNode\u5bf9\u8c61 :return: Source code in mplapi\\msg.py 279 280 281 282 283 284 285 def remove_node ( self , msg_node : MsgNode ): \"\"\" \u4ece\u8f6c\u53d1\u6d88\u606f\u79fb\u9664\u4e00\u4e2a\u6d88\u606f\u8282\u70b9 :param msg_node: \u6d88\u606f\u8282\u70b9MsgNode\u5bf9\u8c61 :return: \"\"\" self . __node_list . remove ( msg_node ) ImageMsg Bases: Msg ImageMsg\u7c7b \u56fe\u7247\u6d88\u606f Source code in mplapi\\msg.py 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 class ImageMsg ( Msg ): \"\"\" ImageMsg\u7c7b \u56fe\u7247\u6d88\u606f \"\"\" URL = 'url' BASE64 = 'base64' PATH = 'path' __info = { URL : None , BASE64 : None , PATH : None } def __init__ ( self , info , type ): \"\"\" :param info: \u56fe\u7247\u7684\u6765\u6e90 :param type: ImageMsg\u4e2d\u7684\u4e09\u4e2a\u679a\u4e3e(URL,BASE64,\u7edd\u5bf9\u8def\u5f84PATH) \"\"\" self . __info [ type ] = info def get_url ( self ): \"\"\" \u83b7\u53d6\u56fe\u7247\u6d88\u606f\u7684\u56fe\u7247URL\uff0c\u63a5\u6536\u7684\u56fe\u7247\u6d88\u606f\u4ec5\u6709URL :return: URL \"\"\" return self . __info [ self . URL ] def get_base64 ( self ): \"\"\" \u83b7\u53d6\u56fe\u7247\u6d88\u606f\u7684\u56fe\u7247BASE64\u5b57\u7b26\u4e32 :return: BASE64 \"\"\" return self . __info [ self . BASE64 ] def get_path ( self ): \"\"\" \u83b7\u53d6\u56fe\u7247\u6d88\u606f\u7684\u56fe\u7247PATH :return: PATH \"\"\" return self . __info [ self . PATH ] def serialize ( self ): temp = { 'type' : 'Image' } temp . update ( self . __info ) return temp __init__ ( info , type ) :param info: \u56fe\u7247\u7684\u6765\u6e90 :param type: ImageMsg\u4e2d\u7684\u4e09\u4e2a\u679a\u4e3e(URL,BASE64,\u7edd\u5bf9\u8def\u5f84PATH) Source code in mplapi\\msg.py 58 59 60 61 62 63 64 def __init__ ( self , info , type ): \"\"\" :param info: \u56fe\u7247\u7684\u6765\u6e90 :param type: ImageMsg\u4e2d\u7684\u4e09\u4e2a\u679a\u4e3e(URL,BASE64,\u7edd\u5bf9\u8def\u5f84PATH) \"\"\" self . __info [ type ] = info get_base64 () \u83b7\u53d6\u56fe\u7247\u6d88\u606f\u7684\u56fe\u7247BASE64\u5b57\u7b26\u4e32 :return: BASE64 Source code in mplapi\\msg.py 73 74 75 76 77 78 def get_base64 ( self ): \"\"\" \u83b7\u53d6\u56fe\u7247\u6d88\u606f\u7684\u56fe\u7247BASE64\u5b57\u7b26\u4e32 :return: BASE64 \"\"\" return self . __info [ self . BASE64 ] get_path () \u83b7\u53d6\u56fe\u7247\u6d88\u606f\u7684\u56fe\u7247PATH :return: PATH Source code in mplapi\\msg.py 80 81 82 83 84 85 def get_path ( self ): \"\"\" \u83b7\u53d6\u56fe\u7247\u6d88\u606f\u7684\u56fe\u7247PATH :return: PATH \"\"\" return self . __info [ self . PATH ] get_url () \u83b7\u53d6\u56fe\u7247\u6d88\u606f\u7684\u56fe\u7247URL\uff0c\u63a5\u6536\u7684\u56fe\u7247\u6d88\u606f\u4ec5\u6709URL :return: URL Source code in mplapi\\msg.py 66 67 68 69 70 71 def get_url ( self ): \"\"\" \u83b7\u53d6\u56fe\u7247\u6d88\u606f\u7684\u56fe\u7247URL\uff0c\u63a5\u6536\u7684\u56fe\u7247\u6d88\u606f\u4ec5\u6709URL :return: URL \"\"\" return self . __info [ self . URL ] Msg Msg\u6d88\u606f\u5bf9\u8c61,\u4efb\u610f\u53ef\u88ab\u53d1\u9001\u7684\u6d88\u606f\u6216\u8005\u63a5\u6536\u7684\u6d88\u606f\u90fd\u662f\u8be5\u7c7b\u7684\u5b50\u7c7b Source code in mplapi\\msg.py 5 6 7 8 9 10 11 12 13 14 15 16 17 18 class Msg ( metaclass = ABCMeta ): \"\"\" Msg\u6d88\u606f\u5bf9\u8c61,\u4efb\u610f\u53ef\u88ab\u53d1\u9001\u7684\u6d88\u606f\u6216\u8005\u63a5\u6536\u7684\u6d88\u606f\u90fd\u662f\u8be5\u7c7b\u7684\u5b50\u7c7b \"\"\" @abstractmethod def serialize ( self ) -> dict : \"\"\" \u5e8f\u5217\u5316Msg :return: \u5e8f\u5217\u5316\u7ed3\u679c \"\"\" pass def __str__ ( self ): return str ( self . serialize ()) serialize () abstractmethod \u5e8f\u5217\u5316Msg :return: \u5e8f\u5217\u5316\u7ed3\u679c Source code in mplapi\\msg.py 9 10 11 12 13 14 15 @abstractmethod def serialize ( self ) -> dict : \"\"\" \u5e8f\u5217\u5316Msg :return: \u5e8f\u5217\u5316\u7ed3\u679c \"\"\" pass MsgChain Bases: Msg \u6d88\u606f\u94fe\u7c7b Source code in mplapi\\msg.pyclass MsgChain ( Msg ): \"\"\" \u6d88\u606f\u94fe\u7c7b \"\"\" __chain = [] def __init__ ( self ): self . __chain = [] def __iter__ ( self ): return self . __chain . __iter__ () def __getitem__ ( self , item ): return self . __chain . __getitem__ ( item ) def __len__ ( self ): return self . __chain . __len__ () def add_msg ( self , msg : Msg ): \"\"\" \u5f80\u6d88\u606f\u94fe\u4e2d\u589e\u52a0\u6d88\u606f :param msg: \u4efb\u610f\u7ee7\u627fMsg\u7c7b\u7684\u6d88\u606f\u5bf9\u8c61 :return: \"\"\" self . __chain . append ( msg ) def remove_msg ( self , msg : Msg ): \"\"\" \u4ece\u6d88\u606f\u94fe\u4e2d\u79fb\u9664\u6d88\u606f :param msg: \u4efb\u610f\u7ee7\u627fMsg\u7c7b\u7684\u6d88\u606f\u5bf9\u8c61 :return: \"\"\" if msg in self . __chain : self . __chain . remove ( msg ) def pop_msg ( self , index : int ): \"\"\" \u6839\u636e\u7d22\u5f15\u4ece\u6d88\u606f\u94fe\u4e2d\u79fb\u9664\u6d88\u606f :param index: \u7d22\u5f15 :return: \"\"\" self . __chain . pop ( index ) def serialize ( self ): chain_se = [] for i in self . __chain : chain_se . append ( i . serialize ()) return chain_se def get_source ( self ) -> SourceMsg : \"\"\" \u83b7\u53d6\u6d88\u606fSourceMsg\u5bf9\u8c61 :return: SourceMsg\u5bf9\u8c61 \"\"\" for i in self . __chain : if type ( i ) is SourceMsg : return i def get_plain_msg ( self ) -> list [ PlainMsg ]: \"\"\" \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684Plain\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: PlainMsg\u5bf9\u8c61\u5217\u8868 \"\"\" temp = [] for i in self . __chain : if type ( i ) is PlainMsg : temp . append ( i ) return temp def get_image_msg ( self ) -> list [ ImageMsg ]: \"\"\" \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684Image\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: ImageMsg\u5bf9\u8c61\u5217\u8868 \"\"\" temp = [] for i in self . __chain : if type ( i ) is ImageMsg : temp . append ( i ) return temp def get_quote_msg ( self ) -> list [ QuoteMsg ]: \"\"\" \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684Quote\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: QuoteMsg\u5bf9\u8c61\u5217\u8868 \"\"\" temp = [] for i in self . __chain : if type ( i ) is QuoteMsg : temp . append ( i ) return temp def get_voice_msg ( self ) -> list [ VoiceMsg ]: \"\"\" \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684Voice\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: VoiceMsg\u5bf9\u8c61\u5217\u8868 \"\"\" temp = [] for i in self . __chain : if type ( i ) is VoiceMsg : temp . append ( i ) return temp def get_at_msg ( self ) -> list [ AtMsg ]: \"\"\" \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684At\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: AtMsg\u5bf9\u8c61\u5217\u8868 \"\"\" temp = [] for i in self . __chain : if type ( i ) is AtMsg : temp . append ( i ) return temp def get_at_all_msg ( self ) -> list [ AtAllMsg ]: \"\"\" \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684AtAll\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: AtAllMsg\u5bf9\u8c61\u5217\u8868 \"\"\" temp = [] for i in self . __chain : if type ( i ) is AtAllMsg : temp . append ( i ) return temp def get_face_msg ( self ) -> list [ FaceMsg ]: \"\"\" \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684Face\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: FaceMsg\u5bf9\u8c61\u5217\u8868 \"\"\" temp = [] for i in self . __chain : if type ( i ) is FaceMsg : temp . append ( i ) return temp def get_flash_image_msg ( self ) -> list [ FlashImageMsg ]: \"\"\" \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684FlashImage\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: FlashImageMsg\u5bf9\u8c61\u5217\u8868 \"\"\" temp = [] for i in self . __chain : if type ( i ) is FlashImageMsg : temp . append ( i ) return temp def get_poke_msg ( self ) -> list [ PokeMsg ]: \"\"\" \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684Poke\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: PokeMsg\u5bf9\u8c61\u5217\u8868 \"\"\" temp = [] for i in self . __chain : if type ( i ) is PokeMsg : temp . append ( i ) return temp def get_forward_msg ( self ) -> list [ ForwardMsg ]: \"\"\" \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684Forward\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: ForwardMsg\u5bf9\u8c61\u5217\u8868 \"\"\" temp = [] for i in self . __chain : if type ( i ) is ForwardMsg : temp . append ( i ) return temp def get_app_msg ( self ) -> list [ AppMsg ]: \"\"\" \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684App\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: AppMsg\u5bf9\u8c61\u5217\u8868 \"\"\" temp = [] for i in self . __chain : if type ( i ) is AppMsg : temp . append ( i ) return temp add_msg ( msg ) \u5f80\u6d88\u606f\u94fe\u4e2d\u589e\u52a0\u6d88\u606f :param msg: \u4efb\u610f\u7ee7\u627fMsg\u7c7b\u7684\u6d88\u606f\u5bf9\u8c61 :return: Source code in mplapi\\msg.py 377 378 379 380 381 382 383 def add_msg ( self , msg : Msg ): \"\"\" \u5f80\u6d88\u606f\u94fe\u4e2d\u589e\u52a0\u6d88\u606f :param msg: \u4efb\u610f\u7ee7\u627fMsg\u7c7b\u7684\u6d88\u606f\u5bf9\u8c61 :return: \"\"\" self . __chain . append ( msg ) get_app_msg () \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684App\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: AppMsg\u5bf9\u8c61\u5217\u8868 Source code in mplapi\\msg.py 527 528 529 530 531 532 533 534 535 536 def get_app_msg ( self ) -> list [ AppMsg ]: \"\"\" \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684App\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: AppMsg\u5bf9\u8c61\u5217\u8868 \"\"\" temp = [] for i in self . __chain : if type ( i ) is AppMsg : temp . append ( i ) return temp get_at_all_msg () \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684AtAll\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: AtAllMsg\u5bf9\u8c61\u5217\u8868 Source code in mplapi\\msg.py 472 473 474 475 476 477 478 479 480 481 def get_at_all_msg ( self ) -> list [ AtAllMsg ]: \"\"\" \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684AtAll\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: AtAllMsg\u5bf9\u8c61\u5217\u8868 \"\"\" temp = [] for i in self . __chain : if type ( i ) is AtAllMsg : temp . append ( i ) return temp get_at_msg () \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684At\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: AtMsg\u5bf9\u8c61\u5217\u8868 Source code in mplapi\\msg.py 461 462 463 464 465 466 467 468 469 470 def get_at_msg ( self ) -> list [ AtMsg ]: \"\"\" \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684At\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: AtMsg\u5bf9\u8c61\u5217\u8868 \"\"\" temp = [] for i in self . __chain : if type ( i ) is AtMsg : temp . append ( i ) return temp get_face_msg () \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684Face\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: FaceMsg\u5bf9\u8c61\u5217\u8868 Source code in mplapi\\msg.py 483 484 485 486 487 488 489 490 491 492 def get_face_msg ( self ) -> list [ FaceMsg ]: \"\"\" \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684Face\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: FaceMsg\u5bf9\u8c61\u5217\u8868 \"\"\" temp = [] for i in self . __chain : if type ( i ) is FaceMsg : temp . append ( i ) return temp get_flash_image_msg () \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684FlashImage\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: FlashImageMsg\u5bf9\u8c61\u5217\u8868 Source code in mplapi\\msg.py 494 495 496 497 498 499 500 501 502 503 def get_flash_image_msg ( self ) -> list [ FlashImageMsg ]: \"\"\" \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684FlashImage\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: FlashImageMsg\u5bf9\u8c61\u5217\u8868 \"\"\" temp = [] for i in self . __chain : if type ( i ) is FlashImageMsg : temp . append ( i ) return temp get_forward_msg () \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684Forward\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: ForwardMsg\u5bf9\u8c61\u5217\u8868 Source code in mplapi\\msg.py 516 517 518 519 520 521 522 523 524 525 def get_forward_msg ( self ) -> list [ ForwardMsg ]: \"\"\" \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684Forward\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: ForwardMsg\u5bf9\u8c61\u5217\u8868 \"\"\" temp = [] for i in self . __chain : if type ( i ) is ForwardMsg : temp . append ( i ) return temp get_image_msg () \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684Image\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: ImageMsg\u5bf9\u8c61\u5217\u8868 Source code in mplapi\\msg.py 428 429 430 431 432 433 434 435 436 437 def get_image_msg ( self ) -> list [ ImageMsg ]: \"\"\" \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684Image\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: ImageMsg\u5bf9\u8c61\u5217\u8868 \"\"\" temp = [] for i in self . __chain : if type ( i ) is ImageMsg : temp . append ( i ) return temp get_plain_msg () \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684Plain\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: PlainMsg\u5bf9\u8c61\u5217\u8868 Source code in mplapi\\msg.py 417 418 419 420 421 422 423 424 425 426 def get_plain_msg ( self ) -> list [ PlainMsg ]: \"\"\" \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684Plain\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: PlainMsg\u5bf9\u8c61\u5217\u8868 \"\"\" temp = [] for i in self . __chain : if type ( i ) is PlainMsg : temp . append ( i ) return temp get_poke_msg () \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684Poke\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: PokeMsg\u5bf9\u8c61\u5217\u8868 Source code in mplapi\\msg.py 505 506 507 508 509 510 511 512 513 514 def get_poke_msg ( self ) -> list [ PokeMsg ]: \"\"\" \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684Poke\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: PokeMsg\u5bf9\u8c61\u5217\u8868 \"\"\" temp = [] for i in self . __chain : if type ( i ) is PokeMsg : temp . append ( i ) return temp get_quote_msg () \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684Quote\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: QuoteMsg\u5bf9\u8c61\u5217\u8868 Source code in mplapi\\msg.py 439 440 441 442 443 444 445 446 447 448 def get_quote_msg ( self ) -> list [ QuoteMsg ]: \"\"\" \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684Quote\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: QuoteMsg\u5bf9\u8c61\u5217\u8868 \"\"\" temp = [] for i in self . __chain : if type ( i ) is QuoteMsg : temp . append ( i ) return temp get_source () \u83b7\u53d6\u6d88\u606fSourceMsg\u5bf9\u8c61 :return: SourceMsg\u5bf9\u8c61 Source code in mplapi\\msg.py 408 409 410 411 412 413 414 415 def get_source ( self ) -> SourceMsg : \"\"\" \u83b7\u53d6\u6d88\u606fSourceMsg\u5bf9\u8c61 :return: SourceMsg\u5bf9\u8c61 \"\"\" for i in self . __chain : if type ( i ) is SourceMsg : return i get_voice_msg () \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684Voice\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: VoiceMsg\u5bf9\u8c61\u5217\u8868 Source code in mplapi\\msg.py 450 451 452 453 454 455 456 457 458 459 def get_voice_msg ( self ) -> list [ VoiceMsg ]: \"\"\" \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684Voice\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: VoiceMsg\u5bf9\u8c61\u5217\u8868 \"\"\" temp = [] for i in self . __chain : if type ( i ) is VoiceMsg : temp . append ( i ) return temp pop_msg ( index ) \u6839\u636e\u7d22\u5f15\u4ece\u6d88\u606f\u94fe\u4e2d\u79fb\u9664\u6d88\u606f :param index: \u7d22\u5f15 :return: Source code in mplapi\\msg.py 394 395 396 397 398 399 400 def pop_msg ( self , index : int ): \"\"\" \u6839\u636e\u7d22\u5f15\u4ece\u6d88\u606f\u94fe\u4e2d\u79fb\u9664\u6d88\u606f :param index: \u7d22\u5f15 :return: \"\"\" self . __chain . pop ( index ) remove_msg ( msg ) \u4ece\u6d88\u606f\u94fe\u4e2d\u79fb\u9664\u6d88\u606f :param msg: \u4efb\u610f\u7ee7\u627fMsg\u7c7b\u7684\u6d88\u606f\u5bf9\u8c61 :return: Source code in mplapi\\msg.py 385 386 387 388 389 390 391 392 def remove_msg ( self , msg : Msg ): \"\"\" \u4ece\u6d88\u606f\u94fe\u4e2d\u79fb\u9664\u6d88\u606f :param msg: \u4efb\u610f\u7ee7\u627fMsg\u7c7b\u7684\u6d88\u606f\u5bf9\u8c61 :return: \"\"\" if msg in self . __chain : self . __chain . remove ( msg ) PlainMsg Bases: Msg PlainMsg\u7c7b \u6587\u5b57\u6d88\u606f Source code in mplapi\\msg.py 35 36 37 38 39 40 41 42 43 44 45 class PlainMsg ( Msg ): \"\"\" PlainMsg\u7c7b \u6587\u5b57\u6d88\u606f \"\"\" def __init__ ( self , text ): self . text = text def serialize ( self ): return { 'type' : 'Plain' , 'text' : self . text } PokeMsg Bases: Msg PokeMsg\u7c7b \u7c7b\u6233\u4e00\u6233\u6d88\u606f Source code in mplapi\\msg.py 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 class PokeMsg ( Msg ): \"\"\" PokeMsg\u7c7b \u7c7b\u6233\u4e00\u6233\u6d88\u606f \"\"\" POKE = \"Poke\" SHOW_LOVE = \"ShowLove\" LIKE = \"Like\" HEART_BROKEN = \"Heartbroken\" SIX = \"SixSixSix\" FANG_DA_ZHAO = \"FangDaZhao\" def __init__ ( self , type ): \"\"\" :param type: PokeMsg\u4e2d\u76846\u4e2a\u679a\u4e3e \"\"\" self . type = type def serialize ( self ): return { 'type' : 'Poke' , 'name' : self . type } __init__ ( type ) :param type: PokeMsg\u4e2d\u76846\u4e2a\u679a\u4e3e Source code in mplapi\\msg.py 331 332 333 334 335 336 def __init__ ( self , type ): \"\"\" :param type: PokeMsg\u4e2d\u76846\u4e2a\u679a\u4e3e \"\"\" self . type = type QuoteMsg Bases: Msg QuoteMsg\u7c7b \u56de\u590d\u6d88\u606f Source code in mplapi\\msg.py 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 class QuoteMsg ( Msg ): \"\"\" QuoteMsg\u7c7b \u56de\u590d\u6d88\u606f \"\"\" def __init__ ( self , id , sender , target , origin_msg_chain , group = 0 ): \"\"\" :param id: \u56de\u590d\u7684\u6e90\u6d88\u606fID(SourceMsg\u5bf9\u8c61\u4e2d\u7684id\u5b57\u6bb5) :param sender: \u53d1\u9001\u8005qq\u53f7 :param target: \u56de\u590d\u5bf9\u8c61qq\u53f7 :param origin_msg_chain: \u56de\u590d\u7684\u6e90\u6d88\u606f\u94fe :param group: \u56de\u590d\u7684\u7fa4\u53f7(\u597d\u53cb\u6d88\u606f\u65f6\u4e3a0) \"\"\" self . id = id self . sender = sender self . target = target self . origin_msg_Chain = origin_msg_chain self . group = group def serialize ( self ): origin_ser = [] for i in self . origin_msg_Chain : origin_ser . append ( i . serialize ()) return { 'type' : 'Quote' , 'id' : self . id , 'groupId' : self . group , 'senderId' : self . sender , 'targetId' : self . target , 'origin' : origin_ser } __init__ ( id , sender , target , origin_msg_chain , group = 0 ) :param id: \u56de\u590d\u7684\u6e90\u6d88\u606fID(SourceMsg\u5bf9\u8c61\u4e2d\u7684id\u5b57\u6bb5) :param sender: \u53d1\u9001\u8005qq\u53f7 :param target: \u56de\u590d\u5bf9\u8c61qq\u53f7 :param origin_msg_chain: \u56de\u590d\u7684\u6e90\u6d88\u606f\u94fe :param group: \u56de\u590d\u7684\u7fa4\u53f7(\u597d\u53cb\u6d88\u606f\u65f6\u4e3a0) Source code in mplapi\\msg.py 195 196 197 198 199 200 201 202 203 204 205 206 207 208 def __init__ ( self , id , sender , target , origin_msg_chain , group = 0 ): \"\"\" :param id: \u56de\u590d\u7684\u6e90\u6d88\u606fID(SourceMsg\u5bf9\u8c61\u4e2d\u7684id\u5b57\u6bb5) :param sender: \u53d1\u9001\u8005qq\u53f7 :param target: \u56de\u590d\u5bf9\u8c61qq\u53f7 :param origin_msg_chain: \u56de\u590d\u7684\u6e90\u6d88\u606f\u94fe :param group: \u56de\u590d\u7684\u7fa4\u53f7(\u597d\u53cb\u6d88\u606f\u65f6\u4e3a0) \"\"\" self . id = id self . sender = sender self . target = target self . origin_msg_Chain = origin_msg_chain self . group = group Source \u6d88\u606f\u53d1\u9001\u8005\u5bf9\u8c61\u96c6\u5408 Source code in mplapi\\msg.py 539 540 541 542 543 544 545 546 547 548 549 550 551 552 class Source : \"\"\" \u6d88\u606f\u53d1\u9001\u8005\u5bf9\u8c61\u96c6\u5408 \"\"\" def __init__ ( self , source_msg : SourceMsg , sender : int , group : int = 0 ): \"\"\" :param source_msg: SourceMsg\u5bf9\u8c61 :param sender: \u53d1\u9001\u8005qq :param group: \u7fa4\u53f7(\u975e\u7fa4\u804a\u65f6\u6b64\u503c\u4e3a0) \"\"\" self . sender = sender self . group = group self . source_msg = source_msg __init__ ( source_msg , sender , group = 0 ) :param source_msg: SourceMsg\u5bf9\u8c61 :param sender: \u53d1\u9001\u8005qq :param group: \u7fa4\u53f7(\u975e\u7fa4\u804a\u65f6\u6b64\u503c\u4e3a0) Source code in mplapi\\msg.py 543 544 545 546 547 548 549 550 551 552 def __init__ ( self , source_msg : SourceMsg , sender : int , group : int = 0 ): \"\"\" :param source_msg: SourceMsg\u5bf9\u8c61 :param sender: \u53d1\u9001\u8005qq :param group: \u7fa4\u53f7(\u975e\u7fa4\u804a\u65f6\u6b64\u503c\u4e3a0) \"\"\" self . sender = sender self . group = group self . source_msg = source_msg SourceMsg Bases: Msg SourceMsg\u7c7b \u5b58\u5728\u4e8e\u63a5\u6536\u7684\u6d88\u606f\u94fe\u4e2d\uff0c\u4f5c\u4e3a\u552f\u4e00\u6807\u8bc6 Source code in mplapi\\msg.py 21 22 23 24 25 26 27 28 29 30 31 32 class SourceMsg ( Msg ): \"\"\" SourceMsg\u7c7b \u5b58\u5728\u4e8e\u63a5\u6536\u7684\u6d88\u606f\u94fe\u4e2d\uff0c\u4f5c\u4e3a\u552f\u4e00\u6807\u8bc6 \"\"\" def __init__ ( self , id , time ): self . id = id self . time = time def serialize ( self ): return { 'type' : 'Source' , 'id' : self . id , 'time' : self . time } VoiceMsg Bases: Msg VoiceMsg\u7c7b \u8bed\u97f3\u6d88\u606f Source code in mplapi\\msg.py 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 class VoiceMsg ( Msg ): \"\"\" VoiceMsg\u7c7b \u8bed\u97f3\u6d88\u606f \"\"\" URL = 'url' BASE64 = 'base64' PATH = 'path' length = None __info = { URL : None , BASE64 : None , PATH : None } def __init__ ( self , info , type ): \"\"\" :param info: \u8bed\u97f3\u7684\u6765\u6e90 :param type: VoiceMsg\u4e2d\u7684\u4e09\u4e2a\u679a\u4e3e(URL,BASE64,\u7edd\u5bf9\u8def\u5f84PATH) \"\"\" self . __info [ type ] = info def get_url ( self ): \"\"\" \u83b7\u53d6\u8bed\u97f3\u6d88\u606f\u7684\u8bed\u97f3URL\uff0c\u63a5\u6536\u7684\u8bed\u97f3\u6d88\u606f\u4ec5\u6709URL :return: URL \"\"\" return self . __info [ self . URL ] def get_base64 ( self ): \"\"\" \u83b7\u53d6\u8bed\u97f3\u6d88\u606f\u7684\u8bed\u97f3BASE64\u5b57\u7b26\u4e32 :return: BASE64 \"\"\" return self . __info [ self . BASE64 ] def get_path ( self ): \"\"\" \u83b7\u53d6\u8bed\u97f3\u6d88\u606f\u7684\u8bed\u97f3PATH :return: PATH \"\"\" return self . __info [ self . PATH ] def get_length ( self ): \"\"\" \u83b7\u53d6\u8bed\u97f3\u6d88\u606f\u7684\u8bed\u97f3\u957f\u5ea6 \u79d2 :return: \u957f\u5ea6 \"\"\" return self . length def serialize ( self ): temp = { 'type' : 'Voice' , 'length' : self . length } temp . update ( self . __info ) return temp __init__ ( info , type ) :param info: \u8bed\u97f3\u7684\u6765\u6e90 :param type: VoiceMsg\u4e2d\u7684\u4e09\u4e2a\u679a\u4e3e(URL,BASE64,\u7edd\u5bf9\u8def\u5f84PATH) Source code in mplapi\\msg.py 119 120 121 122 123 124 125 def __init__ ( self , info , type ): \"\"\" :param info: \u8bed\u97f3\u7684\u6765\u6e90 :param type: VoiceMsg\u4e2d\u7684\u4e09\u4e2a\u679a\u4e3e(URL,BASE64,\u7edd\u5bf9\u8def\u5f84PATH) \"\"\" self . __info [ type ] = info get_base64 () \u83b7\u53d6\u8bed\u97f3\u6d88\u606f\u7684\u8bed\u97f3BASE64\u5b57\u7b26\u4e32 :return: BASE64 Source code in mplapi\\msg.py 134 135 136 137 138 139 def get_base64 ( self ): \"\"\" \u83b7\u53d6\u8bed\u97f3\u6d88\u606f\u7684\u8bed\u97f3BASE64\u5b57\u7b26\u4e32 :return: BASE64 \"\"\" return self . __info [ self . BASE64 ] get_length () \u83b7\u53d6\u8bed\u97f3\u6d88\u606f\u7684\u8bed\u97f3\u957f\u5ea6 \u79d2 :return: \u957f\u5ea6 Source code in mplapi\\msg.py 148 149 150 151 152 153 def get_length ( self ): \"\"\" \u83b7\u53d6\u8bed\u97f3\u6d88\u606f\u7684\u8bed\u97f3\u957f\u5ea6 \u79d2 :return: \u957f\u5ea6 \"\"\" return self . length get_path () \u83b7\u53d6\u8bed\u97f3\u6d88\u606f\u7684\u8bed\u97f3PATH :return: PATH Source code in mplapi\\msg.py 141 142 143 144 145 146 def get_path ( self ): \"\"\" \u83b7\u53d6\u8bed\u97f3\u6d88\u606f\u7684\u8bed\u97f3PATH :return: PATH \"\"\" return self . __info [ self . PATH ] get_url () \u83b7\u53d6\u8bed\u97f3\u6d88\u606f\u7684\u8bed\u97f3URL\uff0c\u63a5\u6536\u7684\u8bed\u97f3\u6d88\u606f\u4ec5\u6709URL :return: URL Source code in mplapi\\msg.py 127 128 129 130 131 132 def get_url ( self ): \"\"\" \u83b7\u53d6\u8bed\u97f3\u6d88\u606f\u7684\u8bed\u97f3URL\uff0c\u63a5\u6536\u7684\u8bed\u97f3\u6d88\u606f\u4ec5\u6709URL :return: URL \"\"\" return self . __info [ self . URL ]","title":"msg"},{"location":"developer/moudle/msg/#mplapi.msg.AppMsg","text":"Bases: Msg AppMsg\u7c7b \u5c0f\u7a0b\u5e8f\u6d88\u606f\u6216\u5361\u7247\u5f0f\u6d88\u606f Source code in mplapi\\msg.py 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 class AppMsg ( Msg ): \"\"\" AppMsg\u7c7b \u5c0f\u7a0b\u5e8f\u6d88\u606f\u6216\u5361\u7247\u5f0f\u6d88\u606f \"\"\" def __init__ ( self , content ): \"\"\" :param content:App\u6d88\u606f\u7684content \"\"\" self . content = content def serialize ( self ): return { 'type' : 'App' , 'content' : self . content }","title":"AppMsg"},{"location":"developer/moudle/msg/#mplapi.msg.AppMsg.__init__","text":":param content:App\u6d88\u606f\u7684content Source code in mplapi\\msg.py 348 349 350 351 352 353 def __init__ ( self , content ): \"\"\" :param content:App\u6d88\u606f\u7684content \"\"\" self . content = content","title":"__init__()"},{"location":"developer/moudle/msg/#mplapi.msg.AtAllMsg","text":"Bases: Msg AtAllMsg\u7c7b \u827e\u7279\u5168\u4f53\u6210\u5458\u6d88\u606f Source code in mplapi\\msg.py 179 180 181 182 183 184 185 186 class AtAllMsg ( Msg ): \"\"\" AtAllMsg\u7c7b \u827e\u7279\u5168\u4f53\u6210\u5458\u6d88\u606f \"\"\" def serialize ( self ): return { 'type' : 'AtAll' }","title":"AtAllMsg"},{"location":"developer/moudle/msg/#mplapi.msg.AtMsg","text":"Bases: Msg AtMsg\u7c7b @\u67d0\u4eba Source code in mplapi\\msg.py 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 class AtMsg ( Msg ): \"\"\" AtMsg\u7c7b @\u67d0\u4eba \"\"\" display = '' def __init__ ( self , target ): \"\"\" :param target: \u827e\u7279\u7684\u5bf9\u8c61qq\u53f7 \"\"\" self . target = target def serialize ( self ): return { 'type' : 'At' , 'target' : self . target , 'display' : self . display }","title":"AtMsg"},{"location":"developer/moudle/msg/#mplapi.msg.AtMsg.__init__","text":":param target: \u827e\u7279\u7684\u5bf9\u8c61qq\u53f7 Source code in mplapi\\msg.py 168 169 170 171 172 173 def __init__ ( self , target ): \"\"\" :param target: \u827e\u7279\u7684\u5bf9\u8c61qq\u53f7 \"\"\" self . target = target","title":"__init__()"},{"location":"developer/moudle/msg/#mplapi.msg.FaceMsg","text":"Bases: Msg FaceMsg\u7c7b \u8868\u60c5\u6d88\u606f(\u6307QQ\u7684\u5185\u7f6e\u8868\u60c5) Source code in mplapi\\msg.py 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 class FaceMsg ( Msg ): \"\"\" FaceMsg\u7c7b \u8868\u60c5\u6d88\u606f(\u6307QQ\u7684\u5185\u7f6e\u8868\u60c5) \"\"\" def __init__ ( self , id , name ): \"\"\" :param id: \u8868\u60c5id :param name: \u8868\u60c5\u540d\u5b57 \"\"\" self . id = id self . name = name def serialize ( self ): return { 'type' : 'Face' , 'faceId' : self . id , 'name' : self . name }","title":"FaceMsg"},{"location":"developer/moudle/msg/#mplapi.msg.FaceMsg.__init__","text":":param id: \u8868\u60c5id :param name: \u8868\u60c5\u540d\u5b57 Source code in mplapi\\msg.py 306 307 308 309 310 311 312 313 def __init__ ( self , id , name ): \"\"\" :param id: \u8868\u60c5id :param name: \u8868\u60c5\u540d\u5b57 \"\"\" self . id = id self . name = name","title":"__init__()"},{"location":"developer/moudle/msg/#mplapi.msg.FlashImageMsg","text":"Bases: ImageMsg FlashImageMsg\u7c7b \u95ea\u7167\u6d88\u606f\uff0c\u7ee7\u627f\u4e8eImageMsg Source code in mplapi\\msg.py 93 94 95 96 97 98 99 100 101 102 103 104 105 class FlashImageMsg ( ImageMsg ): \"\"\" FlashImageMsg\u7c7b \u95ea\u7167\u6d88\u606f\uff0c\u7ee7\u627f\u4e8eImageMsg \"\"\" def __init__ ( self , info , type ): super () . __init__ ( info , type ) def serialize ( self ): temp = { 'type' : 'FlashImage' } temp . update ( self . __info ) return temp","title":"FlashImageMsg"},{"location":"developer/moudle/msg/#mplapi.msg.ForwardMsg","text":"Bases: Msg ForwardMsg\u7c7b \u8f6c\u53d1\u6d88\u606f Source code in mplapi\\msg.py 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 class ForwardMsg ( Msg ): \"\"\" ForwardMsg\u7c7b \u8f6c\u53d1\u6d88\u606f \"\"\" __node_list = [] class MsgNode ( Msg ): def __init__ ( self , sender , time , sender_name , msg_chain , id = 0 ): \"\"\" :param sender: \u53d1\u9001\u8005qq :param time: \u65f6\u95f4\u6233 :param sender_name: \u53d1\u9001\u8005\u6635\u79f0 :param msg_chain: \u6d88\u606f\u94fe :param id: \u5f15\u7528\u7684\u6d88\u606fid\uff0c\u53ef\u4e0d\u586b \"\"\" self . __node_list = [] self . sender = sender self . time = time self . sender_name = sender_name self . msg_chain = msg_chain self . id = id def serialize ( self ): msg_chain_ser = [] for i in self . msg_chain : msg_chain_ser . append ( i . serialize ()) return { 'senderId' : self . sender , 'time' : self . time , 'senderName' : self . sender_name , 'messageChain' : msg_chain_ser , 'messageId' : self . id } def __len__ ( self ): return self . __node_list . __len__ () def add_node ( self , msg_node : MsgNode ): \"\"\" \u7ed9\u8f6c\u53d1\u6d88\u606f\u6dfb\u52a0\u4e00\u4e2a\u6d88\u606f\u8282\u70b9 :param msg_node: \u6d88\u606f\u8282\u70b9MsgNode\u5bf9\u8c61 :return: \"\"\" self . __node_list . append ( msg_node ) def pop_node ( self , index : int ): \"\"\" \u6839\u636e\u7d22\u5f15\u4ece\u8f6c\u53d1\u6d88\u606f\u79fb\u9664\u4e00\u4e2a\u6d88\u606f\u8282\u70b9 :param index: \u7d22\u5f15 :return: \"\"\" self . __node_list . pop ( index ) def remove_node ( self , msg_node : MsgNode ): \"\"\" \u4ece\u8f6c\u53d1\u6d88\u606f\u79fb\u9664\u4e00\u4e2a\u6d88\u606f\u8282\u70b9 :param msg_node: \u6d88\u606f\u8282\u70b9MsgNode\u5bf9\u8c61 :return: \"\"\" self . __node_list . remove ( msg_node ) def __iter__ ( self ): return self . __node_list . __iter__ () def __getitem__ ( self , item ): return self . __node_list . __getitem__ ( item ) def serialize ( self ): node_list_ser = [] for i in self . __node_list : node_list_ser . append ( i . serialize ()) return { 'type' : 'Forward' , 'nodeList' : node_list_ser }","title":"ForwardMsg"},{"location":"developer/moudle/msg/#mplapi.msg.ForwardMsg.MsgNode","text":"Bases: Msg Source code in mplapi\\msg.py 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 class MsgNode ( Msg ): def __init__ ( self , sender , time , sender_name , msg_chain , id = 0 ): \"\"\" :param sender: \u53d1\u9001\u8005qq :param time: \u65f6\u95f4\u6233 :param sender_name: \u53d1\u9001\u8005\u6635\u79f0 :param msg_chain: \u6d88\u606f\u94fe :param id: \u5f15\u7528\u7684\u6d88\u606fid\uff0c\u53ef\u4e0d\u586b \"\"\" self . __node_list = [] self . sender = sender self . time = time self . sender_name = sender_name self . msg_chain = msg_chain self . id = id def serialize ( self ): msg_chain_ser = [] for i in self . msg_chain : msg_chain_ser . append ( i . serialize ()) return { 'senderId' : self . sender , 'time' : self . time , 'senderName' : self . sender_name , 'messageChain' : msg_chain_ser , 'messageId' : self . id }","title":"MsgNode"},{"location":"developer/moudle/msg/#mplapi.msg.ForwardMsg.MsgNode.__init__","text":":param sender: \u53d1\u9001\u8005qq :param time: \u65f6\u95f4\u6233 :param sender_name: \u53d1\u9001\u8005\u6635\u79f0 :param msg_chain: \u6d88\u606f\u94fe :param id: \u5f15\u7528\u7684\u6d88\u606fid\uff0c\u53ef\u4e0d\u586b Source code in mplapi\\msg.py 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 def __init__ ( self , sender , time , sender_name , msg_chain , id = 0 ): \"\"\" :param sender: \u53d1\u9001\u8005qq :param time: \u65f6\u95f4\u6233 :param sender_name: \u53d1\u9001\u8005\u6635\u79f0 :param msg_chain: \u6d88\u606f\u94fe :param id: \u5f15\u7528\u7684\u6d88\u606fid\uff0c\u53ef\u4e0d\u586b \"\"\" self . __node_list = [] self . sender = sender self . time = time self . sender_name = sender_name self . msg_chain = msg_chain self . id = id","title":"__init__()"},{"location":"developer/moudle/msg/#mplapi.msg.ForwardMsg.add_node","text":"\u7ed9\u8f6c\u53d1\u6d88\u606f\u6dfb\u52a0\u4e00\u4e2a\u6d88\u606f\u8282\u70b9 :param msg_node: \u6d88\u606f\u8282\u70b9MsgNode\u5bf9\u8c61 :return: Source code in mplapi\\msg.py 263 264 265 266 267 268 269 def add_node ( self , msg_node : MsgNode ): \"\"\" \u7ed9\u8f6c\u53d1\u6d88\u606f\u6dfb\u52a0\u4e00\u4e2a\u6d88\u606f\u8282\u70b9 :param msg_node: \u6d88\u606f\u8282\u70b9MsgNode\u5bf9\u8c61 :return: \"\"\" self . __node_list . append ( msg_node )","title":"add_node()"},{"location":"developer/moudle/msg/#mplapi.msg.ForwardMsg.pop_node","text":"\u6839\u636e\u7d22\u5f15\u4ece\u8f6c\u53d1\u6d88\u606f\u79fb\u9664\u4e00\u4e2a\u6d88\u606f\u8282\u70b9 :param index: \u7d22\u5f15 :return: Source code in mplapi\\msg.py 271 272 273 274 275 276 277 def pop_node ( self , index : int ): \"\"\" \u6839\u636e\u7d22\u5f15\u4ece\u8f6c\u53d1\u6d88\u606f\u79fb\u9664\u4e00\u4e2a\u6d88\u606f\u8282\u70b9 :param index: \u7d22\u5f15 :return: \"\"\" self . __node_list . pop ( index )","title":"pop_node()"},{"location":"developer/moudle/msg/#mplapi.msg.ForwardMsg.remove_node","text":"\u4ece\u8f6c\u53d1\u6d88\u606f\u79fb\u9664\u4e00\u4e2a\u6d88\u606f\u8282\u70b9 :param msg_node: \u6d88\u606f\u8282\u70b9MsgNode\u5bf9\u8c61 :return: Source code in mplapi\\msg.py 279 280 281 282 283 284 285 def remove_node ( self , msg_node : MsgNode ): \"\"\" \u4ece\u8f6c\u53d1\u6d88\u606f\u79fb\u9664\u4e00\u4e2a\u6d88\u606f\u8282\u70b9 :param msg_node: \u6d88\u606f\u8282\u70b9MsgNode\u5bf9\u8c61 :return: \"\"\" self . __node_list . remove ( msg_node )","title":"remove_node()"},{"location":"developer/moudle/msg/#mplapi.msg.ImageMsg","text":"Bases: Msg ImageMsg\u7c7b \u56fe\u7247\u6d88\u606f Source code in mplapi\\msg.py 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 class ImageMsg ( Msg ): \"\"\" ImageMsg\u7c7b \u56fe\u7247\u6d88\u606f \"\"\" URL = 'url' BASE64 = 'base64' PATH = 'path' __info = { URL : None , BASE64 : None , PATH : None } def __init__ ( self , info , type ): \"\"\" :param info: \u56fe\u7247\u7684\u6765\u6e90 :param type: ImageMsg\u4e2d\u7684\u4e09\u4e2a\u679a\u4e3e(URL,BASE64,\u7edd\u5bf9\u8def\u5f84PATH) \"\"\" self . __info [ type ] = info def get_url ( self ): \"\"\" \u83b7\u53d6\u56fe\u7247\u6d88\u606f\u7684\u56fe\u7247URL\uff0c\u63a5\u6536\u7684\u56fe\u7247\u6d88\u606f\u4ec5\u6709URL :return: URL \"\"\" return self . __info [ self . URL ] def get_base64 ( self ): \"\"\" \u83b7\u53d6\u56fe\u7247\u6d88\u606f\u7684\u56fe\u7247BASE64\u5b57\u7b26\u4e32 :return: BASE64 \"\"\" return self . __info [ self . BASE64 ] def get_path ( self ): \"\"\" \u83b7\u53d6\u56fe\u7247\u6d88\u606f\u7684\u56fe\u7247PATH :return: PATH \"\"\" return self . __info [ self . PATH ] def serialize ( self ): temp = { 'type' : 'Image' } temp . update ( self . __info ) return temp","title":"ImageMsg"},{"location":"developer/moudle/msg/#mplapi.msg.ImageMsg.__init__","text":":param info: \u56fe\u7247\u7684\u6765\u6e90 :param type: ImageMsg\u4e2d\u7684\u4e09\u4e2a\u679a\u4e3e(URL,BASE64,\u7edd\u5bf9\u8def\u5f84PATH) Source code in mplapi\\msg.py 58 59 60 61 62 63 64 def __init__ ( self , info , type ): \"\"\" :param info: \u56fe\u7247\u7684\u6765\u6e90 :param type: ImageMsg\u4e2d\u7684\u4e09\u4e2a\u679a\u4e3e(URL,BASE64,\u7edd\u5bf9\u8def\u5f84PATH) \"\"\" self . __info [ type ] = info","title":"__init__()"},{"location":"developer/moudle/msg/#mplapi.msg.ImageMsg.get_base64","text":"\u83b7\u53d6\u56fe\u7247\u6d88\u606f\u7684\u56fe\u7247BASE64\u5b57\u7b26\u4e32 :return: BASE64 Source code in mplapi\\msg.py 73 74 75 76 77 78 def get_base64 ( self ): \"\"\" \u83b7\u53d6\u56fe\u7247\u6d88\u606f\u7684\u56fe\u7247BASE64\u5b57\u7b26\u4e32 :return: BASE64 \"\"\" return self . __info [ self . BASE64 ]","title":"get_base64()"},{"location":"developer/moudle/msg/#mplapi.msg.ImageMsg.get_path","text":"\u83b7\u53d6\u56fe\u7247\u6d88\u606f\u7684\u56fe\u7247PATH :return: PATH Source code in mplapi\\msg.py 80 81 82 83 84 85 def get_path ( self ): \"\"\" \u83b7\u53d6\u56fe\u7247\u6d88\u606f\u7684\u56fe\u7247PATH :return: PATH \"\"\" return self . __info [ self . PATH ]","title":"get_path()"},{"location":"developer/moudle/msg/#mplapi.msg.ImageMsg.get_url","text":"\u83b7\u53d6\u56fe\u7247\u6d88\u606f\u7684\u56fe\u7247URL\uff0c\u63a5\u6536\u7684\u56fe\u7247\u6d88\u606f\u4ec5\u6709URL :return: URL Source code in mplapi\\msg.py 66 67 68 69 70 71 def get_url ( self ): \"\"\" \u83b7\u53d6\u56fe\u7247\u6d88\u606f\u7684\u56fe\u7247URL\uff0c\u63a5\u6536\u7684\u56fe\u7247\u6d88\u606f\u4ec5\u6709URL :return: URL \"\"\" return self . __info [ self . URL ]","title":"get_url()"},{"location":"developer/moudle/msg/#mplapi.msg.Msg","text":"Msg\u6d88\u606f\u5bf9\u8c61,\u4efb\u610f\u53ef\u88ab\u53d1\u9001\u7684\u6d88\u606f\u6216\u8005\u63a5\u6536\u7684\u6d88\u606f\u90fd\u662f\u8be5\u7c7b\u7684\u5b50\u7c7b Source code in mplapi\\msg.py 5 6 7 8 9 10 11 12 13 14 15 16 17 18 class Msg ( metaclass = ABCMeta ): \"\"\" Msg\u6d88\u606f\u5bf9\u8c61,\u4efb\u610f\u53ef\u88ab\u53d1\u9001\u7684\u6d88\u606f\u6216\u8005\u63a5\u6536\u7684\u6d88\u606f\u90fd\u662f\u8be5\u7c7b\u7684\u5b50\u7c7b \"\"\" @abstractmethod def serialize ( self ) -> dict : \"\"\" \u5e8f\u5217\u5316Msg :return: \u5e8f\u5217\u5316\u7ed3\u679c \"\"\" pass def __str__ ( self ): return str ( self . serialize ())","title":"Msg"},{"location":"developer/moudle/msg/#mplapi.msg.Msg.serialize","text":"\u5e8f\u5217\u5316Msg :return: \u5e8f\u5217\u5316\u7ed3\u679c Source code in mplapi\\msg.py 9 10 11 12 13 14 15 @abstractmethod def serialize ( self ) -> dict : \"\"\" \u5e8f\u5217\u5316Msg :return: \u5e8f\u5217\u5316\u7ed3\u679c \"\"\" pass","title":"serialize()"},{"location":"developer/moudle/msg/#mplapi.msg.MsgChain","text":"Bases: Msg \u6d88\u606f\u94fe\u7c7b Source code in mplapi\\msg.pyclass MsgChain ( Msg ): \"\"\" \u6d88\u606f\u94fe\u7c7b \"\"\" __chain = [] def __init__ ( self ): self . __chain = [] def __iter__ ( self ): return self . __chain . __iter__ () def __getitem__ ( self , item ): return self . __chain . __getitem__ ( item ) def __len__ ( self ): return self . __chain . __len__ () def add_msg ( self , msg : Msg ): \"\"\" \u5f80\u6d88\u606f\u94fe\u4e2d\u589e\u52a0\u6d88\u606f :param msg: \u4efb\u610f\u7ee7\u627fMsg\u7c7b\u7684\u6d88\u606f\u5bf9\u8c61 :return: \"\"\" self . __chain . append ( msg ) def remove_msg ( self , msg : Msg ): \"\"\" \u4ece\u6d88\u606f\u94fe\u4e2d\u79fb\u9664\u6d88\u606f :param msg: \u4efb\u610f\u7ee7\u627fMsg\u7c7b\u7684\u6d88\u606f\u5bf9\u8c61 :return: \"\"\" if msg in self . __chain : self . __chain . remove ( msg ) def pop_msg ( self , index : int ): \"\"\" \u6839\u636e\u7d22\u5f15\u4ece\u6d88\u606f\u94fe\u4e2d\u79fb\u9664\u6d88\u606f :param index: \u7d22\u5f15 :return: \"\"\" self . __chain . pop ( index ) def serialize ( self ): chain_se = [] for i in self . __chain : chain_se . append ( i . serialize ()) return chain_se def get_source ( self ) -> SourceMsg : \"\"\" \u83b7\u53d6\u6d88\u606fSourceMsg\u5bf9\u8c61 :return: SourceMsg\u5bf9\u8c61 \"\"\" for i in self . __chain : if type ( i ) is SourceMsg : return i def get_plain_msg ( self ) -> list [ PlainMsg ]: \"\"\" \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684Plain\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: PlainMsg\u5bf9\u8c61\u5217\u8868 \"\"\" temp = [] for i in self . __chain : if type ( i ) is PlainMsg : temp . append ( i ) return temp def get_image_msg ( self ) -> list [ ImageMsg ]: \"\"\" \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684Image\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: ImageMsg\u5bf9\u8c61\u5217\u8868 \"\"\" temp = [] for i in self . __chain : if type ( i ) is ImageMsg : temp . append ( i ) return temp def get_quote_msg ( self ) -> list [ QuoteMsg ]: \"\"\" \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684Quote\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: QuoteMsg\u5bf9\u8c61\u5217\u8868 \"\"\" temp = [] for i in self . __chain : if type ( i ) is QuoteMsg : temp . append ( i ) return temp def get_voice_msg ( self ) -> list [ VoiceMsg ]: \"\"\" \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684Voice\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: VoiceMsg\u5bf9\u8c61\u5217\u8868 \"\"\" temp = [] for i in self . __chain : if type ( i ) is VoiceMsg : temp . append ( i ) return temp def get_at_msg ( self ) -> list [ AtMsg ]: \"\"\" \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684At\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: AtMsg\u5bf9\u8c61\u5217\u8868 \"\"\" temp = [] for i in self . __chain : if type ( i ) is AtMsg : temp . append ( i ) return temp def get_at_all_msg ( self ) -> list [ AtAllMsg ]: \"\"\" \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684AtAll\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: AtAllMsg\u5bf9\u8c61\u5217\u8868 \"\"\" temp = [] for i in self . __chain : if type ( i ) is AtAllMsg : temp . append ( i ) return temp def get_face_msg ( self ) -> list [ FaceMsg ]: \"\"\" \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684Face\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: FaceMsg\u5bf9\u8c61\u5217\u8868 \"\"\" temp = [] for i in self . __chain : if type ( i ) is FaceMsg : temp . append ( i ) return temp def get_flash_image_msg ( self ) -> list [ FlashImageMsg ]: \"\"\" \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684FlashImage\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: FlashImageMsg\u5bf9\u8c61\u5217\u8868 \"\"\" temp = [] for i in self . __chain : if type ( i ) is FlashImageMsg : temp . append ( i ) return temp def get_poke_msg ( self ) -> list [ PokeMsg ]: \"\"\" \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684Poke\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: PokeMsg\u5bf9\u8c61\u5217\u8868 \"\"\" temp = [] for i in self . __chain : if type ( i ) is PokeMsg : temp . append ( i ) return temp def get_forward_msg ( self ) -> list [ ForwardMsg ]: \"\"\" \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684Forward\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: ForwardMsg\u5bf9\u8c61\u5217\u8868 \"\"\" temp = [] for i in self . __chain : if type ( i ) is ForwardMsg : temp . append ( i ) return temp def get_app_msg ( self ) -> list [ AppMsg ]: \"\"\" \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684App\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: AppMsg\u5bf9\u8c61\u5217\u8868 \"\"\" temp = [] for i in self . __chain : if type ( i ) is AppMsg : temp . append ( i ) return temp","title":"MsgChain"},{"location":"developer/moudle/msg/#mplapi.msg.MsgChain.add_msg","text":"\u5f80\u6d88\u606f\u94fe\u4e2d\u589e\u52a0\u6d88\u606f :param msg: \u4efb\u610f\u7ee7\u627fMsg\u7c7b\u7684\u6d88\u606f\u5bf9\u8c61 :return: Source code in mplapi\\msg.py 377 378 379 380 381 382 383 def add_msg ( self , msg : Msg ): \"\"\" \u5f80\u6d88\u606f\u94fe\u4e2d\u589e\u52a0\u6d88\u606f :param msg: \u4efb\u610f\u7ee7\u627fMsg\u7c7b\u7684\u6d88\u606f\u5bf9\u8c61 :return: \"\"\" self . __chain . append ( msg )","title":"add_msg()"},{"location":"developer/moudle/msg/#mplapi.msg.MsgChain.get_app_msg","text":"\u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684App\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: AppMsg\u5bf9\u8c61\u5217\u8868 Source code in mplapi\\msg.py 527 528 529 530 531 532 533 534 535 536 def get_app_msg ( self ) -> list [ AppMsg ]: \"\"\" \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684App\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: AppMsg\u5bf9\u8c61\u5217\u8868 \"\"\" temp = [] for i in self . __chain : if type ( i ) is AppMsg : temp . append ( i ) return temp","title":"get_app_msg()"},{"location":"developer/moudle/msg/#mplapi.msg.MsgChain.get_at_all_msg","text":"\u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684AtAll\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: AtAllMsg\u5bf9\u8c61\u5217\u8868 Source code in mplapi\\msg.py 472 473 474 475 476 477 478 479 480 481 def get_at_all_msg ( self ) -> list [ AtAllMsg ]: \"\"\" \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684AtAll\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: AtAllMsg\u5bf9\u8c61\u5217\u8868 \"\"\" temp = [] for i in self . __chain : if type ( i ) is AtAllMsg : temp . append ( i ) return temp","title":"get_at_all_msg()"},{"location":"developer/moudle/msg/#mplapi.msg.MsgChain.get_at_msg","text":"\u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684At\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: AtMsg\u5bf9\u8c61\u5217\u8868 Source code in mplapi\\msg.py 461 462 463 464 465 466 467 468 469 470 def get_at_msg ( self ) -> list [ AtMsg ]: \"\"\" \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684At\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: AtMsg\u5bf9\u8c61\u5217\u8868 \"\"\" temp = [] for i in self . __chain : if type ( i ) is AtMsg : temp . append ( i ) return temp","title":"get_at_msg()"},{"location":"developer/moudle/msg/#mplapi.msg.MsgChain.get_face_msg","text":"\u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684Face\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: FaceMsg\u5bf9\u8c61\u5217\u8868 Source code in mplapi\\msg.py 483 484 485 486 487 488 489 490 491 492 def get_face_msg ( self ) -> list [ FaceMsg ]: \"\"\" \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684Face\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: FaceMsg\u5bf9\u8c61\u5217\u8868 \"\"\" temp = [] for i in self . __chain : if type ( i ) is FaceMsg : temp . append ( i ) return temp","title":"get_face_msg()"},{"location":"developer/moudle/msg/#mplapi.msg.MsgChain.get_flash_image_msg","text":"\u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684FlashImage\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: FlashImageMsg\u5bf9\u8c61\u5217\u8868 Source code in mplapi\\msg.py 494 495 496 497 498 499 500 501 502 503 def get_flash_image_msg ( self ) -> list [ FlashImageMsg ]: \"\"\" \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684FlashImage\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: FlashImageMsg\u5bf9\u8c61\u5217\u8868 \"\"\" temp = [] for i in self . __chain : if type ( i ) is FlashImageMsg : temp . append ( i ) return temp","title":"get_flash_image_msg()"},{"location":"developer/moudle/msg/#mplapi.msg.MsgChain.get_forward_msg","text":"\u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684Forward\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: ForwardMsg\u5bf9\u8c61\u5217\u8868 Source code in mplapi\\msg.py 516 517 518 519 520 521 522 523 524 525 def get_forward_msg ( self ) -> list [ ForwardMsg ]: \"\"\" \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684Forward\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: ForwardMsg\u5bf9\u8c61\u5217\u8868 \"\"\" temp = [] for i in self . __chain : if type ( i ) is ForwardMsg : temp . append ( i ) return temp","title":"get_forward_msg()"},{"location":"developer/moudle/msg/#mplapi.msg.MsgChain.get_image_msg","text":"\u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684Image\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: ImageMsg\u5bf9\u8c61\u5217\u8868 Source code in mplapi\\msg.py 428 429 430 431 432 433 434 435 436 437 def get_image_msg ( self ) -> list [ ImageMsg ]: \"\"\" \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684Image\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: ImageMsg\u5bf9\u8c61\u5217\u8868 \"\"\" temp = [] for i in self . __chain : if type ( i ) is ImageMsg : temp . append ( i ) return temp","title":"get_image_msg()"},{"location":"developer/moudle/msg/#mplapi.msg.MsgChain.get_plain_msg","text":"\u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684Plain\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: PlainMsg\u5bf9\u8c61\u5217\u8868 Source code in mplapi\\msg.py 417 418 419 420 421 422 423 424 425 426 def get_plain_msg ( self ) -> list [ PlainMsg ]: \"\"\" \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684Plain\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: PlainMsg\u5bf9\u8c61\u5217\u8868 \"\"\" temp = [] for i in self . __chain : if type ( i ) is PlainMsg : temp . append ( i ) return temp","title":"get_plain_msg()"},{"location":"developer/moudle/msg/#mplapi.msg.MsgChain.get_poke_msg","text":"\u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684Poke\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: PokeMsg\u5bf9\u8c61\u5217\u8868 Source code in mplapi\\msg.py 505 506 507 508 509 510 511 512 513 514 def get_poke_msg ( self ) -> list [ PokeMsg ]: \"\"\" \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684Poke\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: PokeMsg\u5bf9\u8c61\u5217\u8868 \"\"\" temp = [] for i in self . __chain : if type ( i ) is PokeMsg : temp . append ( i ) return temp","title":"get_poke_msg()"},{"location":"developer/moudle/msg/#mplapi.msg.MsgChain.get_quote_msg","text":"\u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684Quote\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: QuoteMsg\u5bf9\u8c61\u5217\u8868 Source code in mplapi\\msg.py 439 440 441 442 443 444 445 446 447 448 def get_quote_msg ( self ) -> list [ QuoteMsg ]: \"\"\" \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684Quote\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: QuoteMsg\u5bf9\u8c61\u5217\u8868 \"\"\" temp = [] for i in self . __chain : if type ( i ) is QuoteMsg : temp . append ( i ) return temp","title":"get_quote_msg()"},{"location":"developer/moudle/msg/#mplapi.msg.MsgChain.get_source","text":"\u83b7\u53d6\u6d88\u606fSourceMsg\u5bf9\u8c61 :return: SourceMsg\u5bf9\u8c61 Source code in mplapi\\msg.py 408 409 410 411 412 413 414 415 def get_source ( self ) -> SourceMsg : \"\"\" \u83b7\u53d6\u6d88\u606fSourceMsg\u5bf9\u8c61 :return: SourceMsg\u5bf9\u8c61 \"\"\" for i in self . __chain : if type ( i ) is SourceMsg : return i","title":"get_source()"},{"location":"developer/moudle/msg/#mplapi.msg.MsgChain.get_voice_msg","text":"\u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684Voice\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: VoiceMsg\u5bf9\u8c61\u5217\u8868 Source code in mplapi\\msg.py 450 451 452 453 454 455 456 457 458 459 def get_voice_msg ( self ) -> list [ VoiceMsg ]: \"\"\" \u83b7\u53d6\u8be5\u6d88\u606f\u94fe\u6240\u6709\u7684Voice\u6d88\u606f\u5bf9\u8c61\u5217\u8868 :return: VoiceMsg\u5bf9\u8c61\u5217\u8868 \"\"\" temp = [] for i in self . __chain : if type ( i ) is VoiceMsg : temp . append ( i ) return temp","title":"get_voice_msg()"},{"location":"developer/moudle/msg/#mplapi.msg.MsgChain.pop_msg","text":"\u6839\u636e\u7d22\u5f15\u4ece\u6d88\u606f\u94fe\u4e2d\u79fb\u9664\u6d88\u606f :param index: \u7d22\u5f15 :return: Source code in mplapi\\msg.py 394 395 396 397 398 399 400 def pop_msg ( self , index : int ): \"\"\" \u6839\u636e\u7d22\u5f15\u4ece\u6d88\u606f\u94fe\u4e2d\u79fb\u9664\u6d88\u606f :param index: \u7d22\u5f15 :return: \"\"\" self . __chain . pop ( index )","title":"pop_msg()"},{"location":"developer/moudle/msg/#mplapi.msg.MsgChain.remove_msg","text":"\u4ece\u6d88\u606f\u94fe\u4e2d\u79fb\u9664\u6d88\u606f :param msg: \u4efb\u610f\u7ee7\u627fMsg\u7c7b\u7684\u6d88\u606f\u5bf9\u8c61 :return: Source code in mplapi\\msg.py 385 386 387 388 389 390 391 392 def remove_msg ( self , msg : Msg ): \"\"\" \u4ece\u6d88\u606f\u94fe\u4e2d\u79fb\u9664\u6d88\u606f :param msg: \u4efb\u610f\u7ee7\u627fMsg\u7c7b\u7684\u6d88\u606f\u5bf9\u8c61 :return: \"\"\" if msg in self . __chain : self . __chain . remove ( msg )","title":"remove_msg()"},{"location":"developer/moudle/msg/#mplapi.msg.PlainMsg","text":"Bases: Msg PlainMsg\u7c7b \u6587\u5b57\u6d88\u606f Source code in mplapi\\msg.py 35 36 37 38 39 40 41 42 43 44 45 class PlainMsg ( Msg ): \"\"\" PlainMsg\u7c7b \u6587\u5b57\u6d88\u606f \"\"\" def __init__ ( self , text ): self . text = text def serialize ( self ): return { 'type' : 'Plain' , 'text' : self . text }","title":"PlainMsg"},{"location":"developer/moudle/msg/#mplapi.msg.PokeMsg","text":"Bases: Msg PokeMsg\u7c7b \u7c7b\u6233\u4e00\u6233\u6d88\u606f Source code in mplapi\\msg.py 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 class PokeMsg ( Msg ): \"\"\" PokeMsg\u7c7b \u7c7b\u6233\u4e00\u6233\u6d88\u606f \"\"\" POKE = \"Poke\" SHOW_LOVE = \"ShowLove\" LIKE = \"Like\" HEART_BROKEN = \"Heartbroken\" SIX = \"SixSixSix\" FANG_DA_ZHAO = \"FangDaZhao\" def __init__ ( self , type ): \"\"\" :param type: PokeMsg\u4e2d\u76846\u4e2a\u679a\u4e3e \"\"\" self . type = type def serialize ( self ): return { 'type' : 'Poke' , 'name' : self . type }","title":"PokeMsg"},{"location":"developer/moudle/msg/#mplapi.msg.PokeMsg.__init__","text":":param type: PokeMsg\u4e2d\u76846\u4e2a\u679a\u4e3e Source code in mplapi\\msg.py 331 332 333 334 335 336 def __init__ ( self , type ): \"\"\" :param type: PokeMsg\u4e2d\u76846\u4e2a\u679a\u4e3e \"\"\" self . type = type","title":"__init__()"},{"location":"developer/moudle/msg/#mplapi.msg.QuoteMsg","text":"Bases: Msg QuoteMsg\u7c7b \u56de\u590d\u6d88\u606f Source code in mplapi\\msg.py 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 class QuoteMsg ( Msg ): \"\"\" QuoteMsg\u7c7b \u56de\u590d\u6d88\u606f \"\"\" def __init__ ( self , id , sender , target , origin_msg_chain , group = 0 ): \"\"\" :param id: \u56de\u590d\u7684\u6e90\u6d88\u606fID(SourceMsg\u5bf9\u8c61\u4e2d\u7684id\u5b57\u6bb5) :param sender: \u53d1\u9001\u8005qq\u53f7 :param target: \u56de\u590d\u5bf9\u8c61qq\u53f7 :param origin_msg_chain: \u56de\u590d\u7684\u6e90\u6d88\u606f\u94fe :param group: \u56de\u590d\u7684\u7fa4\u53f7(\u597d\u53cb\u6d88\u606f\u65f6\u4e3a0) \"\"\" self . id = id self . sender = sender self . target = target self . origin_msg_Chain = origin_msg_chain self . group = group def serialize ( self ): origin_ser = [] for i in self . origin_msg_Chain : origin_ser . append ( i . serialize ()) return { 'type' : 'Quote' , 'id' : self . id , 'groupId' : self . group , 'senderId' : self . sender , 'targetId' : self . target , 'origin' : origin_ser }","title":"QuoteMsg"},{"location":"developer/moudle/msg/#mplapi.msg.QuoteMsg.__init__","text":":param id: \u56de\u590d\u7684\u6e90\u6d88\u606fID(SourceMsg\u5bf9\u8c61\u4e2d\u7684id\u5b57\u6bb5) :param sender: \u53d1\u9001\u8005qq\u53f7 :param target: \u56de\u590d\u5bf9\u8c61qq\u53f7 :param origin_msg_chain: \u56de\u590d\u7684\u6e90\u6d88\u606f\u94fe :param group: \u56de\u590d\u7684\u7fa4\u53f7(\u597d\u53cb\u6d88\u606f\u65f6\u4e3a0) Source code in mplapi\\msg.py 195 196 197 198 199 200 201 202 203 204 205 206 207 208 def __init__ ( self , id , sender , target , origin_msg_chain , group = 0 ): \"\"\" :param id: \u56de\u590d\u7684\u6e90\u6d88\u606fID(SourceMsg\u5bf9\u8c61\u4e2d\u7684id\u5b57\u6bb5) :param sender: \u53d1\u9001\u8005qq\u53f7 :param target: \u56de\u590d\u5bf9\u8c61qq\u53f7 :param origin_msg_chain: \u56de\u590d\u7684\u6e90\u6d88\u606f\u94fe :param group: \u56de\u590d\u7684\u7fa4\u53f7(\u597d\u53cb\u6d88\u606f\u65f6\u4e3a0) \"\"\" self . id = id self . sender = sender self . target = target self . origin_msg_Chain = origin_msg_chain self . group = group","title":"__init__()"},{"location":"developer/moudle/msg/#mplapi.msg.Source","text":"\u6d88\u606f\u53d1\u9001\u8005\u5bf9\u8c61\u96c6\u5408 Source code in mplapi\\msg.py 539 540 541 542 543 544 545 546 547 548 549 550 551 552 class Source : \"\"\" \u6d88\u606f\u53d1\u9001\u8005\u5bf9\u8c61\u96c6\u5408 \"\"\" def __init__ ( self , source_msg : SourceMsg , sender : int , group : int = 0 ): \"\"\" :param source_msg: SourceMsg\u5bf9\u8c61 :param sender: \u53d1\u9001\u8005qq :param group: \u7fa4\u53f7(\u975e\u7fa4\u804a\u65f6\u6b64\u503c\u4e3a0) \"\"\" self . sender = sender self . group = group self . source_msg = source_msg","title":"Source"},{"location":"developer/moudle/msg/#mplapi.msg.Source.__init__","text":":param source_msg: SourceMsg\u5bf9\u8c61 :param sender: \u53d1\u9001\u8005qq :param group: \u7fa4\u53f7(\u975e\u7fa4\u804a\u65f6\u6b64\u503c\u4e3a0) Source code in mplapi\\msg.py 543 544 545 546 547 548 549 550 551 552 def __init__ ( self , source_msg : SourceMsg , sender : int , group : int = 0 ): \"\"\" :param source_msg: SourceMsg\u5bf9\u8c61 :param sender: \u53d1\u9001\u8005qq :param group: \u7fa4\u53f7(\u975e\u7fa4\u804a\u65f6\u6b64\u503c\u4e3a0) \"\"\" self . sender = sender self . group = group self . source_msg = source_msg","title":"__init__()"},{"location":"developer/moudle/msg/#mplapi.msg.SourceMsg","text":"Bases: Msg SourceMsg\u7c7b \u5b58\u5728\u4e8e\u63a5\u6536\u7684\u6d88\u606f\u94fe\u4e2d\uff0c\u4f5c\u4e3a\u552f\u4e00\u6807\u8bc6 Source code in mplapi\\msg.py 21 22 23 24 25 26 27 28 29 30 31 32 class SourceMsg ( Msg ): \"\"\" SourceMsg\u7c7b \u5b58\u5728\u4e8e\u63a5\u6536\u7684\u6d88\u606f\u94fe\u4e2d\uff0c\u4f5c\u4e3a\u552f\u4e00\u6807\u8bc6 \"\"\" def __init__ ( self , id , time ): self . id = id self . time = time def serialize ( self ): return { 'type' : 'Source' , 'id' : self . id , 'time' : self . time }","title":"SourceMsg"},{"location":"developer/moudle/msg/#mplapi.msg.VoiceMsg","text":"Bases: Msg VoiceMsg\u7c7b \u8bed\u97f3\u6d88\u606f Source code in mplapi\\msg.py 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 class VoiceMsg ( Msg ): \"\"\" VoiceMsg\u7c7b \u8bed\u97f3\u6d88\u606f \"\"\" URL = 'url' BASE64 = 'base64' PATH = 'path' length = None __info = { URL : None , BASE64 : None , PATH : None } def __init__ ( self , info , type ): \"\"\" :param info: \u8bed\u97f3\u7684\u6765\u6e90 :param type: VoiceMsg\u4e2d\u7684\u4e09\u4e2a\u679a\u4e3e(URL,BASE64,\u7edd\u5bf9\u8def\u5f84PATH) \"\"\" self . __info [ type ] = info def get_url ( self ): \"\"\" \u83b7\u53d6\u8bed\u97f3\u6d88\u606f\u7684\u8bed\u97f3URL\uff0c\u63a5\u6536\u7684\u8bed\u97f3\u6d88\u606f\u4ec5\u6709URL :return: URL \"\"\" return self . __info [ self . URL ] def get_base64 ( self ): \"\"\" \u83b7\u53d6\u8bed\u97f3\u6d88\u606f\u7684\u8bed\u97f3BASE64\u5b57\u7b26\u4e32 :return: BASE64 \"\"\" return self . __info [ self . BASE64 ] def get_path ( self ): \"\"\" \u83b7\u53d6\u8bed\u97f3\u6d88\u606f\u7684\u8bed\u97f3PATH :return: PATH \"\"\" return self . __info [ self . PATH ] def get_length ( self ): \"\"\" \u83b7\u53d6\u8bed\u97f3\u6d88\u606f\u7684\u8bed\u97f3\u957f\u5ea6 \u79d2 :return: \u957f\u5ea6 \"\"\" return self . length def serialize ( self ): temp = { 'type' : 'Voice' , 'length' : self . length } temp . update ( self . __info ) return temp","title":"VoiceMsg"},{"location":"developer/moudle/msg/#mplapi.msg.VoiceMsg.__init__","text":":param info: \u8bed\u97f3\u7684\u6765\u6e90 :param type: VoiceMsg\u4e2d\u7684\u4e09\u4e2a\u679a\u4e3e(URL,BASE64,\u7edd\u5bf9\u8def\u5f84PATH) Source code in mplapi\\msg.py 119 120 121 122 123 124 125 def __init__ ( self , info , type ): \"\"\" :param info: \u8bed\u97f3\u7684\u6765\u6e90 :param type: VoiceMsg\u4e2d\u7684\u4e09\u4e2a\u679a\u4e3e(URL,BASE64,\u7edd\u5bf9\u8def\u5f84PATH) \"\"\" self . __info [ type ] = info","title":"__init__()"},{"location":"developer/moudle/msg/#mplapi.msg.VoiceMsg.get_base64","text":"\u83b7\u53d6\u8bed\u97f3\u6d88\u606f\u7684\u8bed\u97f3BASE64\u5b57\u7b26\u4e32 :return: BASE64 Source code in mplapi\\msg.py 134 135 136 137 138 139 def get_base64 ( self ): \"\"\" \u83b7\u53d6\u8bed\u97f3\u6d88\u606f\u7684\u8bed\u97f3BASE64\u5b57\u7b26\u4e32 :return: BASE64 \"\"\" return self . __info [ self . BASE64 ]","title":"get_base64()"},{"location":"developer/moudle/msg/#mplapi.msg.VoiceMsg.get_length","text":"\u83b7\u53d6\u8bed\u97f3\u6d88\u606f\u7684\u8bed\u97f3\u957f\u5ea6 \u79d2 :return: \u957f\u5ea6 Source code in mplapi\\msg.py 148 149 150 151 152 153 def get_length ( self ): \"\"\" \u83b7\u53d6\u8bed\u97f3\u6d88\u606f\u7684\u8bed\u97f3\u957f\u5ea6 \u79d2 :return: \u957f\u5ea6 \"\"\" return self . length","title":"get_length()"},{"location":"developer/moudle/msg/#mplapi.msg.VoiceMsg.get_path","text":"\u83b7\u53d6\u8bed\u97f3\u6d88\u606f\u7684\u8bed\u97f3PATH :return: PATH Source code in mplapi\\msg.py 141 142 143 144 145 146 def get_path ( self ): \"\"\" \u83b7\u53d6\u8bed\u97f3\u6d88\u606f\u7684\u8bed\u97f3PATH :return: PATH \"\"\" return self . __info [ self . PATH ]","title":"get_path()"},{"location":"developer/moudle/msg/#mplapi.msg.VoiceMsg.get_url","text":"\u83b7\u53d6\u8bed\u97f3\u6d88\u606f\u7684\u8bed\u97f3URL\uff0c\u63a5\u6536\u7684\u8bed\u97f3\u6d88\u606f\u4ec5\u6709URL :return: URL Source code in mplapi\\msg.py 127 128 129 130 131 132 def get_url ( self ): \"\"\" \u83b7\u53d6\u8bed\u97f3\u6d88\u606f\u7684\u8bed\u97f3URL\uff0c\u63a5\u6536\u7684\u8bed\u97f3\u6d88\u606f\u4ec5\u6709URL :return: URL \"\"\" return self . __info [ self . URL ]","title":"get_url()"},{"location":"developer/moudle/plugin/","text":"FriendTask Bases: PluginTask \u63d2\u4ef6\u7684\u597d\u53cb\u4efb\u52a1\u7c7b \u8be5\u7c7b\u4e3a\u62bd\u8c61\u7c7b\uff0c\u8bf7\u5b9e\u73b0\u88ab@abstractmethod\u6807\u8bb0\u7684\u62bd\u8c61\u65b9\u6cd5 target \u4efb\u52a1\u76ee\u6807qq\u53f7 Source code in mplapi\\plugin.py 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 class FriendTask ( PluginTask , metaclass = ABCMeta ): \"\"\" \u63d2\u4ef6\u7684\u597d\u53cb\u4efb\u52a1\u7c7b \u8be5\u7c7b\u4e3a\u62bd\u8c61\u7c7b\uff0c\u8bf7\u5b9e\u73b0\u88ab@abstractmethod\u6807\u8bb0\u7684\u62bd\u8c61\u65b9\u6cd5 target \u4efb\u52a1\u76ee\u6807qq\u53f7 \"\"\" def __init__ ( self , target , plugin : PyPlugin ): \"\"\" :param target: \u9700\u8981\u6267\u884c\u4efb\u52a1\u7684QQ\u53f7 :param plugin: PyPlugin\u5bf9\u8c61 \"\"\" super () . __init__ ( plugin ) self . target = target def is_task_target ( self , group , target ) -> bool : pass __init__ ( target , plugin ) :param target: \u9700\u8981\u6267\u884c\u4efb\u52a1\u7684QQ\u53f7 :param plugin: PyPlugin\u5bf9\u8c61 Source code in mplapi\\plugin.py 243 244 245 246 247 248 249 250 def __init__ ( self , target , plugin : PyPlugin ): \"\"\" :param target: \u9700\u8981\u6267\u884c\u4efb\u52a1\u7684QQ\u53f7 :param plugin: PyPlugin\u5bf9\u8c61 \"\"\" super () . __init__ ( plugin ) self . target = target GroupTask Bases: PluginTask \u63d2\u4ef6\u7684\u7fa4\u4efb\u52a1\u7c7b \u8be5\u7c7b\u4e3a\u62bd\u8c61\u7c7b\uff0c\u8bf7\u5b9e\u73b0\u88ab@abstractmethod\u6807\u8bb0\u7684\u62bd\u8c61\u65b9\u6cd5 group \u4efb\u52a1\u76ee\u6807\u7fa4\u53f7 target \u4efb\u52a1\u76ee\u6807qq\u53f7 Source code in mplapi\\plugin.py 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 class GroupTask ( PluginTask , metaclass = ABCMeta ): \"\"\" \u63d2\u4ef6\u7684\u7fa4\u4efb\u52a1\u7c7b \u8be5\u7c7b\u4e3a\u62bd\u8c61\u7c7b\uff0c\u8bf7\u5b9e\u73b0\u88ab@abstractmethod\u6807\u8bb0\u7684\u62bd\u8c61\u65b9\u6cd5 group \u4efb\u52a1\u76ee\u6807\u7fa4\u53f7 target \u4efb\u52a1\u76ee\u6807qq\u53f7 \"\"\" def __init__ ( self , group , plugin : PyPlugin , target = None ): \"\"\" :param group: \u9700\u8981\u6267\u884c\u4efb\u52a1\u7684\u7fa4\u53f7 :param plugin: PyPlugin\u5bf9\u8c61 :param target: \u9700\u8981\u6267\u884c\u4efb\u52a1\u7684QQ\u53f7\uff0c\u4e0d\u4f20\u5165\u6216\u4e3aNone\u65f6\u5c06\u5224\u5b9a\u4e3a\u4efb\u610f\u7fa4\u53cb \"\"\" super () . __init__ ( plugin ) self . group = group self . target = target def is_task_target ( self , group , target ) -> bool : pass __init__ ( group , plugin , target = None ) :param group: \u9700\u8981\u6267\u884c\u4efb\u52a1\u7684\u7fa4\u53f7 :param plugin: PyPlugin\u5bf9\u8c61 :param target: \u9700\u8981\u6267\u884c\u4efb\u52a1\u7684QQ\u53f7\uff0c\u4e0d\u4f20\u5165\u6216\u4e3aNone\u65f6\u5c06\u5224\u5b9a\u4e3a\u4efb\u610f\u7fa4\u53cb Source code in mplapi\\plugin.py 221 222 223 224 225 226 227 228 229 230 def __init__ ( self , group , plugin : PyPlugin , target = None ): \"\"\" :param group: \u9700\u8981\u6267\u884c\u4efb\u52a1\u7684\u7fa4\u53f7 :param plugin: PyPlugin\u5bf9\u8c61 :param target: \u9700\u8981\u6267\u884c\u4efb\u52a1\u7684QQ\u53f7\uff0c\u4e0d\u4f20\u5165\u6216\u4e3aNone\u65f6\u5c06\u5224\u5b9a\u4e3a\u4efb\u610f\u7fa4\u53cb \"\"\" super () . __init__ ( plugin ) self . group = group self . target = target PluginExceptionCatcher \u5b9e\u73b0\u8be5\u63a5\u53e3\uff0c\u4f7f\u5f97@catch_async_exception\u88c5\u9970\u5668\u53ef\u4ee5\u6355\u83b7\u7c7b\u4e2d\u5f02\u6b65\u65b9\u6cd5\u629b\u51fa\u7684\u5f02\u5e38 \u8be5\u7c7b\u4e3a\u62bd\u8c61\u7c7b\uff0c\u8bf7\u5b9e\u73b0\u88ab@abstractmethod\u6807\u8bb0\u7684\u62bd\u8c61\u65b9\u6cd5 Source code in mplapi\\plugin.py 20 21 22 23 24 25 26 27 28 29 30 31 32 33 class PluginExceptionCatcher ( metaclass = ABCMeta ): \"\"\" \u5b9e\u73b0\u8be5\u63a5\u53e3\uff0c\u4f7f\u5f97@catch_async_exception\u88c5\u9970\u5668\u53ef\u4ee5\u6355\u83b7\u7c7b\u4e2d\u5f02\u6b65\u65b9\u6cd5\u629b\u51fa\u7684\u5f02\u5e38 \u8be5\u7c7b\u4e3a\u62bd\u8c61\u7c7b\uff0c\u8bf7\u5b9e\u73b0\u88ab@abstractmethod\u6807\u8bb0\u7684\u62bd\u8c61\u65b9\u6cd5 \"\"\" @abstractmethod def handle_exception ( self , e : BaseException ): \"\"\" \u5904\u7406\u5f02\u5e38 :param e: \u6355\u83b7\u7684\u5f02\u5e38 :return: \"\"\" pass handle_exception ( e ) abstractmethod \u5904\u7406\u5f02\u5e38 :param e: \u6355\u83b7\u7684\u5f02\u5e38 :return: Source code in mplapi\\plugin.py 26 27 28 29 30 31 32 33 @abstractmethod def handle_exception ( self , e : BaseException ): \"\"\" \u5904\u7406\u5f02\u5e38 :param e: \u6355\u83b7\u7684\u5f02\u5e38 :return: \"\"\" pass PluginTask Bases: PluginExceptionCatcher \u63d2\u4ef6\u4efb\u52a1\u7c7b\uff0c\u901a\u8fc7\u5b9e\u4f8b\u5316\u8be5\u7c7b\u6765\u521b\u5efa\u4e00\u4e2a\u63d2\u4ef6\u4efb\u52a1\u6765\u63d0\u4ea4\u81f3Bot \u8be5\u7c7b\u4e3a\u62bd\u8c61\u7c7b\uff0c\u8bf7\u5b9e\u73b0\u88ab@abstractmethod\u6807\u8bb0\u7684\u62bd\u8c61\u65b9\u6cd5 plugin_instance PyPlugin\u5bf9\u8c61 Source code in mplapi\\plugin.py 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 class PluginTask ( PluginExceptionCatcher ): \"\"\" \u63d2\u4ef6\u4efb\u52a1\u7c7b\uff0c\u901a\u8fc7\u5b9e\u4f8b\u5316\u8be5\u7c7b\u6765\u521b\u5efa\u4e00\u4e2a\u63d2\u4ef6\u4efb\u52a1\u6765\u63d0\u4ea4\u81f3Bot \u8be5\u7c7b\u4e3a\u62bd\u8c61\u7c7b\uff0c\u8bf7\u5b9e\u73b0\u88ab@abstractmethod\u6807\u8bb0\u7684\u62bd\u8c61\u65b9\u6cd5 plugin_instance PyPlugin\u5bf9\u8c61 \"\"\" def handle_exception ( self , e : BaseException ): pass def __init__ ( self , plugin : PyPlugin ): self . plugin_instance = plugin def set_timeout ( self , timeout : int ): \"\"\" \u8bbe\u7f6e\u4efb\u52a1\u8d85\u65f6\u65f6\u95f4(\u5373\u4e00\u5b9a\u65f6\u95f4\u5185\u4efb\u52a1\u6ca1\u6709\u6267\u884c\uff0c\u4efb\u52a1\u5c06\u4f1a\u88ab\u91ca\u653e),\u4e0d\u8bbe\u7f6e\u4e3a\u6c38\u4e0d\u8d85\u65f6 :param timeout: \u8d85\u65f6\u65f6\u95f4 \u79d2 :return: \"\"\" pass @abstractmethod def is_task_target ( self , group , target ) -> bool : \"\"\" \u4efb\u52a1\u662f\u5426\u6267\u884c\u7684\u5224\u522b\u89c4\u5219 :param group: \u7fa4\u53f7(\u82e5\u4e0d\u662f\u7fa4\u804a\uff0c\u6b64\u9879\u4f20\u5165\u7684\u503c\u4e3aNone) :param target: \u53d1\u9001\u8005QQ\u53f7 :return: \u5224\u522b\u7ed3\u679c \"\"\" pass @abstractmethod async def execute_task ( self , bot : Bot , source : msg . Source , message : msg . MsgChain ): \"\"\" \u6267\u884c\u7684\u4efb\u52a1\u4f53\uff0c\u5728\u5224\u522b\u7ed3\u679c\u4e3aTrue\u65f6\u8c03\u7528\u8be5\u65b9\u6cd5 :param bot: Bot\u5bf9\u8c61 :param source: \u4e00\u4e2a\u6709\u53d1\u9001\u8005\u4fe1\u606f\u7684\u96c6\u5408 :param message: \u6d88\u606f\u94fe :return: \"\"\" pass @abstractmethod async def on_timeout ( self , bot : Bot ): \"\"\" \u4efb\u52a1\u8d85\u65f6\u88ab\u91ca\u653e\u65f6\u8c03\u7528\u8be5\u65b9\u6cd5 :param bot: Bot\u5bf9\u8c61 :return: \"\"\" pass execute_task ( bot , source , message ) abstractmethod async \u6267\u884c\u7684\u4efb\u52a1\u4f53\uff0c\u5728\u5224\u522b\u7ed3\u679c\u4e3aTrue\u65f6\u8c03\u7528\u8be5\u65b9\u6cd5 :param bot: Bot\u5bf9\u8c61 :param source: \u4e00\u4e2a\u6709\u53d1\u9001\u8005\u4fe1\u606f\u7684\u96c6\u5408 :param message: \u6d88\u606f\u94fe :return: Source code in mplapi\\plugin.py 192 193 194 195 196 197 198 199 200 201 @abstractmethod async def execute_task ( self , bot : Bot , source : msg . Source , message : msg . MsgChain ): \"\"\" \u6267\u884c\u7684\u4efb\u52a1\u4f53\uff0c\u5728\u5224\u522b\u7ed3\u679c\u4e3aTrue\u65f6\u8c03\u7528\u8be5\u65b9\u6cd5 :param bot: Bot\u5bf9\u8c61 :param source: \u4e00\u4e2a\u6709\u53d1\u9001\u8005\u4fe1\u606f\u7684\u96c6\u5408 :param message: \u6d88\u606f\u94fe :return: \"\"\" pass is_task_target ( group , target ) abstractmethod \u4efb\u52a1\u662f\u5426\u6267\u884c\u7684\u5224\u522b\u89c4\u5219 :param group: \u7fa4\u53f7(\u82e5\u4e0d\u662f\u7fa4\u804a\uff0c\u6b64\u9879\u4f20\u5165\u7684\u503c\u4e3aNone) :param target: \u53d1\u9001\u8005QQ\u53f7 :return: \u5224\u522b\u7ed3\u679c Source code in mplapi\\plugin.py 182 183 184 185 186 187 188 189 190 @abstractmethod def is_task_target ( self , group , target ) -> bool : \"\"\" \u4efb\u52a1\u662f\u5426\u6267\u884c\u7684\u5224\u522b\u89c4\u5219 :param group: \u7fa4\u53f7(\u82e5\u4e0d\u662f\u7fa4\u804a\uff0c\u6b64\u9879\u4f20\u5165\u7684\u503c\u4e3aNone) :param target: \u53d1\u9001\u8005QQ\u53f7 :return: \u5224\u522b\u7ed3\u679c \"\"\" pass on_timeout ( bot ) abstractmethod async \u4efb\u52a1\u8d85\u65f6\u88ab\u91ca\u653e\u65f6\u8c03\u7528\u8be5\u65b9\u6cd5 :param bot: Bot\u5bf9\u8c61 :return: Source code in mplapi\\plugin.py 203 204 205 206 207 208 209 210 @abstractmethod async def on_timeout ( self , bot : Bot ): \"\"\" \u4efb\u52a1\u8d85\u65f6\u88ab\u91ca\u653e\u65f6\u8c03\u7528\u8be5\u65b9\u6cd5 :param bot: Bot\u5bf9\u8c61 :return: \"\"\" pass set_timeout ( timeout ) \u8bbe\u7f6e\u4efb\u52a1\u8d85\u65f6\u65f6\u95f4(\u5373\u4e00\u5b9a\u65f6\u95f4\u5185\u4efb\u52a1\u6ca1\u6709\u6267\u884c\uff0c\u4efb\u52a1\u5c06\u4f1a\u88ab\u91ca\u653e),\u4e0d\u8bbe\u7f6e\u4e3a\u6c38\u4e0d\u8d85\u65f6 :param timeout: \u8d85\u65f6\u65f6\u95f4 \u79d2 :return: Source code in mplapi\\plugin.py 174 175 176 177 178 179 180 def set_timeout ( self , timeout : int ): \"\"\" \u8bbe\u7f6e\u4efb\u52a1\u8d85\u65f6\u65f6\u95f4(\u5373\u4e00\u5b9a\u65f6\u95f4\u5185\u4efb\u52a1\u6ca1\u6709\u6267\u884c\uff0c\u4efb\u52a1\u5c06\u4f1a\u88ab\u91ca\u653e),\u4e0d\u8bbe\u7f6e\u4e3a\u6c38\u4e0d\u8d85\u65f6 :param timeout: \u8d85\u65f6\u65f6\u95f4 \u79d2 :return: \"\"\" pass PyPlugin Bases: PluginExceptionCatcher \u63d2\u4ef6\u7c7b\uff0cMPL\u901a\u8fc7\u5b9e\u4f8b\u5316\u8be5\u7c7b\u6765\u52a0\u8f7d\u63d2\u4ef6\uff0c\u4e14\u53ea\u4f1a\u5b9e\u4f8b\u5316\u4e00\u6b21 \u8be5\u7c7b\u4e3a\u62bd\u8c61\u7c7b\uff0c\u8bf7\u5b9e\u73b0\u88ab@abstractmethod\u6807\u8bb0\u7684\u62bd\u8c61\u65b9\u6cd5 plugin_name \u63d2\u4ef6\u540d(\u5c06\u7531MPL\u81ea\u52a8\u8bbe\u7f6e) Source code in mplapi\\plugin.py 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 class PyPlugin ( PluginExceptionCatcher , metaclass = ABCMeta ): \"\"\" \u63d2\u4ef6\u7c7b\uff0cMPL\u901a\u8fc7\u5b9e\u4f8b\u5316\u8be5\u7c7b\u6765\u52a0\u8f7d\u63d2\u4ef6\uff0c\u4e14\u53ea\u4f1a\u5b9e\u4f8b\u5316\u4e00\u6b21 \u8be5\u7c7b\u4e3a\u62bd\u8c61\u7c7b\uff0c\u8bf7\u5b9e\u73b0\u88ab@abstractmethod\u6807\u8bb0\u7684\u62bd\u8c61\u65b9\u6cd5 plugin_name \u63d2\u4ef6\u540d(\u5c06\u7531MPL\u81ea\u52a8\u8bbe\u7f6e) \"\"\" def handle_exception ( self , e : BaseException ): pass @abstractmethod @property def version ( self ) -> tuple [ int , int , int ]: \"\"\" \u63d2\u4ef6\u7684\u7248\u672c\u53f7\uff0c\u91c7\u7528x.y.z\u89c4\u8303 :return:(x,y,z) \"\"\" pass def get_plugin_name ( self ) -> str : \"\"\" \u83b7\u53d6\u63d2\u4ef6\u540d :return: \"\"\" pass @abstractmethod def on_create ( self ): \"\"\" \u63d2\u4ef6\u542f\u52a8\u65f6\u8c03\u7528\u8be5\u65b9\u6cd5 :return: \"\"\" pass @abstractmethod async def on_login ( self , bot : Bot ): \"\"\" bot\u767b\u5f55\u65f6\u8c03\u7528\u8be5\u65b9\u6cd5 :param bot: bot\u5bf9\u8c61 :return: \"\"\" pass @abstractmethod async def on_logout ( self , bot : Bot ): \"\"\" bot\u767b\u51fa\u65f6\u8c03\u7528\u8be5\u65b9\u6cd5 :param bot: bot\u5bf9\u8c61 :return: \"\"\" pass def get_logger ( self ) -> MPLLoggerHandler : \"\"\" \u83b7\u53d6\u65e5\u5fd7\u5bf9\u8c61 :return:\u65e5\u5fd7\u5bf9\u8c61 \"\"\" pass def get_database ( self , db_name = 'database' ) -> sqlite3 . Connection : \"\"\" \u83b7\u53d6\u6570\u636e\u5e93\u8fde\u63a5\u5bf9\u8c61 :param db_name: \u6570\u636e\u5e93\u540d\u5b57(\u65e0\u540e\u7f00) :return: sqlite3\u6570\u636e\u5e93\u8fde\u63a5\u5bf9\u8c61 \"\"\" pass def get_config ( self , conf_name = 'plugin' ) -> dict : \"\"\" \u83b7\u53d6\u914d\u7f6e\u6587\u4ef6 :param conf_name: \u914d\u7f6e\u6587\u4ef6\u540d :return: \u81ea\u5b9a\u4e49\u914d\u7f6e \"\"\" pass def set_config ( self , conf : dict , conf_name = 'plugin' ): \"\"\" \u8bbe\u7f6e\u914d\u7f6e\u6587\u4ef6 :param conf: \u81ea\u5b9a\u4e49\u914d\u7f6e :param conf_name: \u914d\u7f6e\u6587\u4ef6\u540d :return: \"\"\" pass def get_files_path ( self ) -> str : \"\"\" \u83b7\u53d6\u6587\u4ef6\u4fdd\u5b58\u76ee\u5f55(\u6700\u540e\u5e26\u5206\u9694\u7b26'/') :return: \u6587\u4ef6\u4fdd\u5b58\u76ee\u5f55 \"\"\" pass @abstractmethod async def get_group_msg ( self , bot : Bot , source : msg . Source , message : msg . MsgChain ): \"\"\" \u5904\u7406\u7fa4\u6d88\u606f :param bot: Bot\u5bf9\u8c61 :param source: \u4e00\u4e2a\u6709\u53d1\u9001\u8005\u4fe1\u606f\u7684\u96c6\u5408 :param message: \u6d88\u606f\u94fe :return: \"\"\" pass @abstractmethod async def get_friend_msg ( self , bot : Bot , source : msg . Source , message : msg . MsgChain ): \"\"\" \u5904\u7406\u597d\u53cb\u6d88\u606f :param bot: Bot\u5bf9\u8c61 :param source: \u4e00\u4e2a\u6709\u53d1\u9001\u8005\u4fe1\u606f\u7684\u96c6\u5408 :param message: \u6d88\u606f\u94fe :return: \"\"\" pass @abstractmethod async def get_admin_msg ( self , bot : Bot , source : msg . Source , message : msg . MsgChain ): \"\"\" \u5904\u7406\u63d2\u4ef6\u7ba1\u7406\u5458\u7684\u6d88\u606f :param bot: Bot\u5bf9\u8c61 :param source: \u4e00\u4e2a\u6709\u53d1\u9001\u8005\u4fe1\u606f\u7684\u96c6\u5408 :param message: \u6d88\u606f\u94fe :return: \"\"\" pass get_admin_msg ( bot , source , message ) abstractmethod async \u5904\u7406\u63d2\u4ef6\u7ba1\u7406\u5458\u7684\u6d88\u606f :param bot: Bot\u5bf9\u8c61 :param source: \u4e00\u4e2a\u6709\u53d1\u9001\u8005\u4fe1\u606f\u7684\u96c6\u5408 :param message: \u6d88\u606f\u94fe :return: Source code in mplapi\\plugin.py 149 150 151 152 153 154 155 156 157 158 @abstractmethod async def get_admin_msg ( self , bot : Bot , source : msg . Source , message : msg . MsgChain ): \"\"\" \u5904\u7406\u63d2\u4ef6\u7ba1\u7406\u5458\u7684\u6d88\u606f :param bot: Bot\u5bf9\u8c61 :param source: \u4e00\u4e2a\u6709\u53d1\u9001\u8005\u4fe1\u606f\u7684\u96c6\u5408 :param message: \u6d88\u606f\u94fe :return: \"\"\" pass get_config ( conf_name = 'plugin' ) \u83b7\u53d6\u914d\u7f6e\u6587\u4ef6 :param conf_name: \u914d\u7f6e\u6587\u4ef6\u540d :return: \u81ea\u5b9a\u4e49\u914d\u7f6e Source code in mplapi\\plugin.py 103 104 105 106 107 108 109 def get_config ( self , conf_name = 'plugin' ) -> dict : \"\"\" \u83b7\u53d6\u914d\u7f6e\u6587\u4ef6 :param conf_name: \u914d\u7f6e\u6587\u4ef6\u540d :return: \u81ea\u5b9a\u4e49\u914d\u7f6e \"\"\" pass get_database ( db_name = 'database' ) \u83b7\u53d6\u6570\u636e\u5e93\u8fde\u63a5\u5bf9\u8c61 :param db_name: \u6570\u636e\u5e93\u540d\u5b57(\u65e0\u540e\u7f00) :return: sqlite3\u6570\u636e\u5e93\u8fde\u63a5\u5bf9\u8c61 Source code in mplapi\\plugin.py 95 96 97 98 99 100 101 def get_database ( self , db_name = 'database' ) -> sqlite3 . Connection : \"\"\" \u83b7\u53d6\u6570\u636e\u5e93\u8fde\u63a5\u5bf9\u8c61 :param db_name: \u6570\u636e\u5e93\u540d\u5b57(\u65e0\u540e\u7f00) :return: sqlite3\u6570\u636e\u5e93\u8fde\u63a5\u5bf9\u8c61 \"\"\" pass get_files_path () \u83b7\u53d6\u6587\u4ef6\u4fdd\u5b58\u76ee\u5f55(\u6700\u540e\u5e26\u5206\u9694\u7b26'/') :return: \u6587\u4ef6\u4fdd\u5b58\u76ee\u5f55 Source code in mplapi\\plugin.py 120 121 122 123 124 125 def get_files_path ( self ) -> str : \"\"\" \u83b7\u53d6\u6587\u4ef6\u4fdd\u5b58\u76ee\u5f55(\u6700\u540e\u5e26\u5206\u9694\u7b26'/') :return: \u6587\u4ef6\u4fdd\u5b58\u76ee\u5f55 \"\"\" pass get_friend_msg ( bot , source , message ) abstractmethod async \u5904\u7406\u597d\u53cb\u6d88\u606f :param bot: Bot\u5bf9\u8c61 :param source: \u4e00\u4e2a\u6709\u53d1\u9001\u8005\u4fe1\u606f\u7684\u96c6\u5408 :param message: \u6d88\u606f\u94fe :return: Source code in mplapi\\plugin.py 138 139 140 141 142 143 144 145 146 147 @abstractmethod async def get_friend_msg ( self , bot : Bot , source : msg . Source , message : msg . MsgChain ): \"\"\" \u5904\u7406\u597d\u53cb\u6d88\u606f :param bot: Bot\u5bf9\u8c61 :param source: \u4e00\u4e2a\u6709\u53d1\u9001\u8005\u4fe1\u606f\u7684\u96c6\u5408 :param message: \u6d88\u606f\u94fe :return: \"\"\" pass get_group_msg ( bot , source , message ) abstractmethod async \u5904\u7406\u7fa4\u6d88\u606f :param bot: Bot\u5bf9\u8c61 :param source: \u4e00\u4e2a\u6709\u53d1\u9001\u8005\u4fe1\u606f\u7684\u96c6\u5408 :param message: \u6d88\u606f\u94fe :return: Source code in mplapi\\plugin.py 127 128 129 130 131 132 133 134 135 136 @abstractmethod async def get_group_msg ( self , bot : Bot , source : msg . Source , message : msg . MsgChain ): \"\"\" \u5904\u7406\u7fa4\u6d88\u606f :param bot: Bot\u5bf9\u8c61 :param source: \u4e00\u4e2a\u6709\u53d1\u9001\u8005\u4fe1\u606f\u7684\u96c6\u5408 :param message: \u6d88\u606f\u94fe :return: \"\"\" pass get_logger () \u83b7\u53d6\u65e5\u5fd7\u5bf9\u8c61 :return:\u65e5\u5fd7\u5bf9\u8c61 Source code in mplapi\\plugin.py 88 89 90 91 92 93 def get_logger ( self ) -> MPLLoggerHandler : \"\"\" \u83b7\u53d6\u65e5\u5fd7\u5bf9\u8c61 :return:\u65e5\u5fd7\u5bf9\u8c61 \"\"\" pass get_plugin_name () \u83b7\u53d6\u63d2\u4ef6\u540d :return: Source code in mplapi\\plugin.py 55 56 57 58 59 60 def get_plugin_name ( self ) -> str : \"\"\" \u83b7\u53d6\u63d2\u4ef6\u540d :return: \"\"\" pass on_create () abstractmethod \u63d2\u4ef6\u542f\u52a8\u65f6\u8c03\u7528\u8be5\u65b9\u6cd5 :return: Source code in mplapi\\plugin.py 62 63 64 65 66 67 68 @abstractmethod def on_create ( self ): \"\"\" \u63d2\u4ef6\u542f\u52a8\u65f6\u8c03\u7528\u8be5\u65b9\u6cd5 :return: \"\"\" pass on_login ( bot ) abstractmethod async bot\u767b\u5f55\u65f6\u8c03\u7528\u8be5\u65b9\u6cd5 :param bot: bot\u5bf9\u8c61 :return: Source code in mplapi\\plugin.py 70 71 72 73 74 75 76 77 @abstractmethod async def on_login ( self , bot : Bot ): \"\"\" bot\u767b\u5f55\u65f6\u8c03\u7528\u8be5\u65b9\u6cd5 :param bot: bot\u5bf9\u8c61 :return: \"\"\" pass on_logout ( bot ) abstractmethod async bot\u767b\u51fa\u65f6\u8c03\u7528\u8be5\u65b9\u6cd5 :param bot: bot\u5bf9\u8c61 :return: Source code in mplapi\\plugin.py 79 80 81 82 83 84 85 86 @abstractmethod async def on_logout ( self , bot : Bot ): \"\"\" bot\u767b\u51fa\u65f6\u8c03\u7528\u8be5\u65b9\u6cd5 :param bot: bot\u5bf9\u8c61 :return: \"\"\" pass set_config ( conf , conf_name = 'plugin' ) \u8bbe\u7f6e\u914d\u7f6e\u6587\u4ef6 :param conf: \u81ea\u5b9a\u4e49\u914d\u7f6e :param conf_name: \u914d\u7f6e\u6587\u4ef6\u540d :return: Source code in mplapi\\plugin.py 111 112 113 114 115 116 117 118 def set_config ( self , conf : dict , conf_name = 'plugin' ): \"\"\" \u8bbe\u7f6e\u914d\u7f6e\u6587\u4ef6 :param conf: \u81ea\u5b9a\u4e49\u914d\u7f6e :param conf_name: \u914d\u7f6e\u6587\u4ef6\u540d :return: \"\"\" pass version () abstractmethod property \u63d2\u4ef6\u7684\u7248\u672c\u53f7\uff0c\u91c7\u7528x.y.z\u89c4\u8303 :return:(x,y,z) Source code in mplapi\\plugin.py 46 47 48 49 50 51 52 53 @abstractmethod @property def version ( self ) -> tuple [ int , int , int ]: \"\"\" \u63d2\u4ef6\u7684\u7248\u672c\u53f7\uff0c\u91c7\u7528x.y.z\u89c4\u8303 :return:(x,y,z) \"\"\" pass catch_async_exception ( func ) MPL\u9ed8\u8ba4\u65e0\u89c6\u63d2\u4ef6\u4e2d\u5f02\u6b65\u65b9\u6cd5\u7684\u5f02\u5e38\uff0c\u82e5\u4f60\u5e0c\u671bMPL\u6355\u83b7\uff0c\u8bf7\u5728\u4efb\u610f\u5b9e\u73b0\u4e86PluginExceptionCatcher\u63a5\u53e3\u7684\u5f02\u6b65\u65b9\u6cd5\u4e2d\u6dfb\u52a0\u6b64\u88c5\u9970\u5668 :param func: \u4efb\u610f\u7ee7\u627f\u4e86PluginExceptionCatcher\u7c7b\u7684\u5f02\u6b65\u65b9\u6cd5 :return: Source code in mplapi\\plugin.py 10 11 12 13 14 15 16 17 def catch_async_exception ( func ): \"\"\" MPL\u9ed8\u8ba4\u65e0\u89c6\u63d2\u4ef6\u4e2d\u5f02\u6b65\u65b9\u6cd5\u7684\u5f02\u5e38\uff0c\u82e5\u4f60\u5e0c\u671bMPL\u6355\u83b7\uff0c\u8bf7\u5728\u4efb\u610f\u5b9e\u73b0\u4e86PluginExceptionCatcher\u63a5\u53e3\u7684\u5f02\u6b65\u65b9\u6cd5\u4e2d\u6dfb\u52a0\u6b64\u88c5\u9970\u5668 :param func: \u4efb\u610f\u7ee7\u627f\u4e86PluginExceptionCatcher\u7c7b\u7684\u5f02\u6b65\u65b9\u6cd5 :return: \"\"\" pass","title":"plugin"},{"location":"developer/moudle/plugin/#mplapi.plugin.FriendTask","text":"Bases: PluginTask \u63d2\u4ef6\u7684\u597d\u53cb\u4efb\u52a1\u7c7b \u8be5\u7c7b\u4e3a\u62bd\u8c61\u7c7b\uff0c\u8bf7\u5b9e\u73b0\u88ab@abstractmethod\u6807\u8bb0\u7684\u62bd\u8c61\u65b9\u6cd5 target \u4efb\u52a1\u76ee\u6807qq\u53f7 Source code in mplapi\\plugin.py 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 class FriendTask ( PluginTask , metaclass = ABCMeta ): \"\"\" \u63d2\u4ef6\u7684\u597d\u53cb\u4efb\u52a1\u7c7b \u8be5\u7c7b\u4e3a\u62bd\u8c61\u7c7b\uff0c\u8bf7\u5b9e\u73b0\u88ab@abstractmethod\u6807\u8bb0\u7684\u62bd\u8c61\u65b9\u6cd5 target \u4efb\u52a1\u76ee\u6807qq\u53f7 \"\"\" def __init__ ( self , target , plugin : PyPlugin ): \"\"\" :param target: \u9700\u8981\u6267\u884c\u4efb\u52a1\u7684QQ\u53f7 :param plugin: PyPlugin\u5bf9\u8c61 \"\"\" super () . __init__ ( plugin ) self . target = target def is_task_target ( self , group , target ) -> bool : pass","title":"FriendTask"},{"location":"developer/moudle/plugin/#mplapi.plugin.FriendTask.__init__","text":":param target: \u9700\u8981\u6267\u884c\u4efb\u52a1\u7684QQ\u53f7 :param plugin: PyPlugin\u5bf9\u8c61 Source code in mplapi\\plugin.py 243 244 245 246 247 248 249 250 def __init__ ( self , target , plugin : PyPlugin ): \"\"\" :param target: \u9700\u8981\u6267\u884c\u4efb\u52a1\u7684QQ\u53f7 :param plugin: PyPlugin\u5bf9\u8c61 \"\"\" super () . __init__ ( plugin ) self . target = target","title":"__init__()"},{"location":"developer/moudle/plugin/#mplapi.plugin.GroupTask","text":"Bases: PluginTask \u63d2\u4ef6\u7684\u7fa4\u4efb\u52a1\u7c7b \u8be5\u7c7b\u4e3a\u62bd\u8c61\u7c7b\uff0c\u8bf7\u5b9e\u73b0\u88ab@abstractmethod\u6807\u8bb0\u7684\u62bd\u8c61\u65b9\u6cd5 group \u4efb\u52a1\u76ee\u6807\u7fa4\u53f7 target \u4efb\u52a1\u76ee\u6807qq\u53f7 Source code in mplapi\\plugin.py 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 class GroupTask ( PluginTask , metaclass = ABCMeta ): \"\"\" \u63d2\u4ef6\u7684\u7fa4\u4efb\u52a1\u7c7b \u8be5\u7c7b\u4e3a\u62bd\u8c61\u7c7b\uff0c\u8bf7\u5b9e\u73b0\u88ab@abstractmethod\u6807\u8bb0\u7684\u62bd\u8c61\u65b9\u6cd5 group \u4efb\u52a1\u76ee\u6807\u7fa4\u53f7 target \u4efb\u52a1\u76ee\u6807qq\u53f7 \"\"\" def __init__ ( self , group , plugin : PyPlugin , target = None ): \"\"\" :param group: \u9700\u8981\u6267\u884c\u4efb\u52a1\u7684\u7fa4\u53f7 :param plugin: PyPlugin\u5bf9\u8c61 :param target: \u9700\u8981\u6267\u884c\u4efb\u52a1\u7684QQ\u53f7\uff0c\u4e0d\u4f20\u5165\u6216\u4e3aNone\u65f6\u5c06\u5224\u5b9a\u4e3a\u4efb\u610f\u7fa4\u53cb \"\"\" super () . __init__ ( plugin ) self . group = group self . target = target def is_task_target ( self , group , target ) -> bool : pass","title":"GroupTask"},{"location":"developer/moudle/plugin/#mplapi.plugin.GroupTask.__init__","text":":param group: \u9700\u8981\u6267\u884c\u4efb\u52a1\u7684\u7fa4\u53f7 :param plugin: PyPlugin\u5bf9\u8c61 :param target: \u9700\u8981\u6267\u884c\u4efb\u52a1\u7684QQ\u53f7\uff0c\u4e0d\u4f20\u5165\u6216\u4e3aNone\u65f6\u5c06\u5224\u5b9a\u4e3a\u4efb\u610f\u7fa4\u53cb Source code in mplapi\\plugin.py 221 222 223 224 225 226 227 228 229 230 def __init__ ( self , group , plugin : PyPlugin , target = None ): \"\"\" :param group: \u9700\u8981\u6267\u884c\u4efb\u52a1\u7684\u7fa4\u53f7 :param plugin: PyPlugin\u5bf9\u8c61 :param target: \u9700\u8981\u6267\u884c\u4efb\u52a1\u7684QQ\u53f7\uff0c\u4e0d\u4f20\u5165\u6216\u4e3aNone\u65f6\u5c06\u5224\u5b9a\u4e3a\u4efb\u610f\u7fa4\u53cb \"\"\" super () . __init__ ( plugin ) self . group = group self . target = target","title":"__init__()"},{"location":"developer/moudle/plugin/#mplapi.plugin.PluginExceptionCatcher","text":"\u5b9e\u73b0\u8be5\u63a5\u53e3\uff0c\u4f7f\u5f97@catch_async_exception\u88c5\u9970\u5668\u53ef\u4ee5\u6355\u83b7\u7c7b\u4e2d\u5f02\u6b65\u65b9\u6cd5\u629b\u51fa\u7684\u5f02\u5e38 \u8be5\u7c7b\u4e3a\u62bd\u8c61\u7c7b\uff0c\u8bf7\u5b9e\u73b0\u88ab@abstractmethod\u6807\u8bb0\u7684\u62bd\u8c61\u65b9\u6cd5 Source code in mplapi\\plugin.py 20 21 22 23 24 25 26 27 28 29 30 31 32 33 class PluginExceptionCatcher ( metaclass = ABCMeta ): \"\"\" \u5b9e\u73b0\u8be5\u63a5\u53e3\uff0c\u4f7f\u5f97@catch_async_exception\u88c5\u9970\u5668\u53ef\u4ee5\u6355\u83b7\u7c7b\u4e2d\u5f02\u6b65\u65b9\u6cd5\u629b\u51fa\u7684\u5f02\u5e38 \u8be5\u7c7b\u4e3a\u62bd\u8c61\u7c7b\uff0c\u8bf7\u5b9e\u73b0\u88ab@abstractmethod\u6807\u8bb0\u7684\u62bd\u8c61\u65b9\u6cd5 \"\"\" @abstractmethod def handle_exception ( self , e : BaseException ): \"\"\" \u5904\u7406\u5f02\u5e38 :param e: \u6355\u83b7\u7684\u5f02\u5e38 :return: \"\"\" pass","title":"PluginExceptionCatcher"},{"location":"developer/moudle/plugin/#mplapi.plugin.PluginExceptionCatcher.handle_exception","text":"\u5904\u7406\u5f02\u5e38 :param e: \u6355\u83b7\u7684\u5f02\u5e38 :return: Source code in mplapi\\plugin.py 26 27 28 29 30 31 32 33 @abstractmethod def handle_exception ( self , e : BaseException ): \"\"\" \u5904\u7406\u5f02\u5e38 :param e: \u6355\u83b7\u7684\u5f02\u5e38 :return: \"\"\" pass","title":"handle_exception()"},{"location":"developer/moudle/plugin/#mplapi.plugin.PluginTask","text":"Bases: PluginExceptionCatcher \u63d2\u4ef6\u4efb\u52a1\u7c7b\uff0c\u901a\u8fc7\u5b9e\u4f8b\u5316\u8be5\u7c7b\u6765\u521b\u5efa\u4e00\u4e2a\u63d2\u4ef6\u4efb\u52a1\u6765\u63d0\u4ea4\u81f3Bot \u8be5\u7c7b\u4e3a\u62bd\u8c61\u7c7b\uff0c\u8bf7\u5b9e\u73b0\u88ab@abstractmethod\u6807\u8bb0\u7684\u62bd\u8c61\u65b9\u6cd5 plugin_instance PyPlugin\u5bf9\u8c61 Source code in mplapi\\plugin.py 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 class PluginTask ( PluginExceptionCatcher ): \"\"\" \u63d2\u4ef6\u4efb\u52a1\u7c7b\uff0c\u901a\u8fc7\u5b9e\u4f8b\u5316\u8be5\u7c7b\u6765\u521b\u5efa\u4e00\u4e2a\u63d2\u4ef6\u4efb\u52a1\u6765\u63d0\u4ea4\u81f3Bot \u8be5\u7c7b\u4e3a\u62bd\u8c61\u7c7b\uff0c\u8bf7\u5b9e\u73b0\u88ab@abstractmethod\u6807\u8bb0\u7684\u62bd\u8c61\u65b9\u6cd5 plugin_instance PyPlugin\u5bf9\u8c61 \"\"\" def handle_exception ( self , e : BaseException ): pass def __init__ ( self , plugin : PyPlugin ): self . plugin_instance = plugin def set_timeout ( self , timeout : int ): \"\"\" \u8bbe\u7f6e\u4efb\u52a1\u8d85\u65f6\u65f6\u95f4(\u5373\u4e00\u5b9a\u65f6\u95f4\u5185\u4efb\u52a1\u6ca1\u6709\u6267\u884c\uff0c\u4efb\u52a1\u5c06\u4f1a\u88ab\u91ca\u653e),\u4e0d\u8bbe\u7f6e\u4e3a\u6c38\u4e0d\u8d85\u65f6 :param timeout: \u8d85\u65f6\u65f6\u95f4 \u79d2 :return: \"\"\" pass @abstractmethod def is_task_target ( self , group , target ) -> bool : \"\"\" \u4efb\u52a1\u662f\u5426\u6267\u884c\u7684\u5224\u522b\u89c4\u5219 :param group: \u7fa4\u53f7(\u82e5\u4e0d\u662f\u7fa4\u804a\uff0c\u6b64\u9879\u4f20\u5165\u7684\u503c\u4e3aNone) :param target: \u53d1\u9001\u8005QQ\u53f7 :return: \u5224\u522b\u7ed3\u679c \"\"\" pass @abstractmethod async def execute_task ( self , bot : Bot , source : msg . Source , message : msg . MsgChain ): \"\"\" \u6267\u884c\u7684\u4efb\u52a1\u4f53\uff0c\u5728\u5224\u522b\u7ed3\u679c\u4e3aTrue\u65f6\u8c03\u7528\u8be5\u65b9\u6cd5 :param bot: Bot\u5bf9\u8c61 :param source: \u4e00\u4e2a\u6709\u53d1\u9001\u8005\u4fe1\u606f\u7684\u96c6\u5408 :param message: \u6d88\u606f\u94fe :return: \"\"\" pass @abstractmethod async def on_timeout ( self , bot : Bot ): \"\"\" \u4efb\u52a1\u8d85\u65f6\u88ab\u91ca\u653e\u65f6\u8c03\u7528\u8be5\u65b9\u6cd5 :param bot: Bot\u5bf9\u8c61 :return: \"\"\" pass","title":"PluginTask"},{"location":"developer/moudle/plugin/#mplapi.plugin.PluginTask.execute_task","text":"\u6267\u884c\u7684\u4efb\u52a1\u4f53\uff0c\u5728\u5224\u522b\u7ed3\u679c\u4e3aTrue\u65f6\u8c03\u7528\u8be5\u65b9\u6cd5 :param bot: Bot\u5bf9\u8c61 :param source: \u4e00\u4e2a\u6709\u53d1\u9001\u8005\u4fe1\u606f\u7684\u96c6\u5408 :param message: \u6d88\u606f\u94fe :return: Source code in mplapi\\plugin.py 192 193 194 195 196 197 198 199 200 201 @abstractmethod async def execute_task ( self , bot : Bot , source : msg . Source , message : msg . MsgChain ): \"\"\" \u6267\u884c\u7684\u4efb\u52a1\u4f53\uff0c\u5728\u5224\u522b\u7ed3\u679c\u4e3aTrue\u65f6\u8c03\u7528\u8be5\u65b9\u6cd5 :param bot: Bot\u5bf9\u8c61 :param source: \u4e00\u4e2a\u6709\u53d1\u9001\u8005\u4fe1\u606f\u7684\u96c6\u5408 :param message: \u6d88\u606f\u94fe :return: \"\"\" pass","title":"execute_task()"},{"location":"developer/moudle/plugin/#mplapi.plugin.PluginTask.is_task_target","text":"\u4efb\u52a1\u662f\u5426\u6267\u884c\u7684\u5224\u522b\u89c4\u5219 :param group: \u7fa4\u53f7(\u82e5\u4e0d\u662f\u7fa4\u804a\uff0c\u6b64\u9879\u4f20\u5165\u7684\u503c\u4e3aNone) :param target: \u53d1\u9001\u8005QQ\u53f7 :return: \u5224\u522b\u7ed3\u679c Source code in mplapi\\plugin.py 182 183 184 185 186 187 188 189 190 @abstractmethod def is_task_target ( self , group , target ) -> bool : \"\"\" \u4efb\u52a1\u662f\u5426\u6267\u884c\u7684\u5224\u522b\u89c4\u5219 :param group: \u7fa4\u53f7(\u82e5\u4e0d\u662f\u7fa4\u804a\uff0c\u6b64\u9879\u4f20\u5165\u7684\u503c\u4e3aNone) :param target: \u53d1\u9001\u8005QQ\u53f7 :return: \u5224\u522b\u7ed3\u679c \"\"\" pass","title":"is_task_target()"},{"location":"developer/moudle/plugin/#mplapi.plugin.PluginTask.on_timeout","text":"\u4efb\u52a1\u8d85\u65f6\u88ab\u91ca\u653e\u65f6\u8c03\u7528\u8be5\u65b9\u6cd5 :param bot: Bot\u5bf9\u8c61 :return: Source code in mplapi\\plugin.py 203 204 205 206 207 208 209 210 @abstractmethod async def on_timeout ( self , bot : Bot ): \"\"\" \u4efb\u52a1\u8d85\u65f6\u88ab\u91ca\u653e\u65f6\u8c03\u7528\u8be5\u65b9\u6cd5 :param bot: Bot\u5bf9\u8c61 :return: \"\"\" pass","title":"on_timeout()"},{"location":"developer/moudle/plugin/#mplapi.plugin.PluginTask.set_timeout","text":"\u8bbe\u7f6e\u4efb\u52a1\u8d85\u65f6\u65f6\u95f4(\u5373\u4e00\u5b9a\u65f6\u95f4\u5185\u4efb\u52a1\u6ca1\u6709\u6267\u884c\uff0c\u4efb\u52a1\u5c06\u4f1a\u88ab\u91ca\u653e),\u4e0d\u8bbe\u7f6e\u4e3a\u6c38\u4e0d\u8d85\u65f6 :param timeout: \u8d85\u65f6\u65f6\u95f4 \u79d2 :return: Source code in mplapi\\plugin.py 174 175 176 177 178 179 180 def set_timeout ( self , timeout : int ): \"\"\" \u8bbe\u7f6e\u4efb\u52a1\u8d85\u65f6\u65f6\u95f4(\u5373\u4e00\u5b9a\u65f6\u95f4\u5185\u4efb\u52a1\u6ca1\u6709\u6267\u884c\uff0c\u4efb\u52a1\u5c06\u4f1a\u88ab\u91ca\u653e),\u4e0d\u8bbe\u7f6e\u4e3a\u6c38\u4e0d\u8d85\u65f6 :param timeout: \u8d85\u65f6\u65f6\u95f4 \u79d2 :return: \"\"\" pass","title":"set_timeout()"},{"location":"developer/moudle/plugin/#mplapi.plugin.PyPlugin","text":"Bases: PluginExceptionCatcher \u63d2\u4ef6\u7c7b\uff0cMPL\u901a\u8fc7\u5b9e\u4f8b\u5316\u8be5\u7c7b\u6765\u52a0\u8f7d\u63d2\u4ef6\uff0c\u4e14\u53ea\u4f1a\u5b9e\u4f8b\u5316\u4e00\u6b21 \u8be5\u7c7b\u4e3a\u62bd\u8c61\u7c7b\uff0c\u8bf7\u5b9e\u73b0\u88ab@abstractmethod\u6807\u8bb0\u7684\u62bd\u8c61\u65b9\u6cd5 plugin_name \u63d2\u4ef6\u540d(\u5c06\u7531MPL\u81ea\u52a8\u8bbe\u7f6e) Source code in mplapi\\plugin.py 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 class PyPlugin ( PluginExceptionCatcher , metaclass = ABCMeta ): \"\"\" \u63d2\u4ef6\u7c7b\uff0cMPL\u901a\u8fc7\u5b9e\u4f8b\u5316\u8be5\u7c7b\u6765\u52a0\u8f7d\u63d2\u4ef6\uff0c\u4e14\u53ea\u4f1a\u5b9e\u4f8b\u5316\u4e00\u6b21 \u8be5\u7c7b\u4e3a\u62bd\u8c61\u7c7b\uff0c\u8bf7\u5b9e\u73b0\u88ab@abstractmethod\u6807\u8bb0\u7684\u62bd\u8c61\u65b9\u6cd5 plugin_name \u63d2\u4ef6\u540d(\u5c06\u7531MPL\u81ea\u52a8\u8bbe\u7f6e) \"\"\" def handle_exception ( self , e : BaseException ): pass @abstractmethod @property def version ( self ) -> tuple [ int , int , int ]: \"\"\" \u63d2\u4ef6\u7684\u7248\u672c\u53f7\uff0c\u91c7\u7528x.y.z\u89c4\u8303 :return:(x,y,z) \"\"\" pass def get_plugin_name ( self ) -> str : \"\"\" \u83b7\u53d6\u63d2\u4ef6\u540d :return: \"\"\" pass @abstractmethod def on_create ( self ): \"\"\" \u63d2\u4ef6\u542f\u52a8\u65f6\u8c03\u7528\u8be5\u65b9\u6cd5 :return: \"\"\" pass @abstractmethod async def on_login ( self , bot : Bot ): \"\"\" bot\u767b\u5f55\u65f6\u8c03\u7528\u8be5\u65b9\u6cd5 :param bot: bot\u5bf9\u8c61 :return: \"\"\" pass @abstractmethod async def on_logout ( self , bot : Bot ): \"\"\" bot\u767b\u51fa\u65f6\u8c03\u7528\u8be5\u65b9\u6cd5 :param bot: bot\u5bf9\u8c61 :return: \"\"\" pass def get_logger ( self ) -> MPLLoggerHandler : \"\"\" \u83b7\u53d6\u65e5\u5fd7\u5bf9\u8c61 :return:\u65e5\u5fd7\u5bf9\u8c61 \"\"\" pass def get_database ( self , db_name = 'database' ) -> sqlite3 . Connection : \"\"\" \u83b7\u53d6\u6570\u636e\u5e93\u8fde\u63a5\u5bf9\u8c61 :param db_name: \u6570\u636e\u5e93\u540d\u5b57(\u65e0\u540e\u7f00) :return: sqlite3\u6570\u636e\u5e93\u8fde\u63a5\u5bf9\u8c61 \"\"\" pass def get_config ( self , conf_name = 'plugin' ) -> dict : \"\"\" \u83b7\u53d6\u914d\u7f6e\u6587\u4ef6 :param conf_name: \u914d\u7f6e\u6587\u4ef6\u540d :return: \u81ea\u5b9a\u4e49\u914d\u7f6e \"\"\" pass def set_config ( self , conf : dict , conf_name = 'plugin' ): \"\"\" \u8bbe\u7f6e\u914d\u7f6e\u6587\u4ef6 :param conf: \u81ea\u5b9a\u4e49\u914d\u7f6e :param conf_name: \u914d\u7f6e\u6587\u4ef6\u540d :return: \"\"\" pass def get_files_path ( self ) -> str : \"\"\" \u83b7\u53d6\u6587\u4ef6\u4fdd\u5b58\u76ee\u5f55(\u6700\u540e\u5e26\u5206\u9694\u7b26'/') :return: \u6587\u4ef6\u4fdd\u5b58\u76ee\u5f55 \"\"\" pass @abstractmethod async def get_group_msg ( self , bot : Bot , source : msg . Source , message : msg . MsgChain ): \"\"\" \u5904\u7406\u7fa4\u6d88\u606f :param bot: Bot\u5bf9\u8c61 :param source: \u4e00\u4e2a\u6709\u53d1\u9001\u8005\u4fe1\u606f\u7684\u96c6\u5408 :param message: \u6d88\u606f\u94fe :return: \"\"\" pass @abstractmethod async def get_friend_msg ( self , bot : Bot , source : msg . Source , message : msg . MsgChain ): \"\"\" \u5904\u7406\u597d\u53cb\u6d88\u606f :param bot: Bot\u5bf9\u8c61 :param source: \u4e00\u4e2a\u6709\u53d1\u9001\u8005\u4fe1\u606f\u7684\u96c6\u5408 :param message: \u6d88\u606f\u94fe :return: \"\"\" pass @abstractmethod async def get_admin_msg ( self , bot : Bot , source : msg . Source , message : msg . MsgChain ): \"\"\" \u5904\u7406\u63d2\u4ef6\u7ba1\u7406\u5458\u7684\u6d88\u606f :param bot: Bot\u5bf9\u8c61 :param source: \u4e00\u4e2a\u6709\u53d1\u9001\u8005\u4fe1\u606f\u7684\u96c6\u5408 :param message: \u6d88\u606f\u94fe :return: \"\"\" pass","title":"PyPlugin"},{"location":"developer/moudle/plugin/#mplapi.plugin.PyPlugin.get_admin_msg","text":"\u5904\u7406\u63d2\u4ef6\u7ba1\u7406\u5458\u7684\u6d88\u606f :param bot: Bot\u5bf9\u8c61 :param source: \u4e00\u4e2a\u6709\u53d1\u9001\u8005\u4fe1\u606f\u7684\u96c6\u5408 :param message: \u6d88\u606f\u94fe :return: Source code in mplapi\\plugin.py 149 150 151 152 153 154 155 156 157 158 @abstractmethod async def get_admin_msg ( self , bot : Bot , source : msg . Source , message : msg . MsgChain ): \"\"\" \u5904\u7406\u63d2\u4ef6\u7ba1\u7406\u5458\u7684\u6d88\u606f :param bot: Bot\u5bf9\u8c61 :param source: \u4e00\u4e2a\u6709\u53d1\u9001\u8005\u4fe1\u606f\u7684\u96c6\u5408 :param message: \u6d88\u606f\u94fe :return: \"\"\" pass","title":"get_admin_msg()"},{"location":"developer/moudle/plugin/#mplapi.plugin.PyPlugin.get_config","text":"\u83b7\u53d6\u914d\u7f6e\u6587\u4ef6 :param conf_name: \u914d\u7f6e\u6587\u4ef6\u540d :return: \u81ea\u5b9a\u4e49\u914d\u7f6e Source code in mplapi\\plugin.py 103 104 105 106 107 108 109 def get_config ( self , conf_name = 'plugin' ) -> dict : \"\"\" \u83b7\u53d6\u914d\u7f6e\u6587\u4ef6 :param conf_name: \u914d\u7f6e\u6587\u4ef6\u540d :return: \u81ea\u5b9a\u4e49\u914d\u7f6e \"\"\" pass","title":"get_config()"},{"location":"developer/moudle/plugin/#mplapi.plugin.PyPlugin.get_database","text":"\u83b7\u53d6\u6570\u636e\u5e93\u8fde\u63a5\u5bf9\u8c61 :param db_name: \u6570\u636e\u5e93\u540d\u5b57(\u65e0\u540e\u7f00) :return: sqlite3\u6570\u636e\u5e93\u8fde\u63a5\u5bf9\u8c61 Source code in mplapi\\plugin.py 95 96 97 98 99 100 101 def get_database ( self , db_name = 'database' ) -> sqlite3 . Connection : \"\"\" \u83b7\u53d6\u6570\u636e\u5e93\u8fde\u63a5\u5bf9\u8c61 :param db_name: \u6570\u636e\u5e93\u540d\u5b57(\u65e0\u540e\u7f00) :return: sqlite3\u6570\u636e\u5e93\u8fde\u63a5\u5bf9\u8c61 \"\"\" pass","title":"get_database()"},{"location":"developer/moudle/plugin/#mplapi.plugin.PyPlugin.get_files_path","text":"\u83b7\u53d6\u6587\u4ef6\u4fdd\u5b58\u76ee\u5f55(\u6700\u540e\u5e26\u5206\u9694\u7b26'/') :return: \u6587\u4ef6\u4fdd\u5b58\u76ee\u5f55 Source code in mplapi\\plugin.py 120 121 122 123 124 125 def get_files_path ( self ) -> str : \"\"\" \u83b7\u53d6\u6587\u4ef6\u4fdd\u5b58\u76ee\u5f55(\u6700\u540e\u5e26\u5206\u9694\u7b26'/') :return: \u6587\u4ef6\u4fdd\u5b58\u76ee\u5f55 \"\"\" pass","title":"get_files_path()"},{"location":"developer/moudle/plugin/#mplapi.plugin.PyPlugin.get_friend_msg","text":"\u5904\u7406\u597d\u53cb\u6d88\u606f :param bot: Bot\u5bf9\u8c61 :param source: \u4e00\u4e2a\u6709\u53d1\u9001\u8005\u4fe1\u606f\u7684\u96c6\u5408 :param message: \u6d88\u606f\u94fe :return: Source code in mplapi\\plugin.py 138 139 140 141 142 143 144 145 146 147 @abstractmethod async def get_friend_msg ( self , bot : Bot , source : msg . Source , message : msg . MsgChain ): \"\"\" \u5904\u7406\u597d\u53cb\u6d88\u606f :param bot: Bot\u5bf9\u8c61 :param source: \u4e00\u4e2a\u6709\u53d1\u9001\u8005\u4fe1\u606f\u7684\u96c6\u5408 :param message: \u6d88\u606f\u94fe :return: \"\"\" pass","title":"get_friend_msg()"},{"location":"developer/moudle/plugin/#mplapi.plugin.PyPlugin.get_group_msg","text":"\u5904\u7406\u7fa4\u6d88\u606f :param bot: Bot\u5bf9\u8c61 :param source: \u4e00\u4e2a\u6709\u53d1\u9001\u8005\u4fe1\u606f\u7684\u96c6\u5408 :param message: \u6d88\u606f\u94fe :return: Source code in mplapi\\plugin.py 127 128 129 130 131 132 133 134 135 136 @abstractmethod async def get_group_msg ( self , bot : Bot , source : msg . Source , message : msg . MsgChain ): \"\"\" \u5904\u7406\u7fa4\u6d88\u606f :param bot: Bot\u5bf9\u8c61 :param source: \u4e00\u4e2a\u6709\u53d1\u9001\u8005\u4fe1\u606f\u7684\u96c6\u5408 :param message: \u6d88\u606f\u94fe :return: \"\"\" pass","title":"get_group_msg()"},{"location":"developer/moudle/plugin/#mplapi.plugin.PyPlugin.get_logger","text":"\u83b7\u53d6\u65e5\u5fd7\u5bf9\u8c61 :return:\u65e5\u5fd7\u5bf9\u8c61 Source code in mplapi\\plugin.py 88 89 90 91 92 93 def get_logger ( self ) -> MPLLoggerHandler : \"\"\" \u83b7\u53d6\u65e5\u5fd7\u5bf9\u8c61 :return:\u65e5\u5fd7\u5bf9\u8c61 \"\"\" pass","title":"get_logger()"},{"location":"developer/moudle/plugin/#mplapi.plugin.PyPlugin.get_plugin_name","text":"\u83b7\u53d6\u63d2\u4ef6\u540d :return: Source code in mplapi\\plugin.py 55 56 57 58 59 60 def get_plugin_name ( self ) -> str : \"\"\" \u83b7\u53d6\u63d2\u4ef6\u540d :return: \"\"\" pass","title":"get_plugin_name()"},{"location":"developer/moudle/plugin/#mplapi.plugin.PyPlugin.on_create","text":"\u63d2\u4ef6\u542f\u52a8\u65f6\u8c03\u7528\u8be5\u65b9\u6cd5 :return: Source code in mplapi\\plugin.py 62 63 64 65 66 67 68 @abstractmethod def on_create ( self ): \"\"\" \u63d2\u4ef6\u542f\u52a8\u65f6\u8c03\u7528\u8be5\u65b9\u6cd5 :return: \"\"\" pass","title":"on_create()"},{"location":"developer/moudle/plugin/#mplapi.plugin.PyPlugin.on_login","text":"bot\u767b\u5f55\u65f6\u8c03\u7528\u8be5\u65b9\u6cd5 :param bot: bot\u5bf9\u8c61 :return: Source code in mplapi\\plugin.py 70 71 72 73 74 75 76 77 @abstractmethod async def on_login ( self , bot : Bot ): \"\"\" bot\u767b\u5f55\u65f6\u8c03\u7528\u8be5\u65b9\u6cd5 :param bot: bot\u5bf9\u8c61 :return: \"\"\" pass","title":"on_login()"},{"location":"developer/moudle/plugin/#mplapi.plugin.PyPlugin.on_logout","text":"bot\u767b\u51fa\u65f6\u8c03\u7528\u8be5\u65b9\u6cd5 :param bot: bot\u5bf9\u8c61 :return: Source code in mplapi\\plugin.py 79 80 81 82 83 84 85 86 @abstractmethod async def on_logout ( self , bot : Bot ): \"\"\" bot\u767b\u51fa\u65f6\u8c03\u7528\u8be5\u65b9\u6cd5 :param bot: bot\u5bf9\u8c61 :return: \"\"\" pass","title":"on_logout()"},{"location":"developer/moudle/plugin/#mplapi.plugin.PyPlugin.set_config","text":"\u8bbe\u7f6e\u914d\u7f6e\u6587\u4ef6 :param conf: \u81ea\u5b9a\u4e49\u914d\u7f6e :param conf_name: \u914d\u7f6e\u6587\u4ef6\u540d :return: Source code in mplapi\\plugin.py 111 112 113 114 115 116 117 118 def set_config ( self , conf : dict , conf_name = 'plugin' ): \"\"\" \u8bbe\u7f6e\u914d\u7f6e\u6587\u4ef6 :param conf: \u81ea\u5b9a\u4e49\u914d\u7f6e :param conf_name: \u914d\u7f6e\u6587\u4ef6\u540d :return: \"\"\" pass","title":"set_config()"},{"location":"developer/moudle/plugin/#mplapi.plugin.PyPlugin.version","text":"\u63d2\u4ef6\u7684\u7248\u672c\u53f7\uff0c\u91c7\u7528x.y.z\u89c4\u8303 :return:(x,y,z) Source code in mplapi\\plugin.py 46 47 48 49 50 51 52 53 @abstractmethod @property def version ( self ) -> tuple [ int , int , int ]: \"\"\" \u63d2\u4ef6\u7684\u7248\u672c\u53f7\uff0c\u91c7\u7528x.y.z\u89c4\u8303 :return:(x,y,z) \"\"\" pass","title":"version()"},{"location":"developer/moudle/plugin/#mplapi.plugin.catch_async_exception","text":"MPL\u9ed8\u8ba4\u65e0\u89c6\u63d2\u4ef6\u4e2d\u5f02\u6b65\u65b9\u6cd5\u7684\u5f02\u5e38\uff0c\u82e5\u4f60\u5e0c\u671bMPL\u6355\u83b7\uff0c\u8bf7\u5728\u4efb\u610f\u5b9e\u73b0\u4e86PluginExceptionCatcher\u63a5\u53e3\u7684\u5f02\u6b65\u65b9\u6cd5\u4e2d\u6dfb\u52a0\u6b64\u88c5\u9970\u5668 :param func: \u4efb\u610f\u7ee7\u627f\u4e86PluginExceptionCatcher\u7c7b\u7684\u5f02\u6b65\u65b9\u6cd5 :return: Source code in mplapi\\plugin.py 10 11 12 13 14 15 16 17 def catch_async_exception ( func ): \"\"\" MPL\u9ed8\u8ba4\u65e0\u89c6\u63d2\u4ef6\u4e2d\u5f02\u6b65\u65b9\u6cd5\u7684\u5f02\u5e38\uff0c\u82e5\u4f60\u5e0c\u671bMPL\u6355\u83b7\uff0c\u8bf7\u5728\u4efb\u610f\u5b9e\u73b0\u4e86PluginExceptionCatcher\u63a5\u53e3\u7684\u5f02\u6b65\u65b9\u6cd5\u4e2d\u6dfb\u52a0\u6b64\u88c5\u9970\u5668 :param func: \u4efb\u610f\u7ee7\u627f\u4e86PluginExceptionCatcher\u7c7b\u7684\u5f02\u6b65\u65b9\u6cd5 :return: \"\"\" pass","title":"catch_async_exception()"},{"location":"user/environment/","text":"MPL \u9700\u8981\u4ee5\u4e0b\u73af\u5883\u652f\u6301\u8fd0\u884c Mirai Console Loader \u4ee5\u4e0b\u7b80\u79f0 mcl mirai-api-http \u4ee5\u4e0b\u7b80\u79f0 mah \u914d\u7f6e mirai-api-http \u5728\u5b89\u88c5\u597dmah\u63d2\u4ef6\u540e\uff0c\u542f\u52a8mcl\uff0c\u627e\u5230mah\u7684\u914d\u7f6e\u6587\u4ef6 setting.yml mah\u7684\u5b98\u65b9\u4ed3\u5e93readme\u4e2d\u6709 setting.yml \u7684\u914d\u7f6e\u6a21\u677f \u5fc5\u987b \u7684\u914d\u7f6e\u9879\u6709\uff1a adapters: - http enableVerify: true singleMode: false \u82e5\u65e0\u81ea\u5b9a\u4e49\u9700\u6c42\uff0c\u4e5f\u53ef\u4ee5\u590d\u5236\u7c98\u8d34\u4ee5\u4e0b\u6a21\u677f adapters: - http enableVerify: true verifyKey: abcd1234efgh # \u8be5\u503c\u4e3a\u9a8c\u8bc1\u7528\u5bc6\u94a5\uff0c\u8bf7\u81ea\u884c\u4fee\u6539 debug: false singleMode: false cacheSize: 4096 adapterSettings: http: host: 0.0.0.0 port: 8081 # \u9047\u7aef\u53e3\u53f7\u5360\u7528\u65f6\uff0c\u8bf7\u4fee\u6539\u8be5\u503c cors: [\"*\"] unreadQueueMaxSize: 100 \u51fa\u73b0\u5982\u4e0b\u5b57\u6837\u65f6\uff0c\u8868\u660emah\u542f\u52a8\u6210\u529f \u82e5\u51fa\u73b0\u5982\u4e0b\u5b57\u6837\uff0c\u8868\u660emah\u7684\u7aef\u53e3\u88ab\u5360\u7528\uff0c\u8bf7\u4fee\u6539\u7aef\u53e3\u53f7\u540e\u91cd\u65b0\u5c1d\u8bd5 \u5b89\u88c5Python \u4ee5windows\u7cfb\u7edf\u4e3a\u4f8b\uff0clinux\u7cfb\u7edf\u57fa\u672c\u81ea\u5e26python \u524d\u5f80 python\u5b98\u7f51 \u4e0b\u8f7dpython\u5e76\u5b89\u88c5 \uff08\u7248\u672c\u22653.7\uff09 [x] Add Python xx to PATH \ud83d\udc48 \u5207\u8bb0 \u5b89\u88c5\u65f6\u6b64\u9879\u8981\u9009\u4e2d\uff08\u9519\u9009\u8bf7\u81ea\u884c\u67e5\u627e\u5c06Python\u6dfb\u52a0\u81f3\u73af\u5883\u53d8\u91cf\u7684\u65b9\u6cd5\uff09 \u6253\u5f00CMD\uff0c\u8f93\u5165 python --version >\u51fa\u73b0\u5982\u4e0b\u7ed3\u679c\u65f6\u8868\u793a\u6210\u529f\uff01 C:\\Users\\user>python --version Python 3.9.6 #\ud83d\udc47\u672a\u6dfb\u52a0\u81f3\u73af\u5883\u53d8\u91cf C:\\Users\\user>python --version 'python' \u4e0d\u662f\u5185\u90e8\u6216\u5916\u90e8\u547d\u4ee4\uff0c\u4e5f\u4e0d\u662f\u53ef\u8fd0\u884c\u7684\u7a0b\u5e8f \u6216\u6279\u5904\u7406\u6587\u4ef6\u3002","title":"\u73af\u5883\u5b89\u88c5"},{"location":"user/environment/#mirai-api-http","text":"\u5728\u5b89\u88c5\u597dmah\u63d2\u4ef6\u540e\uff0c\u542f\u52a8mcl\uff0c\u627e\u5230mah\u7684\u914d\u7f6e\u6587\u4ef6 setting.yml mah\u7684\u5b98\u65b9\u4ed3\u5e93readme\u4e2d\u6709 setting.yml \u7684\u914d\u7f6e\u6a21\u677f \u5fc5\u987b \u7684\u914d\u7f6e\u9879\u6709\uff1a adapters: - http enableVerify: true singleMode: false \u82e5\u65e0\u81ea\u5b9a\u4e49\u9700\u6c42\uff0c\u4e5f\u53ef\u4ee5\u590d\u5236\u7c98\u8d34\u4ee5\u4e0b\u6a21\u677f adapters: - http enableVerify: true verifyKey: abcd1234efgh # \u8be5\u503c\u4e3a\u9a8c\u8bc1\u7528\u5bc6\u94a5\uff0c\u8bf7\u81ea\u884c\u4fee\u6539 debug: false singleMode: false cacheSize: 4096 adapterSettings: http: host: 0.0.0.0 port: 8081 # \u9047\u7aef\u53e3\u53f7\u5360\u7528\u65f6\uff0c\u8bf7\u4fee\u6539\u8be5\u503c cors: [\"*\"] unreadQueueMaxSize: 100 \u51fa\u73b0\u5982\u4e0b\u5b57\u6837\u65f6\uff0c\u8868\u660emah\u542f\u52a8\u6210\u529f \u82e5\u51fa\u73b0\u5982\u4e0b\u5b57\u6837\uff0c\u8868\u660emah\u7684\u7aef\u53e3\u88ab\u5360\u7528\uff0c\u8bf7\u4fee\u6539\u7aef\u53e3\u53f7\u540e\u91cd\u65b0\u5c1d\u8bd5","title":"\u914d\u7f6e mirai-api-http"},{"location":"user/environment/#python","text":"\u4ee5windows\u7cfb\u7edf\u4e3a\u4f8b\uff0clinux\u7cfb\u7edf\u57fa\u672c\u81ea\u5e26python \u524d\u5f80 python\u5b98\u7f51 \u4e0b\u8f7dpython\u5e76\u5b89\u88c5 \uff08\u7248\u672c\u22653.7\uff09 [x] Add Python xx to PATH \ud83d\udc48 \u5207\u8bb0 \u5b89\u88c5\u65f6\u6b64\u9879\u8981\u9009\u4e2d\uff08\u9519\u9009\u8bf7\u81ea\u884c\u67e5\u627e\u5c06Python\u6dfb\u52a0\u81f3\u73af\u5883\u53d8\u91cf\u7684\u65b9\u6cd5\uff09 \u6253\u5f00CMD\uff0c\u8f93\u5165 python --version >\u51fa\u73b0\u5982\u4e0b\u7ed3\u679c\u65f6\u8868\u793a\u6210\u529f\uff01 C:\\Users\\user>python --version Python 3.9.6 #\ud83d\udc47\u672a\u6dfb\u52a0\u81f3\u73af\u5883\u53d8\u91cf C:\\Users\\user>python --version 'python' \u4e0d\u662f\u5185\u90e8\u6216\u5916\u90e8\u547d\u4ee4\uff0c\u4e5f\u4e0d\u662f\u53ef\u8fd0\u884c\u7684\u7a0b\u5e8f \u6216\u6279\u5904\u7406\u6587\u4ef6\u3002","title":"\u5b89\u88c5Python"},{"location":"user/plugin/","text":"\u4f7f\u7528git\u5de5\u5177\uff08\u63a8\u8350\uff09 \u5b89\u88c5git \u4ece git\u5b98\u7f51 \u4e0b\u8f7dgit\u5de5\u5177\u5e76\u5b89\u88c5 \u4f7f\u7528git\u4e0b\u8f7d\u63d2\u4ef6 cd\u81f3MPL\u7684\u76ee\u5f55\u4e0b\uff0cWindows\u53ef\u901a\u8fc7\u5728MPL\u76ee\u5f55\u4e0b\u53f3\u51fb\u7a7a\u767d\u5904\u9009\u62e9 Git Bash Here \u6216\u5728\u6b64\u5904\u6253\u5f00cmd \u8f93\u5165 git clone xxxxx/. \u7b49\u5f85\u4e0b\u8f7d\u5b8c\u6210\u5373\u53ef\uff08xxxxx\u4e3a\u5f00\u53d1\u8005\u63d0\u4f9b\u7684\u63d2\u4ef6\u4ed3\u5e93\u5730\u5740\uff09 \u76f4\u63a5\u4e0b\u8f7d\u63d2\u4ef6 \u5c06\u63d2\u4ef6\u6587\u4ef6\u5939\u79fb\u52a8\u5230MPL\u76ee\u5f55\u4e0b\u7684plugins\u6587\u4ef6\u5939\u5185\u5373\u53ef","title":"\u5b89\u88c5\u63d2\u4ef6"},{"location":"user/plugin/#git","text":"","title":"\u4f7f\u7528git\u5de5\u5177\uff08\u63a8\u8350\uff09"},{"location":"user/plugin/#git_1","text":"\u4ece git\u5b98\u7f51 \u4e0b\u8f7dgit\u5de5\u5177\u5e76\u5b89\u88c5","title":"\u5b89\u88c5git"},{"location":"user/plugin/#git_2","text":"cd\u81f3MPL\u7684\u76ee\u5f55\u4e0b\uff0cWindows\u53ef\u901a\u8fc7\u5728MPL\u76ee\u5f55\u4e0b\u53f3\u51fb\u7a7a\u767d\u5904\u9009\u62e9 Git Bash Here \u6216\u5728\u6b64\u5904\u6253\u5f00cmd \u8f93\u5165 git clone xxxxx/. \u7b49\u5f85\u4e0b\u8f7d\u5b8c\u6210\u5373\u53ef\uff08xxxxx\u4e3a\u5f00\u53d1\u8005\u63d0\u4f9b\u7684\u63d2\u4ef6\u4ed3\u5e93\u5730\u5740\uff09","title":"\u4f7f\u7528git\u4e0b\u8f7d\u63d2\u4ef6"},{"location":"user/plugin/#_1","text":"\u5c06\u63d2\u4ef6\u6587\u4ef6\u5939\u79fb\u52a8\u5230MPL\u76ee\u5f55\u4e0b\u7684plugins\u6587\u4ef6\u5939\u5185\u5373\u53ef","title":"\u76f4\u63a5\u4e0b\u8f7d\u63d2\u4ef6"},{"location":"user/use/","text":"\u4e0b\u8f7dMPL \u524d\u5f80 github-release \uff0c\u4e0b\u8f7d\u6700\u65b0\u7248\u672c\u7684MPL \u89e3\u538b\u538b\u7f29\u5305\uff08\u53ef\u4e0emcl\u76ee\u5f55\u5206\u79bb\uff09 \u5f00\u59cb\u4f7f\u7528 \u6253\u5f00MPL\u76ee\u5f55\u4e2d\u7684 data.json \u6587\u4ef6 \u586b\u5199\u914d\u7f6e\uff0c\u4e0emah\u63d2\u4ef6\u7684 setting.yml \u5bf9\u5e94\uff08\u5176\u4e2dKey\u5bf9\u5e94verifyKey\uff0c\u672c\u5730\u8fd0\u884chost\u586b\u5199127.0.0.1\uff0c\u8fdc\u7a0b\u8fd0\u884chost\u586b\u5199mcl\u6240\u5728\u670d\u52a1\u5668\u7684ip\u5730\u5740\uff0cqq\u662f\u5728mcl\u767b\u5f55\u7684qq\u53f7\uff0c\u591a\u4e2aqq\u53ef\u7528\u82f1\u6587\u9017\u53f7\u9694\u5f00\uff09 \u542f\u52a8 mcl \uff0c\u767b\u5f55bot \u8fd0\u884c start.bat","title":"\u542f\u52a8MPL"},{"location":"user/use/#mpl","text":"\u524d\u5f80 github-release \uff0c\u4e0b\u8f7d\u6700\u65b0\u7248\u672c\u7684MPL \u89e3\u538b\u538b\u7f29\u5305\uff08\u53ef\u4e0emcl\u76ee\u5f55\u5206\u79bb\uff09","title":"\u4e0b\u8f7dMPL"},{"location":"user/use/#_1","text":"\u6253\u5f00MPL\u76ee\u5f55\u4e2d\u7684 data.json \u6587\u4ef6 \u586b\u5199\u914d\u7f6e\uff0c\u4e0emah\u63d2\u4ef6\u7684 setting.yml \u5bf9\u5e94\uff08\u5176\u4e2dKey\u5bf9\u5e94verifyKey\uff0c\u672c\u5730\u8fd0\u884chost\u586b\u5199127.0.0.1\uff0c\u8fdc\u7a0b\u8fd0\u884chost\u586b\u5199mcl\u6240\u5728\u670d\u52a1\u5668\u7684ip\u5730\u5740\uff0cqq\u662f\u5728mcl\u767b\u5f55\u7684qq\u53f7\uff0c\u591a\u4e2aqq\u53ef\u7528\u82f1\u6587\u9017\u53f7\u9694\u5f00\uff09 \u542f\u52a8 mcl \uff0c\u767b\u5f55bot \u8fd0\u884c start.bat","title":"\u5f00\u59cb\u4f7f\u7528"}]}